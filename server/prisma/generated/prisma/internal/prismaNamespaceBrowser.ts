
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"

export type * from '../models.js'
export type * from './prismaNamespace.js'

export const Decimal = runtime.Decimal


export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.DbNull),
  JsonNull: runtime.objectEnumValues.classes.JsonNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.JsonNull),
  AnyNull: runtime.objectEnumValues.classes.AnyNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.AnyNull),
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull


export const ModelName = {
  auto: 'auto',
  parts: 'parts',
  service_logs: 'service_logs',
  servicetype: 'servicetype',
  shops: 'shops',
  suppliers: 'suppliers',
  technicians: 'technicians',
  users: 'users',
  vehicle_history: 'vehicle_history',
  vehiclemaintenance: 'vehiclemaintenance'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const AutoScalarFieldEnum = {
  vin_id: 'vin_id',
  vin: 'vin',
  make: 'make',
  model: 'model',
  vehicle_year: 'vehicle_year',
  miles: 'miles',
  owner_id: 'owner_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
} as const

export type AutoScalarFieldEnum = (typeof AutoScalarFieldEnum)[keyof typeof AutoScalarFieldEnum]


export const PartsScalarFieldEnum = {
  part_id: 'part_id',
  maintenance_id: 'maintenance_id',
  part_name: 'part_name',
  part_number: 'part_number',
  part_type: 'part_type',
  brand: 'brand',
  quantity: 'quantity',
  unit_cost: 'unit_cost',
  total_cost: 'total_cost',
  supplier_name: 'supplier_name',
  purchase_date: 'purchase_date',
  under_warranty: 'under_warranty',
  warranty_expiration: 'warranty_expiration',
  created_by: 'created_by',
  created_date: 'created_date',
  updated_date: 'updated_date',
  notes: 'notes'
} as const

export type PartsScalarFieldEnum = (typeof PartsScalarFieldEnum)[keyof typeof PartsScalarFieldEnum]


export const Service_logsScalarFieldEnum = {
  log_id: 'log_id',
  maintenance_id: 'maintenance_id',
  log_date: 'log_date',
  notes: 'notes',
  user_id: 'user_id'
} as const

export type Service_logsScalarFieldEnum = (typeof Service_logsScalarFieldEnum)[keyof typeof Service_logsScalarFieldEnum]


export const ServicetypeScalarFieldEnum = {
  servicetype_id: 'servicetype_id',
  servicename: 'servicename',
  servicecategory: 'servicecategory',
  description: 'description',
  intervalmiles: 'intervalmiles',
  intervalmonths: 'intervalmonths',
  estimatedlaborhours: 'estimatedlaborhours',
  standardpartscost: 'standardpartscost',
  isactive: 'isactive',
  createddate: 'createddate',
  createdby: 'createdby',
  updateddate: 'updateddate'
} as const

export type ServicetypeScalarFieldEnum = (typeof ServicetypeScalarFieldEnum)[keyof typeof ServicetypeScalarFieldEnum]


export const ShopsScalarFieldEnum = {
  shop_id: 'shop_id',
  shop_name: 'shop_name',
  phone: 'phone',
  email: 'email',
  address: 'address',
  notes: 'notes'
} as const

export type ShopsScalarFieldEnum = (typeof ShopsScalarFieldEnum)[keyof typeof ShopsScalarFieldEnum]


export const SuppliersScalarFieldEnum = {
  supplier_id: 'supplier_id',
  supplier_name: 'supplier_name',
  contact_name: 'contact_name',
  phone: 'phone'
} as const

export type SuppliersScalarFieldEnum = (typeof SuppliersScalarFieldEnum)[keyof typeof SuppliersScalarFieldEnum]


export const TechniciansScalarFieldEnum = {
  technician_id: 'technician_id',
  user_id: 'user_id',
  certification: 'certification',
  is_active: 'is_active',
  notes: 'notes'
} as const

export type TechniciansScalarFieldEnum = (typeof TechniciansScalarFieldEnum)[keyof typeof TechniciansScalarFieldEnum]


export const UsersScalarFieldEnum = {
  user_id: 'user_id',
  first_name: 'first_name',
  last_name: 'last_name',
  phone_number: 'phone_number',
  email: 'email',
  dob: 'dob',
  street_address: 'street_address',
  city: 'city',
  state_province: 'state_province',
  postal_code: 'postal_code',
  country: 'country',
  created_at: 'created_at',
  updated_at: 'updated_at',
  mechanic_rating: 'mechanic_rating'
} as const

export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


export const Vehicle_historyScalarFieldEnum = {
  history_id: 'history_id',
  vehicle_id: 'vehicle_id',
  user_id: 'user_id',
  registered: 'registered',
  registered_start: 'registered_start',
  registered_end: 'registered_end'
} as const

export type Vehicle_historyScalarFieldEnum = (typeof Vehicle_historyScalarFieldEnum)[keyof typeof Vehicle_historyScalarFieldEnum]


export const VehiclemaintenanceScalarFieldEnum = {
  maintenance_id: 'maintenance_id',
  vehicle_id: 'vehicle_id',
  vehiclename: 'vehiclename',
  mainttype: 'mainttype',
  description: 'description',
  status: 'status',
  odometerreading: 'odometerreading',
  completeddate: 'completeddate',
  servicelocation: 'servicelocation',
  downhours: 'downhours',
  costlabor: 'costlabor',
  costpart: 'costpart',
  partsused: 'partsused',
  warrantystatus: 'warrantystatus',
  notes: 'notes',
  createdby: 'createdby',
  createddate: 'createddate',
  updateddate: 'updateddate',
  isactive: 'isactive',
  servicetype_id: 'servicetype_id',
  totalcost: 'totalcost',
  technician_type: 'technician_type',
  technician_id: 'technician_id',
  shop_id: 'shop_id'
} as const

export type VehiclemaintenanceScalarFieldEnum = (typeof VehiclemaintenanceScalarFieldEnum)[keyof typeof VehiclemaintenanceScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]

