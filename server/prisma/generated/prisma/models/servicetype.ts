
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `servicetype` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model servicetype
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type servicetypeModel = runtime.Types.Result.DefaultSelection<Prisma.$servicetypePayload>

export type AggregateServicetype = {
  _count: ServicetypeCountAggregateOutputType | null
  _avg: ServicetypeAvgAggregateOutputType | null
  _sum: ServicetypeSumAggregateOutputType | null
  _min: ServicetypeMinAggregateOutputType | null
  _max: ServicetypeMaxAggregateOutputType | null
}

export type ServicetypeAvgAggregateOutputType = {
  servicetype_id: number | null
  intervalmiles: number | null
  intervalmonths: number | null
  estimatedlaborhours: runtime.Decimal | null
  standardpartscost: runtime.Decimal | null
}

export type ServicetypeSumAggregateOutputType = {
  servicetype_id: number | null
  intervalmiles: number | null
  intervalmonths: number | null
  estimatedlaborhours: runtime.Decimal | null
  standardpartscost: runtime.Decimal | null
}

export type ServicetypeMinAggregateOutputType = {
  servicetype_id: number | null
  servicename: string | null
  servicecategory: string | null
  description: string | null
  intervalmiles: number | null
  intervalmonths: number | null
  estimatedlaborhours: runtime.Decimal | null
  standardpartscost: runtime.Decimal | null
  isactive: boolean | null
  createddate: Date | null
  createdby: string | null
  updateddate: Date | null
}

export type ServicetypeMaxAggregateOutputType = {
  servicetype_id: number | null
  servicename: string | null
  servicecategory: string | null
  description: string | null
  intervalmiles: number | null
  intervalmonths: number | null
  estimatedlaborhours: runtime.Decimal | null
  standardpartscost: runtime.Decimal | null
  isactive: boolean | null
  createddate: Date | null
  createdby: string | null
  updateddate: Date | null
}

export type ServicetypeCountAggregateOutputType = {
  servicetype_id: number
  servicename: number
  servicecategory: number
  description: number
  intervalmiles: number
  intervalmonths: number
  estimatedlaborhours: number
  standardpartscost: number
  isactive: number
  createddate: number
  createdby: number
  updateddate: number
  _all: number
}


export type ServicetypeAvgAggregateInputType = {
  servicetype_id?: true
  intervalmiles?: true
  intervalmonths?: true
  estimatedlaborhours?: true
  standardpartscost?: true
}

export type ServicetypeSumAggregateInputType = {
  servicetype_id?: true
  intervalmiles?: true
  intervalmonths?: true
  estimatedlaborhours?: true
  standardpartscost?: true
}

export type ServicetypeMinAggregateInputType = {
  servicetype_id?: true
  servicename?: true
  servicecategory?: true
  description?: true
  intervalmiles?: true
  intervalmonths?: true
  estimatedlaborhours?: true
  standardpartscost?: true
  isactive?: true
  createddate?: true
  createdby?: true
  updateddate?: true
}

export type ServicetypeMaxAggregateInputType = {
  servicetype_id?: true
  servicename?: true
  servicecategory?: true
  description?: true
  intervalmiles?: true
  intervalmonths?: true
  estimatedlaborhours?: true
  standardpartscost?: true
  isactive?: true
  createddate?: true
  createdby?: true
  updateddate?: true
}

export type ServicetypeCountAggregateInputType = {
  servicetype_id?: true
  servicename?: true
  servicecategory?: true
  description?: true
  intervalmiles?: true
  intervalmonths?: true
  estimatedlaborhours?: true
  standardpartscost?: true
  isactive?: true
  createddate?: true
  createdby?: true
  updateddate?: true
  _all?: true
}

export type ServicetypeAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which servicetype to aggregate.
   */
  where?: Prisma.servicetypeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of servicetypes to fetch.
   */
  orderBy?: Prisma.servicetypeOrderByWithRelationInput | Prisma.servicetypeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.servicetypeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` servicetypes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` servicetypes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned servicetypes
  **/
  _count?: true | ServicetypeCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ServicetypeAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ServicetypeSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ServicetypeMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ServicetypeMaxAggregateInputType
}

export type GetServicetypeAggregateType<T extends ServicetypeAggregateArgs> = {
      [P in keyof T & keyof AggregateServicetype]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateServicetype[P]>
    : Prisma.GetScalarType<T[P], AggregateServicetype[P]>
}




export type servicetypeGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.servicetypeWhereInput
  orderBy?: Prisma.servicetypeOrderByWithAggregationInput | Prisma.servicetypeOrderByWithAggregationInput[]
  by: Prisma.ServicetypeScalarFieldEnum[] | Prisma.ServicetypeScalarFieldEnum
  having?: Prisma.servicetypeScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ServicetypeCountAggregateInputType | true
  _avg?: ServicetypeAvgAggregateInputType
  _sum?: ServicetypeSumAggregateInputType
  _min?: ServicetypeMinAggregateInputType
  _max?: ServicetypeMaxAggregateInputType
}

export type ServicetypeGroupByOutputType = {
  servicetype_id: number
  servicename: string
  servicecategory: string
  description: string | null
  intervalmiles: number | null
  intervalmonths: number | null
  estimatedlaborhours: runtime.Decimal | null
  standardpartscost: runtime.Decimal | null
  isactive: boolean
  createddate: Date | null
  createdby: string
  updateddate: Date | null
  _count: ServicetypeCountAggregateOutputType | null
  _avg: ServicetypeAvgAggregateOutputType | null
  _sum: ServicetypeSumAggregateOutputType | null
  _min: ServicetypeMinAggregateOutputType | null
  _max: ServicetypeMaxAggregateOutputType | null
}

type GetServicetypeGroupByPayload<T extends servicetypeGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ServicetypeGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ServicetypeGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ServicetypeGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ServicetypeGroupByOutputType[P]>
      }
    >
  >



export type servicetypeWhereInput = {
  AND?: Prisma.servicetypeWhereInput | Prisma.servicetypeWhereInput[]
  OR?: Prisma.servicetypeWhereInput[]
  NOT?: Prisma.servicetypeWhereInput | Prisma.servicetypeWhereInput[]
  servicetype_id?: Prisma.IntFilter<"servicetype"> | number
  servicename?: Prisma.StringFilter<"servicetype"> | string
  servicecategory?: Prisma.StringFilter<"servicetype"> | string
  description?: Prisma.StringNullableFilter<"servicetype"> | string | null
  intervalmiles?: Prisma.IntNullableFilter<"servicetype"> | number | null
  intervalmonths?: Prisma.IntNullableFilter<"servicetype"> | number | null
  estimatedlaborhours?: Prisma.DecimalNullableFilter<"servicetype"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  standardpartscost?: Prisma.DecimalNullableFilter<"servicetype"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  isactive?: Prisma.BoolFilter<"servicetype"> | boolean
  createddate?: Prisma.DateTimeNullableFilter<"servicetype"> | Date | string | null
  createdby?: Prisma.StringFilter<"servicetype"> | string
  updateddate?: Prisma.DateTimeNullableFilter<"servicetype"> | Date | string | null
  vehiclemaintenance?: Prisma.VehiclemaintenanceListRelationFilter
}

export type servicetypeOrderByWithRelationInput = {
  servicetype_id?: Prisma.SortOrder
  servicename?: Prisma.SortOrder
  servicecategory?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  intervalmiles?: Prisma.SortOrderInput | Prisma.SortOrder
  intervalmonths?: Prisma.SortOrderInput | Prisma.SortOrder
  estimatedlaborhours?: Prisma.SortOrderInput | Prisma.SortOrder
  standardpartscost?: Prisma.SortOrderInput | Prisma.SortOrder
  isactive?: Prisma.SortOrder
  createddate?: Prisma.SortOrderInput | Prisma.SortOrder
  createdby?: Prisma.SortOrder
  updateddate?: Prisma.SortOrderInput | Prisma.SortOrder
  vehiclemaintenance?: Prisma.vehiclemaintenanceOrderByRelationAggregateInput
}

export type servicetypeWhereUniqueInput = Prisma.AtLeast<{
  servicetype_id?: number
  AND?: Prisma.servicetypeWhereInput | Prisma.servicetypeWhereInput[]
  OR?: Prisma.servicetypeWhereInput[]
  NOT?: Prisma.servicetypeWhereInput | Prisma.servicetypeWhereInput[]
  servicename?: Prisma.StringFilter<"servicetype"> | string
  servicecategory?: Prisma.StringFilter<"servicetype"> | string
  description?: Prisma.StringNullableFilter<"servicetype"> | string | null
  intervalmiles?: Prisma.IntNullableFilter<"servicetype"> | number | null
  intervalmonths?: Prisma.IntNullableFilter<"servicetype"> | number | null
  estimatedlaborhours?: Prisma.DecimalNullableFilter<"servicetype"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  standardpartscost?: Prisma.DecimalNullableFilter<"servicetype"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  isactive?: Prisma.BoolFilter<"servicetype"> | boolean
  createddate?: Prisma.DateTimeNullableFilter<"servicetype"> | Date | string | null
  createdby?: Prisma.StringFilter<"servicetype"> | string
  updateddate?: Prisma.DateTimeNullableFilter<"servicetype"> | Date | string | null
  vehiclemaintenance?: Prisma.VehiclemaintenanceListRelationFilter
}, "servicetype_id">

export type servicetypeOrderByWithAggregationInput = {
  servicetype_id?: Prisma.SortOrder
  servicename?: Prisma.SortOrder
  servicecategory?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  intervalmiles?: Prisma.SortOrderInput | Prisma.SortOrder
  intervalmonths?: Prisma.SortOrderInput | Prisma.SortOrder
  estimatedlaborhours?: Prisma.SortOrderInput | Prisma.SortOrder
  standardpartscost?: Prisma.SortOrderInput | Prisma.SortOrder
  isactive?: Prisma.SortOrder
  createddate?: Prisma.SortOrderInput | Prisma.SortOrder
  createdby?: Prisma.SortOrder
  updateddate?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.servicetypeCountOrderByAggregateInput
  _avg?: Prisma.servicetypeAvgOrderByAggregateInput
  _max?: Prisma.servicetypeMaxOrderByAggregateInput
  _min?: Prisma.servicetypeMinOrderByAggregateInput
  _sum?: Prisma.servicetypeSumOrderByAggregateInput
}

export type servicetypeScalarWhereWithAggregatesInput = {
  AND?: Prisma.servicetypeScalarWhereWithAggregatesInput | Prisma.servicetypeScalarWhereWithAggregatesInput[]
  OR?: Prisma.servicetypeScalarWhereWithAggregatesInput[]
  NOT?: Prisma.servicetypeScalarWhereWithAggregatesInput | Prisma.servicetypeScalarWhereWithAggregatesInput[]
  servicetype_id?: Prisma.IntWithAggregatesFilter<"servicetype"> | number
  servicename?: Prisma.StringWithAggregatesFilter<"servicetype"> | string
  servicecategory?: Prisma.StringWithAggregatesFilter<"servicetype"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"servicetype"> | string | null
  intervalmiles?: Prisma.IntNullableWithAggregatesFilter<"servicetype"> | number | null
  intervalmonths?: Prisma.IntNullableWithAggregatesFilter<"servicetype"> | number | null
  estimatedlaborhours?: Prisma.DecimalNullableWithAggregatesFilter<"servicetype"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  standardpartscost?: Prisma.DecimalNullableWithAggregatesFilter<"servicetype"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  isactive?: Prisma.BoolWithAggregatesFilter<"servicetype"> | boolean
  createddate?: Prisma.DateTimeNullableWithAggregatesFilter<"servicetype"> | Date | string | null
  createdby?: Prisma.StringWithAggregatesFilter<"servicetype"> | string
  updateddate?: Prisma.DateTimeNullableWithAggregatesFilter<"servicetype"> | Date | string | null
}

export type servicetypeCreateInput = {
  servicename: string
  servicecategory: string
  description?: string | null
  intervalmiles?: number | null
  intervalmonths?: number | null
  estimatedlaborhours?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  standardpartscost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  isactive: boolean
  createddate?: Date | string | null
  createdby: string
  updateddate?: Date | string | null
  vehiclemaintenance?: Prisma.vehiclemaintenanceCreateNestedManyWithoutServicetypeInput
}

export type servicetypeUncheckedCreateInput = {
  servicetype_id?: number
  servicename: string
  servicecategory: string
  description?: string | null
  intervalmiles?: number | null
  intervalmonths?: number | null
  estimatedlaborhours?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  standardpartscost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  isactive: boolean
  createddate?: Date | string | null
  createdby: string
  updateddate?: Date | string | null
  vehiclemaintenance?: Prisma.vehiclemaintenanceUncheckedCreateNestedManyWithoutServicetypeInput
}

export type servicetypeUpdateInput = {
  servicename?: Prisma.StringFieldUpdateOperationsInput | string
  servicecategory?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  intervalmiles?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  intervalmonths?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  estimatedlaborhours?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  standardpartscost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  isactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createddate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdby?: Prisma.StringFieldUpdateOperationsInput | string
  updateddate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  vehiclemaintenance?: Prisma.vehiclemaintenanceUpdateManyWithoutServicetypeNestedInput
}

export type servicetypeUncheckedUpdateInput = {
  servicetype_id?: Prisma.IntFieldUpdateOperationsInput | number
  servicename?: Prisma.StringFieldUpdateOperationsInput | string
  servicecategory?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  intervalmiles?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  intervalmonths?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  estimatedlaborhours?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  standardpartscost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  isactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createddate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdby?: Prisma.StringFieldUpdateOperationsInput | string
  updateddate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  vehiclemaintenance?: Prisma.vehiclemaintenanceUncheckedUpdateManyWithoutServicetypeNestedInput
}

export type servicetypeCreateManyInput = {
  servicetype_id?: number
  servicename: string
  servicecategory: string
  description?: string | null
  intervalmiles?: number | null
  intervalmonths?: number | null
  estimatedlaborhours?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  standardpartscost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  isactive: boolean
  createddate?: Date | string | null
  createdby: string
  updateddate?: Date | string | null
}

export type servicetypeUpdateManyMutationInput = {
  servicename?: Prisma.StringFieldUpdateOperationsInput | string
  servicecategory?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  intervalmiles?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  intervalmonths?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  estimatedlaborhours?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  standardpartscost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  isactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createddate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdby?: Prisma.StringFieldUpdateOperationsInput | string
  updateddate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type servicetypeUncheckedUpdateManyInput = {
  servicetype_id?: Prisma.IntFieldUpdateOperationsInput | number
  servicename?: Prisma.StringFieldUpdateOperationsInput | string
  servicecategory?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  intervalmiles?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  intervalmonths?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  estimatedlaborhours?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  standardpartscost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  isactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createddate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdby?: Prisma.StringFieldUpdateOperationsInput | string
  updateddate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type servicetypeCountOrderByAggregateInput = {
  servicetype_id?: Prisma.SortOrder
  servicename?: Prisma.SortOrder
  servicecategory?: Prisma.SortOrder
  description?: Prisma.SortOrder
  intervalmiles?: Prisma.SortOrder
  intervalmonths?: Prisma.SortOrder
  estimatedlaborhours?: Prisma.SortOrder
  standardpartscost?: Prisma.SortOrder
  isactive?: Prisma.SortOrder
  createddate?: Prisma.SortOrder
  createdby?: Prisma.SortOrder
  updateddate?: Prisma.SortOrder
}

export type servicetypeAvgOrderByAggregateInput = {
  servicetype_id?: Prisma.SortOrder
  intervalmiles?: Prisma.SortOrder
  intervalmonths?: Prisma.SortOrder
  estimatedlaborhours?: Prisma.SortOrder
  standardpartscost?: Prisma.SortOrder
}

export type servicetypeMaxOrderByAggregateInput = {
  servicetype_id?: Prisma.SortOrder
  servicename?: Prisma.SortOrder
  servicecategory?: Prisma.SortOrder
  description?: Prisma.SortOrder
  intervalmiles?: Prisma.SortOrder
  intervalmonths?: Prisma.SortOrder
  estimatedlaborhours?: Prisma.SortOrder
  standardpartscost?: Prisma.SortOrder
  isactive?: Prisma.SortOrder
  createddate?: Prisma.SortOrder
  createdby?: Prisma.SortOrder
  updateddate?: Prisma.SortOrder
}

export type servicetypeMinOrderByAggregateInput = {
  servicetype_id?: Prisma.SortOrder
  servicename?: Prisma.SortOrder
  servicecategory?: Prisma.SortOrder
  description?: Prisma.SortOrder
  intervalmiles?: Prisma.SortOrder
  intervalmonths?: Prisma.SortOrder
  estimatedlaborhours?: Prisma.SortOrder
  standardpartscost?: Prisma.SortOrder
  isactive?: Prisma.SortOrder
  createddate?: Prisma.SortOrder
  createdby?: Prisma.SortOrder
  updateddate?: Prisma.SortOrder
}

export type servicetypeSumOrderByAggregateInput = {
  servicetype_id?: Prisma.SortOrder
  intervalmiles?: Prisma.SortOrder
  intervalmonths?: Prisma.SortOrder
  estimatedlaborhours?: Prisma.SortOrder
  standardpartscost?: Prisma.SortOrder
}

export type ServicetypeNullableScalarRelationFilter = {
  is?: Prisma.servicetypeWhereInput | null
  isNot?: Prisma.servicetypeWhereInput | null
}

export type servicetypeCreateNestedOneWithoutVehiclemaintenanceInput = {
  create?: Prisma.XOR<Prisma.servicetypeCreateWithoutVehiclemaintenanceInput, Prisma.servicetypeUncheckedCreateWithoutVehiclemaintenanceInput>
  connectOrCreate?: Prisma.servicetypeCreateOrConnectWithoutVehiclemaintenanceInput
  connect?: Prisma.servicetypeWhereUniqueInput
}

export type servicetypeUpdateOneWithoutVehiclemaintenanceNestedInput = {
  create?: Prisma.XOR<Prisma.servicetypeCreateWithoutVehiclemaintenanceInput, Prisma.servicetypeUncheckedCreateWithoutVehiclemaintenanceInput>
  connectOrCreate?: Prisma.servicetypeCreateOrConnectWithoutVehiclemaintenanceInput
  upsert?: Prisma.servicetypeUpsertWithoutVehiclemaintenanceInput
  disconnect?: Prisma.servicetypeWhereInput | boolean
  delete?: Prisma.servicetypeWhereInput | boolean
  connect?: Prisma.servicetypeWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.servicetypeUpdateToOneWithWhereWithoutVehiclemaintenanceInput, Prisma.servicetypeUpdateWithoutVehiclemaintenanceInput>, Prisma.servicetypeUncheckedUpdateWithoutVehiclemaintenanceInput>
}

export type servicetypeCreateWithoutVehiclemaintenanceInput = {
  servicename: string
  servicecategory: string
  description?: string | null
  intervalmiles?: number | null
  intervalmonths?: number | null
  estimatedlaborhours?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  standardpartscost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  isactive: boolean
  createddate?: Date | string | null
  createdby: string
  updateddate?: Date | string | null
}

export type servicetypeUncheckedCreateWithoutVehiclemaintenanceInput = {
  servicetype_id?: number
  servicename: string
  servicecategory: string
  description?: string | null
  intervalmiles?: number | null
  intervalmonths?: number | null
  estimatedlaborhours?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  standardpartscost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  isactive: boolean
  createddate?: Date | string | null
  createdby: string
  updateddate?: Date | string | null
}

export type servicetypeCreateOrConnectWithoutVehiclemaintenanceInput = {
  where: Prisma.servicetypeWhereUniqueInput
  create: Prisma.XOR<Prisma.servicetypeCreateWithoutVehiclemaintenanceInput, Prisma.servicetypeUncheckedCreateWithoutVehiclemaintenanceInput>
}

export type servicetypeUpsertWithoutVehiclemaintenanceInput = {
  update: Prisma.XOR<Prisma.servicetypeUpdateWithoutVehiclemaintenanceInput, Prisma.servicetypeUncheckedUpdateWithoutVehiclemaintenanceInput>
  create: Prisma.XOR<Prisma.servicetypeCreateWithoutVehiclemaintenanceInput, Prisma.servicetypeUncheckedCreateWithoutVehiclemaintenanceInput>
  where?: Prisma.servicetypeWhereInput
}

export type servicetypeUpdateToOneWithWhereWithoutVehiclemaintenanceInput = {
  where?: Prisma.servicetypeWhereInput
  data: Prisma.XOR<Prisma.servicetypeUpdateWithoutVehiclemaintenanceInput, Prisma.servicetypeUncheckedUpdateWithoutVehiclemaintenanceInput>
}

export type servicetypeUpdateWithoutVehiclemaintenanceInput = {
  servicename?: Prisma.StringFieldUpdateOperationsInput | string
  servicecategory?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  intervalmiles?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  intervalmonths?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  estimatedlaborhours?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  standardpartscost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  isactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createddate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdby?: Prisma.StringFieldUpdateOperationsInput | string
  updateddate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type servicetypeUncheckedUpdateWithoutVehiclemaintenanceInput = {
  servicetype_id?: Prisma.IntFieldUpdateOperationsInput | number
  servicename?: Prisma.StringFieldUpdateOperationsInput | string
  servicecategory?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  intervalmiles?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  intervalmonths?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  estimatedlaborhours?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  standardpartscost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  isactive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createddate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdby?: Prisma.StringFieldUpdateOperationsInput | string
  updateddate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}


/**
 * Count Type ServicetypeCountOutputType
 */

export type ServicetypeCountOutputType = {
  vehiclemaintenance: number
}

export type ServicetypeCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  vehiclemaintenance?: boolean | ServicetypeCountOutputTypeCountVehiclemaintenanceArgs
}

/**
 * ServicetypeCountOutputType without action
 */
export type ServicetypeCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServicetypeCountOutputType
   */
  select?: Prisma.ServicetypeCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ServicetypeCountOutputType without action
 */
export type ServicetypeCountOutputTypeCountVehiclemaintenanceArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.vehiclemaintenanceWhereInput
}


export type servicetypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  servicetype_id?: boolean
  servicename?: boolean
  servicecategory?: boolean
  description?: boolean
  intervalmiles?: boolean
  intervalmonths?: boolean
  estimatedlaborhours?: boolean
  standardpartscost?: boolean
  isactive?: boolean
  createddate?: boolean
  createdby?: boolean
  updateddate?: boolean
  vehiclemaintenance?: boolean | Prisma.servicetype$vehiclemaintenanceArgs<ExtArgs>
  _count?: boolean | Prisma.ServicetypeCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["servicetype"]>

export type servicetypeSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  servicetype_id?: boolean
  servicename?: boolean
  servicecategory?: boolean
  description?: boolean
  intervalmiles?: boolean
  intervalmonths?: boolean
  estimatedlaborhours?: boolean
  standardpartscost?: boolean
  isactive?: boolean
  createddate?: boolean
  createdby?: boolean
  updateddate?: boolean
}, ExtArgs["result"]["servicetype"]>

export type servicetypeSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  servicetype_id?: boolean
  servicename?: boolean
  servicecategory?: boolean
  description?: boolean
  intervalmiles?: boolean
  intervalmonths?: boolean
  estimatedlaborhours?: boolean
  standardpartscost?: boolean
  isactive?: boolean
  createddate?: boolean
  createdby?: boolean
  updateddate?: boolean
}, ExtArgs["result"]["servicetype"]>

export type servicetypeSelectScalar = {
  servicetype_id?: boolean
  servicename?: boolean
  servicecategory?: boolean
  description?: boolean
  intervalmiles?: boolean
  intervalmonths?: boolean
  estimatedlaborhours?: boolean
  standardpartscost?: boolean
  isactive?: boolean
  createddate?: boolean
  createdby?: boolean
  updateddate?: boolean
}

export type servicetypeOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"servicetype_id" | "servicename" | "servicecategory" | "description" | "intervalmiles" | "intervalmonths" | "estimatedlaborhours" | "standardpartscost" | "isactive" | "createddate" | "createdby" | "updateddate", ExtArgs["result"]["servicetype"]>
export type servicetypeInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  vehiclemaintenance?: boolean | Prisma.servicetype$vehiclemaintenanceArgs<ExtArgs>
  _count?: boolean | Prisma.ServicetypeCountOutputTypeDefaultArgs<ExtArgs>
}
export type servicetypeIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type servicetypeIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $servicetypePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "servicetype"
  objects: {
    vehiclemaintenance: Prisma.$vehiclemaintenancePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    servicetype_id: number
    servicename: string
    servicecategory: string
    description: string | null
    intervalmiles: number | null
    intervalmonths: number | null
    estimatedlaborhours: runtime.Decimal | null
    standardpartscost: runtime.Decimal | null
    isactive: boolean
    createddate: Date | null
    createdby: string
    updateddate: Date | null
  }, ExtArgs["result"]["servicetype"]>
  composites: {}
}

export type servicetypeGetPayload<S extends boolean | null | undefined | servicetypeDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$servicetypePayload, S>

export type servicetypeCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<servicetypeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ServicetypeCountAggregateInputType | true
  }

export interface servicetypeDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['servicetype'], meta: { name: 'servicetype' } }
  /**
   * Find zero or one Servicetype that matches the filter.
   * @param {servicetypeFindUniqueArgs} args - Arguments to find a Servicetype
   * @example
   * // Get one Servicetype
   * const servicetype = await prisma.servicetype.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends servicetypeFindUniqueArgs>(args: Prisma.SelectSubset<T, servicetypeFindUniqueArgs<ExtArgs>>): Prisma.Prisma__servicetypeClient<runtime.Types.Result.GetResult<Prisma.$servicetypePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Servicetype that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {servicetypeFindUniqueOrThrowArgs} args - Arguments to find a Servicetype
   * @example
   * // Get one Servicetype
   * const servicetype = await prisma.servicetype.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends servicetypeFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, servicetypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__servicetypeClient<runtime.Types.Result.GetResult<Prisma.$servicetypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Servicetype that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {servicetypeFindFirstArgs} args - Arguments to find a Servicetype
   * @example
   * // Get one Servicetype
   * const servicetype = await prisma.servicetype.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends servicetypeFindFirstArgs>(args?: Prisma.SelectSubset<T, servicetypeFindFirstArgs<ExtArgs>>): Prisma.Prisma__servicetypeClient<runtime.Types.Result.GetResult<Prisma.$servicetypePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Servicetype that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {servicetypeFindFirstOrThrowArgs} args - Arguments to find a Servicetype
   * @example
   * // Get one Servicetype
   * const servicetype = await prisma.servicetype.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends servicetypeFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, servicetypeFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__servicetypeClient<runtime.Types.Result.GetResult<Prisma.$servicetypePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Servicetypes that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {servicetypeFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Servicetypes
   * const servicetypes = await prisma.servicetype.findMany()
   * 
   * // Get first 10 Servicetypes
   * const servicetypes = await prisma.servicetype.findMany({ take: 10 })
   * 
   * // Only select the `servicetype_id`
   * const servicetypeWithServicetype_idOnly = await prisma.servicetype.findMany({ select: { servicetype_id: true } })
   * 
   */
  findMany<T extends servicetypeFindManyArgs>(args?: Prisma.SelectSubset<T, servicetypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$servicetypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Servicetype.
   * @param {servicetypeCreateArgs} args - Arguments to create a Servicetype.
   * @example
   * // Create one Servicetype
   * const Servicetype = await prisma.servicetype.create({
   *   data: {
   *     // ... data to create a Servicetype
   *   }
   * })
   * 
   */
  create<T extends servicetypeCreateArgs>(args: Prisma.SelectSubset<T, servicetypeCreateArgs<ExtArgs>>): Prisma.Prisma__servicetypeClient<runtime.Types.Result.GetResult<Prisma.$servicetypePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Servicetypes.
   * @param {servicetypeCreateManyArgs} args - Arguments to create many Servicetypes.
   * @example
   * // Create many Servicetypes
   * const servicetype = await prisma.servicetype.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends servicetypeCreateManyArgs>(args?: Prisma.SelectSubset<T, servicetypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Servicetypes and returns the data saved in the database.
   * @param {servicetypeCreateManyAndReturnArgs} args - Arguments to create many Servicetypes.
   * @example
   * // Create many Servicetypes
   * const servicetype = await prisma.servicetype.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Servicetypes and only return the `servicetype_id`
   * const servicetypeWithServicetype_idOnly = await prisma.servicetype.createManyAndReturn({
   *   select: { servicetype_id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends servicetypeCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, servicetypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$servicetypePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Servicetype.
   * @param {servicetypeDeleteArgs} args - Arguments to delete one Servicetype.
   * @example
   * // Delete one Servicetype
   * const Servicetype = await prisma.servicetype.delete({
   *   where: {
   *     // ... filter to delete one Servicetype
   *   }
   * })
   * 
   */
  delete<T extends servicetypeDeleteArgs>(args: Prisma.SelectSubset<T, servicetypeDeleteArgs<ExtArgs>>): Prisma.Prisma__servicetypeClient<runtime.Types.Result.GetResult<Prisma.$servicetypePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Servicetype.
   * @param {servicetypeUpdateArgs} args - Arguments to update one Servicetype.
   * @example
   * // Update one Servicetype
   * const servicetype = await prisma.servicetype.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends servicetypeUpdateArgs>(args: Prisma.SelectSubset<T, servicetypeUpdateArgs<ExtArgs>>): Prisma.Prisma__servicetypeClient<runtime.Types.Result.GetResult<Prisma.$servicetypePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Servicetypes.
   * @param {servicetypeDeleteManyArgs} args - Arguments to filter Servicetypes to delete.
   * @example
   * // Delete a few Servicetypes
   * const { count } = await prisma.servicetype.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends servicetypeDeleteManyArgs>(args?: Prisma.SelectSubset<T, servicetypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Servicetypes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {servicetypeUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Servicetypes
   * const servicetype = await prisma.servicetype.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends servicetypeUpdateManyArgs>(args: Prisma.SelectSubset<T, servicetypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Servicetypes and returns the data updated in the database.
   * @param {servicetypeUpdateManyAndReturnArgs} args - Arguments to update many Servicetypes.
   * @example
   * // Update many Servicetypes
   * const servicetype = await prisma.servicetype.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Servicetypes and only return the `servicetype_id`
   * const servicetypeWithServicetype_idOnly = await prisma.servicetype.updateManyAndReturn({
   *   select: { servicetype_id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends servicetypeUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, servicetypeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$servicetypePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Servicetype.
   * @param {servicetypeUpsertArgs} args - Arguments to update or create a Servicetype.
   * @example
   * // Update or create a Servicetype
   * const servicetype = await prisma.servicetype.upsert({
   *   create: {
   *     // ... data to create a Servicetype
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Servicetype we want to update
   *   }
   * })
   */
  upsert<T extends servicetypeUpsertArgs>(args: Prisma.SelectSubset<T, servicetypeUpsertArgs<ExtArgs>>): Prisma.Prisma__servicetypeClient<runtime.Types.Result.GetResult<Prisma.$servicetypePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Servicetypes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {servicetypeCountArgs} args - Arguments to filter Servicetypes to count.
   * @example
   * // Count the number of Servicetypes
   * const count = await prisma.servicetype.count({
   *   where: {
   *     // ... the filter for the Servicetypes we want to count
   *   }
   * })
  **/
  count<T extends servicetypeCountArgs>(
    args?: Prisma.Subset<T, servicetypeCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ServicetypeCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Servicetype.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ServicetypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ServicetypeAggregateArgs>(args: Prisma.Subset<T, ServicetypeAggregateArgs>): Prisma.PrismaPromise<GetServicetypeAggregateType<T>>

  /**
   * Group by Servicetype.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {servicetypeGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends servicetypeGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: servicetypeGroupByArgs['orderBy'] }
      : { orderBy?: servicetypeGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, servicetypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServicetypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the servicetype model
 */
readonly fields: servicetypeFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for servicetype.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__servicetypeClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  vehiclemaintenance<T extends Prisma.servicetype$vehiclemaintenanceArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.servicetype$vehiclemaintenanceArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$vehiclemaintenancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the servicetype model
 */
export interface servicetypeFieldRefs {
  readonly servicetype_id: Prisma.FieldRef<"servicetype", 'Int'>
  readonly servicename: Prisma.FieldRef<"servicetype", 'String'>
  readonly servicecategory: Prisma.FieldRef<"servicetype", 'String'>
  readonly description: Prisma.FieldRef<"servicetype", 'String'>
  readonly intervalmiles: Prisma.FieldRef<"servicetype", 'Int'>
  readonly intervalmonths: Prisma.FieldRef<"servicetype", 'Int'>
  readonly estimatedlaborhours: Prisma.FieldRef<"servicetype", 'Decimal'>
  readonly standardpartscost: Prisma.FieldRef<"servicetype", 'Decimal'>
  readonly isactive: Prisma.FieldRef<"servicetype", 'Boolean'>
  readonly createddate: Prisma.FieldRef<"servicetype", 'DateTime'>
  readonly createdby: Prisma.FieldRef<"servicetype", 'String'>
  readonly updateddate: Prisma.FieldRef<"servicetype", 'DateTime'>
}
    

// Custom InputTypes
/**
 * servicetype findUnique
 */
export type servicetypeFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the servicetype
   */
  select?: Prisma.servicetypeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the servicetype
   */
  omit?: Prisma.servicetypeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.servicetypeInclude<ExtArgs> | null
  /**
   * Filter, which servicetype to fetch.
   */
  where: Prisma.servicetypeWhereUniqueInput
}

/**
 * servicetype findUniqueOrThrow
 */
export type servicetypeFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the servicetype
   */
  select?: Prisma.servicetypeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the servicetype
   */
  omit?: Prisma.servicetypeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.servicetypeInclude<ExtArgs> | null
  /**
   * Filter, which servicetype to fetch.
   */
  where: Prisma.servicetypeWhereUniqueInput
}

/**
 * servicetype findFirst
 */
export type servicetypeFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the servicetype
   */
  select?: Prisma.servicetypeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the servicetype
   */
  omit?: Prisma.servicetypeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.servicetypeInclude<ExtArgs> | null
  /**
   * Filter, which servicetype to fetch.
   */
  where?: Prisma.servicetypeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of servicetypes to fetch.
   */
  orderBy?: Prisma.servicetypeOrderByWithRelationInput | Prisma.servicetypeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for servicetypes.
   */
  cursor?: Prisma.servicetypeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` servicetypes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` servicetypes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of servicetypes.
   */
  distinct?: Prisma.ServicetypeScalarFieldEnum | Prisma.ServicetypeScalarFieldEnum[]
}

/**
 * servicetype findFirstOrThrow
 */
export type servicetypeFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the servicetype
   */
  select?: Prisma.servicetypeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the servicetype
   */
  omit?: Prisma.servicetypeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.servicetypeInclude<ExtArgs> | null
  /**
   * Filter, which servicetype to fetch.
   */
  where?: Prisma.servicetypeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of servicetypes to fetch.
   */
  orderBy?: Prisma.servicetypeOrderByWithRelationInput | Prisma.servicetypeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for servicetypes.
   */
  cursor?: Prisma.servicetypeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` servicetypes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` servicetypes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of servicetypes.
   */
  distinct?: Prisma.ServicetypeScalarFieldEnum | Prisma.ServicetypeScalarFieldEnum[]
}

/**
 * servicetype findMany
 */
export type servicetypeFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the servicetype
   */
  select?: Prisma.servicetypeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the servicetype
   */
  omit?: Prisma.servicetypeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.servicetypeInclude<ExtArgs> | null
  /**
   * Filter, which servicetypes to fetch.
   */
  where?: Prisma.servicetypeWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of servicetypes to fetch.
   */
  orderBy?: Prisma.servicetypeOrderByWithRelationInput | Prisma.servicetypeOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing servicetypes.
   */
  cursor?: Prisma.servicetypeWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` servicetypes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` servicetypes.
   */
  skip?: number
  distinct?: Prisma.ServicetypeScalarFieldEnum | Prisma.ServicetypeScalarFieldEnum[]
}

/**
 * servicetype create
 */
export type servicetypeCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the servicetype
   */
  select?: Prisma.servicetypeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the servicetype
   */
  omit?: Prisma.servicetypeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.servicetypeInclude<ExtArgs> | null
  /**
   * The data needed to create a servicetype.
   */
  data: Prisma.XOR<Prisma.servicetypeCreateInput, Prisma.servicetypeUncheckedCreateInput>
}

/**
 * servicetype createMany
 */
export type servicetypeCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many servicetypes.
   */
  data: Prisma.servicetypeCreateManyInput | Prisma.servicetypeCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * servicetype createManyAndReturn
 */
export type servicetypeCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the servicetype
   */
  select?: Prisma.servicetypeSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the servicetype
   */
  omit?: Prisma.servicetypeOmit<ExtArgs> | null
  /**
   * The data used to create many servicetypes.
   */
  data: Prisma.servicetypeCreateManyInput | Prisma.servicetypeCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * servicetype update
 */
export type servicetypeUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the servicetype
   */
  select?: Prisma.servicetypeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the servicetype
   */
  omit?: Prisma.servicetypeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.servicetypeInclude<ExtArgs> | null
  /**
   * The data needed to update a servicetype.
   */
  data: Prisma.XOR<Prisma.servicetypeUpdateInput, Prisma.servicetypeUncheckedUpdateInput>
  /**
   * Choose, which servicetype to update.
   */
  where: Prisma.servicetypeWhereUniqueInput
}

/**
 * servicetype updateMany
 */
export type servicetypeUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update servicetypes.
   */
  data: Prisma.XOR<Prisma.servicetypeUpdateManyMutationInput, Prisma.servicetypeUncheckedUpdateManyInput>
  /**
   * Filter which servicetypes to update
   */
  where?: Prisma.servicetypeWhereInput
  /**
   * Limit how many servicetypes to update.
   */
  limit?: number
}

/**
 * servicetype updateManyAndReturn
 */
export type servicetypeUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the servicetype
   */
  select?: Prisma.servicetypeSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the servicetype
   */
  omit?: Prisma.servicetypeOmit<ExtArgs> | null
  /**
   * The data used to update servicetypes.
   */
  data: Prisma.XOR<Prisma.servicetypeUpdateManyMutationInput, Prisma.servicetypeUncheckedUpdateManyInput>
  /**
   * Filter which servicetypes to update
   */
  where?: Prisma.servicetypeWhereInput
  /**
   * Limit how many servicetypes to update.
   */
  limit?: number
}

/**
 * servicetype upsert
 */
export type servicetypeUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the servicetype
   */
  select?: Prisma.servicetypeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the servicetype
   */
  omit?: Prisma.servicetypeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.servicetypeInclude<ExtArgs> | null
  /**
   * The filter to search for the servicetype to update in case it exists.
   */
  where: Prisma.servicetypeWhereUniqueInput
  /**
   * In case the servicetype found by the `where` argument doesn't exist, create a new servicetype with this data.
   */
  create: Prisma.XOR<Prisma.servicetypeCreateInput, Prisma.servicetypeUncheckedCreateInput>
  /**
   * In case the servicetype was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.servicetypeUpdateInput, Prisma.servicetypeUncheckedUpdateInput>
}

/**
 * servicetype delete
 */
export type servicetypeDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the servicetype
   */
  select?: Prisma.servicetypeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the servicetype
   */
  omit?: Prisma.servicetypeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.servicetypeInclude<ExtArgs> | null
  /**
   * Filter which servicetype to delete.
   */
  where: Prisma.servicetypeWhereUniqueInput
}

/**
 * servicetype deleteMany
 */
export type servicetypeDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which servicetypes to delete
   */
  where?: Prisma.servicetypeWhereInput
  /**
   * Limit how many servicetypes to delete.
   */
  limit?: number
}

/**
 * servicetype.vehiclemaintenance
 */
export type servicetype$vehiclemaintenanceArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the vehiclemaintenance
   */
  select?: Prisma.vehiclemaintenanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the vehiclemaintenance
   */
  omit?: Prisma.vehiclemaintenanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.vehiclemaintenanceInclude<ExtArgs> | null
  where?: Prisma.vehiclemaintenanceWhereInput
  orderBy?: Prisma.vehiclemaintenanceOrderByWithRelationInput | Prisma.vehiclemaintenanceOrderByWithRelationInput[]
  cursor?: Prisma.vehiclemaintenanceWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.VehiclemaintenanceScalarFieldEnum | Prisma.VehiclemaintenanceScalarFieldEnum[]
}

/**
 * servicetype without action
 */
export type servicetypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the servicetype
   */
  select?: Prisma.servicetypeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the servicetype
   */
  omit?: Prisma.servicetypeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.servicetypeInclude<ExtArgs> | null
}
