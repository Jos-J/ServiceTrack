
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `service_logs` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model service_logs
 * 
 */
export type service_logsModel = runtime.Types.Result.DefaultSelection<Prisma.$service_logsPayload>

export type AggregateService_logs = {
  _count: Service_logsCountAggregateOutputType | null
  _avg: Service_logsAvgAggregateOutputType | null
  _sum: Service_logsSumAggregateOutputType | null
  _min: Service_logsMinAggregateOutputType | null
  _max: Service_logsMaxAggregateOutputType | null
}

export type Service_logsAvgAggregateOutputType = {
  log_id: number | null
  maintenance_id: number | null
  user_id: number | null
}

export type Service_logsSumAggregateOutputType = {
  log_id: number | null
  maintenance_id: number | null
  user_id: number | null
}

export type Service_logsMinAggregateOutputType = {
  log_id: number | null
  maintenance_id: number | null
  log_date: Date | null
  notes: string | null
  user_id: number | null
}

export type Service_logsMaxAggregateOutputType = {
  log_id: number | null
  maintenance_id: number | null
  log_date: Date | null
  notes: string | null
  user_id: number | null
}

export type Service_logsCountAggregateOutputType = {
  log_id: number
  maintenance_id: number
  log_date: number
  notes: number
  user_id: number
  _all: number
}


export type Service_logsAvgAggregateInputType = {
  log_id?: true
  maintenance_id?: true
  user_id?: true
}

export type Service_logsSumAggregateInputType = {
  log_id?: true
  maintenance_id?: true
  user_id?: true
}

export type Service_logsMinAggregateInputType = {
  log_id?: true
  maintenance_id?: true
  log_date?: true
  notes?: true
  user_id?: true
}

export type Service_logsMaxAggregateInputType = {
  log_id?: true
  maintenance_id?: true
  log_date?: true
  notes?: true
  user_id?: true
}

export type Service_logsCountAggregateInputType = {
  log_id?: true
  maintenance_id?: true
  log_date?: true
  notes?: true
  user_id?: true
  _all?: true
}

export type Service_logsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which service_logs to aggregate.
   */
  where?: Prisma.service_logsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of service_logs to fetch.
   */
  orderBy?: Prisma.service_logsOrderByWithRelationInput | Prisma.service_logsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.service_logsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` service_logs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` service_logs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned service_logs
  **/
  _count?: true | Service_logsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Service_logsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Service_logsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Service_logsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Service_logsMaxAggregateInputType
}

export type GetService_logsAggregateType<T extends Service_logsAggregateArgs> = {
      [P in keyof T & keyof AggregateService_logs]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateService_logs[P]>
    : Prisma.GetScalarType<T[P], AggregateService_logs[P]>
}




export type service_logsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.service_logsWhereInput
  orderBy?: Prisma.service_logsOrderByWithAggregationInput | Prisma.service_logsOrderByWithAggregationInput[]
  by: Prisma.Service_logsScalarFieldEnum[] | Prisma.Service_logsScalarFieldEnum
  having?: Prisma.service_logsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Service_logsCountAggregateInputType | true
  _avg?: Service_logsAvgAggregateInputType
  _sum?: Service_logsSumAggregateInputType
  _min?: Service_logsMinAggregateInputType
  _max?: Service_logsMaxAggregateInputType
}

export type Service_logsGroupByOutputType = {
  log_id: number
  maintenance_id: number
  log_date: Date | null
  notes: string | null
  user_id: number | null
  _count: Service_logsCountAggregateOutputType | null
  _avg: Service_logsAvgAggregateOutputType | null
  _sum: Service_logsSumAggregateOutputType | null
  _min: Service_logsMinAggregateOutputType | null
  _max: Service_logsMaxAggregateOutputType | null
}

type GetService_logsGroupByPayload<T extends service_logsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Service_logsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Service_logsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Service_logsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Service_logsGroupByOutputType[P]>
      }
    >
  >



export type service_logsWhereInput = {
  AND?: Prisma.service_logsWhereInput | Prisma.service_logsWhereInput[]
  OR?: Prisma.service_logsWhereInput[]
  NOT?: Prisma.service_logsWhereInput | Prisma.service_logsWhereInput[]
  log_id?: Prisma.IntFilter<"service_logs"> | number
  maintenance_id?: Prisma.IntFilter<"service_logs"> | number
  log_date?: Prisma.DateTimeNullableFilter<"service_logs"> | Date | string | null
  notes?: Prisma.StringNullableFilter<"service_logs"> | string | null
  user_id?: Prisma.IntNullableFilter<"service_logs"> | number | null
  vehiclemaintenance?: Prisma.XOR<Prisma.VehiclemaintenanceScalarRelationFilter, Prisma.vehiclemaintenanceWhereInput>
  users?: Prisma.XOR<Prisma.UsersNullableScalarRelationFilter, Prisma.usersWhereInput> | null
}

export type service_logsOrderByWithRelationInput = {
  log_id?: Prisma.SortOrder
  maintenance_id?: Prisma.SortOrder
  log_date?: Prisma.SortOrderInput | Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  user_id?: Prisma.SortOrderInput | Prisma.SortOrder
  vehiclemaintenance?: Prisma.vehiclemaintenanceOrderByWithRelationInput
  users?: Prisma.usersOrderByWithRelationInput
}

export type service_logsWhereUniqueInput = Prisma.AtLeast<{
  log_id?: number
  AND?: Prisma.service_logsWhereInput | Prisma.service_logsWhereInput[]
  OR?: Prisma.service_logsWhereInput[]
  NOT?: Prisma.service_logsWhereInput | Prisma.service_logsWhereInput[]
  maintenance_id?: Prisma.IntFilter<"service_logs"> | number
  log_date?: Prisma.DateTimeNullableFilter<"service_logs"> | Date | string | null
  notes?: Prisma.StringNullableFilter<"service_logs"> | string | null
  user_id?: Prisma.IntNullableFilter<"service_logs"> | number | null
  vehiclemaintenance?: Prisma.XOR<Prisma.VehiclemaintenanceScalarRelationFilter, Prisma.vehiclemaintenanceWhereInput>
  users?: Prisma.XOR<Prisma.UsersNullableScalarRelationFilter, Prisma.usersWhereInput> | null
}, "log_id">

export type service_logsOrderByWithAggregationInput = {
  log_id?: Prisma.SortOrder
  maintenance_id?: Prisma.SortOrder
  log_date?: Prisma.SortOrderInput | Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  user_id?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.service_logsCountOrderByAggregateInput
  _avg?: Prisma.service_logsAvgOrderByAggregateInput
  _max?: Prisma.service_logsMaxOrderByAggregateInput
  _min?: Prisma.service_logsMinOrderByAggregateInput
  _sum?: Prisma.service_logsSumOrderByAggregateInput
}

export type service_logsScalarWhereWithAggregatesInput = {
  AND?: Prisma.service_logsScalarWhereWithAggregatesInput | Prisma.service_logsScalarWhereWithAggregatesInput[]
  OR?: Prisma.service_logsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.service_logsScalarWhereWithAggregatesInput | Prisma.service_logsScalarWhereWithAggregatesInput[]
  log_id?: Prisma.IntWithAggregatesFilter<"service_logs"> | number
  maintenance_id?: Prisma.IntWithAggregatesFilter<"service_logs"> | number
  log_date?: Prisma.DateTimeNullableWithAggregatesFilter<"service_logs"> | Date | string | null
  notes?: Prisma.StringNullableWithAggregatesFilter<"service_logs"> | string | null
  user_id?: Prisma.IntNullableWithAggregatesFilter<"service_logs"> | number | null
}

export type service_logsCreateInput = {
  log_date?: Date | string | null
  notes?: string | null
  vehiclemaintenance: Prisma.vehiclemaintenanceCreateNestedOneWithoutService_logsInput
  users?: Prisma.usersCreateNestedOneWithoutService_logsInput
}

export type service_logsUncheckedCreateInput = {
  log_id?: number
  maintenance_id: number
  log_date?: Date | string | null
  notes?: string | null
  user_id?: number | null
}

export type service_logsUpdateInput = {
  log_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  vehiclemaintenance?: Prisma.vehiclemaintenanceUpdateOneRequiredWithoutService_logsNestedInput
  users?: Prisma.usersUpdateOneWithoutService_logsNestedInput
}

export type service_logsUncheckedUpdateInput = {
  log_id?: Prisma.IntFieldUpdateOperationsInput | number
  maintenance_id?: Prisma.IntFieldUpdateOperationsInput | number
  log_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  user_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type service_logsCreateManyInput = {
  log_id?: number
  maintenance_id: number
  log_date?: Date | string | null
  notes?: string | null
  user_id?: number | null
}

export type service_logsUpdateManyMutationInput = {
  log_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type service_logsUncheckedUpdateManyInput = {
  log_id?: Prisma.IntFieldUpdateOperationsInput | number
  maintenance_id?: Prisma.IntFieldUpdateOperationsInput | number
  log_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  user_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type service_logsCountOrderByAggregateInput = {
  log_id?: Prisma.SortOrder
  maintenance_id?: Prisma.SortOrder
  log_date?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
}

export type service_logsAvgOrderByAggregateInput = {
  log_id?: Prisma.SortOrder
  maintenance_id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
}

export type service_logsMaxOrderByAggregateInput = {
  log_id?: Prisma.SortOrder
  maintenance_id?: Prisma.SortOrder
  log_date?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
}

export type service_logsMinOrderByAggregateInput = {
  log_id?: Prisma.SortOrder
  maintenance_id?: Prisma.SortOrder
  log_date?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
}

export type service_logsSumOrderByAggregateInput = {
  log_id?: Prisma.SortOrder
  maintenance_id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
}

export type Service_logsListRelationFilter = {
  every?: Prisma.service_logsWhereInput
  some?: Prisma.service_logsWhereInput
  none?: Prisma.service_logsWhereInput
}

export type service_logsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type service_logsCreateNestedManyWithoutUsersInput = {
  create?: Prisma.XOR<Prisma.service_logsCreateWithoutUsersInput, Prisma.service_logsUncheckedCreateWithoutUsersInput> | Prisma.service_logsCreateWithoutUsersInput[] | Prisma.service_logsUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.service_logsCreateOrConnectWithoutUsersInput | Prisma.service_logsCreateOrConnectWithoutUsersInput[]
  createMany?: Prisma.service_logsCreateManyUsersInputEnvelope
  connect?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
}

export type service_logsUncheckedCreateNestedManyWithoutUsersInput = {
  create?: Prisma.XOR<Prisma.service_logsCreateWithoutUsersInput, Prisma.service_logsUncheckedCreateWithoutUsersInput> | Prisma.service_logsCreateWithoutUsersInput[] | Prisma.service_logsUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.service_logsCreateOrConnectWithoutUsersInput | Prisma.service_logsCreateOrConnectWithoutUsersInput[]
  createMany?: Prisma.service_logsCreateManyUsersInputEnvelope
  connect?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
}

export type service_logsUpdateManyWithoutUsersNestedInput = {
  create?: Prisma.XOR<Prisma.service_logsCreateWithoutUsersInput, Prisma.service_logsUncheckedCreateWithoutUsersInput> | Prisma.service_logsCreateWithoutUsersInput[] | Prisma.service_logsUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.service_logsCreateOrConnectWithoutUsersInput | Prisma.service_logsCreateOrConnectWithoutUsersInput[]
  upsert?: Prisma.service_logsUpsertWithWhereUniqueWithoutUsersInput | Prisma.service_logsUpsertWithWhereUniqueWithoutUsersInput[]
  createMany?: Prisma.service_logsCreateManyUsersInputEnvelope
  set?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
  disconnect?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
  delete?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
  connect?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
  update?: Prisma.service_logsUpdateWithWhereUniqueWithoutUsersInput | Prisma.service_logsUpdateWithWhereUniqueWithoutUsersInput[]
  updateMany?: Prisma.service_logsUpdateManyWithWhereWithoutUsersInput | Prisma.service_logsUpdateManyWithWhereWithoutUsersInput[]
  deleteMany?: Prisma.service_logsScalarWhereInput | Prisma.service_logsScalarWhereInput[]
}

export type service_logsUncheckedUpdateManyWithoutUsersNestedInput = {
  create?: Prisma.XOR<Prisma.service_logsCreateWithoutUsersInput, Prisma.service_logsUncheckedCreateWithoutUsersInput> | Prisma.service_logsCreateWithoutUsersInput[] | Prisma.service_logsUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.service_logsCreateOrConnectWithoutUsersInput | Prisma.service_logsCreateOrConnectWithoutUsersInput[]
  upsert?: Prisma.service_logsUpsertWithWhereUniqueWithoutUsersInput | Prisma.service_logsUpsertWithWhereUniqueWithoutUsersInput[]
  createMany?: Prisma.service_logsCreateManyUsersInputEnvelope
  set?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
  disconnect?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
  delete?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
  connect?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
  update?: Prisma.service_logsUpdateWithWhereUniqueWithoutUsersInput | Prisma.service_logsUpdateWithWhereUniqueWithoutUsersInput[]
  updateMany?: Prisma.service_logsUpdateManyWithWhereWithoutUsersInput | Prisma.service_logsUpdateManyWithWhereWithoutUsersInput[]
  deleteMany?: Prisma.service_logsScalarWhereInput | Prisma.service_logsScalarWhereInput[]
}

export type service_logsCreateNestedManyWithoutVehiclemaintenanceInput = {
  create?: Prisma.XOR<Prisma.service_logsCreateWithoutVehiclemaintenanceInput, Prisma.service_logsUncheckedCreateWithoutVehiclemaintenanceInput> | Prisma.service_logsCreateWithoutVehiclemaintenanceInput[] | Prisma.service_logsUncheckedCreateWithoutVehiclemaintenanceInput[]
  connectOrCreate?: Prisma.service_logsCreateOrConnectWithoutVehiclemaintenanceInput | Prisma.service_logsCreateOrConnectWithoutVehiclemaintenanceInput[]
  createMany?: Prisma.service_logsCreateManyVehiclemaintenanceInputEnvelope
  connect?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
}

export type service_logsUncheckedCreateNestedManyWithoutVehiclemaintenanceInput = {
  create?: Prisma.XOR<Prisma.service_logsCreateWithoutVehiclemaintenanceInput, Prisma.service_logsUncheckedCreateWithoutVehiclemaintenanceInput> | Prisma.service_logsCreateWithoutVehiclemaintenanceInput[] | Prisma.service_logsUncheckedCreateWithoutVehiclemaintenanceInput[]
  connectOrCreate?: Prisma.service_logsCreateOrConnectWithoutVehiclemaintenanceInput | Prisma.service_logsCreateOrConnectWithoutVehiclemaintenanceInput[]
  createMany?: Prisma.service_logsCreateManyVehiclemaintenanceInputEnvelope
  connect?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
}

export type service_logsUpdateManyWithoutVehiclemaintenanceNestedInput = {
  create?: Prisma.XOR<Prisma.service_logsCreateWithoutVehiclemaintenanceInput, Prisma.service_logsUncheckedCreateWithoutVehiclemaintenanceInput> | Prisma.service_logsCreateWithoutVehiclemaintenanceInput[] | Prisma.service_logsUncheckedCreateWithoutVehiclemaintenanceInput[]
  connectOrCreate?: Prisma.service_logsCreateOrConnectWithoutVehiclemaintenanceInput | Prisma.service_logsCreateOrConnectWithoutVehiclemaintenanceInput[]
  upsert?: Prisma.service_logsUpsertWithWhereUniqueWithoutVehiclemaintenanceInput | Prisma.service_logsUpsertWithWhereUniqueWithoutVehiclemaintenanceInput[]
  createMany?: Prisma.service_logsCreateManyVehiclemaintenanceInputEnvelope
  set?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
  disconnect?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
  delete?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
  connect?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
  update?: Prisma.service_logsUpdateWithWhereUniqueWithoutVehiclemaintenanceInput | Prisma.service_logsUpdateWithWhereUniqueWithoutVehiclemaintenanceInput[]
  updateMany?: Prisma.service_logsUpdateManyWithWhereWithoutVehiclemaintenanceInput | Prisma.service_logsUpdateManyWithWhereWithoutVehiclemaintenanceInput[]
  deleteMany?: Prisma.service_logsScalarWhereInput | Prisma.service_logsScalarWhereInput[]
}

export type service_logsUncheckedUpdateManyWithoutVehiclemaintenanceNestedInput = {
  create?: Prisma.XOR<Prisma.service_logsCreateWithoutVehiclemaintenanceInput, Prisma.service_logsUncheckedCreateWithoutVehiclemaintenanceInput> | Prisma.service_logsCreateWithoutVehiclemaintenanceInput[] | Prisma.service_logsUncheckedCreateWithoutVehiclemaintenanceInput[]
  connectOrCreate?: Prisma.service_logsCreateOrConnectWithoutVehiclemaintenanceInput | Prisma.service_logsCreateOrConnectWithoutVehiclemaintenanceInput[]
  upsert?: Prisma.service_logsUpsertWithWhereUniqueWithoutVehiclemaintenanceInput | Prisma.service_logsUpsertWithWhereUniqueWithoutVehiclemaintenanceInput[]
  createMany?: Prisma.service_logsCreateManyVehiclemaintenanceInputEnvelope
  set?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
  disconnect?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
  delete?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
  connect?: Prisma.service_logsWhereUniqueInput | Prisma.service_logsWhereUniqueInput[]
  update?: Prisma.service_logsUpdateWithWhereUniqueWithoutVehiclemaintenanceInput | Prisma.service_logsUpdateWithWhereUniqueWithoutVehiclemaintenanceInput[]
  updateMany?: Prisma.service_logsUpdateManyWithWhereWithoutVehiclemaintenanceInput | Prisma.service_logsUpdateManyWithWhereWithoutVehiclemaintenanceInput[]
  deleteMany?: Prisma.service_logsScalarWhereInput | Prisma.service_logsScalarWhereInput[]
}

export type service_logsCreateWithoutUsersInput = {
  log_date?: Date | string | null
  notes?: string | null
  vehiclemaintenance: Prisma.vehiclemaintenanceCreateNestedOneWithoutService_logsInput
}

export type service_logsUncheckedCreateWithoutUsersInput = {
  log_id?: number
  maintenance_id: number
  log_date?: Date | string | null
  notes?: string | null
}

export type service_logsCreateOrConnectWithoutUsersInput = {
  where: Prisma.service_logsWhereUniqueInput
  create: Prisma.XOR<Prisma.service_logsCreateWithoutUsersInput, Prisma.service_logsUncheckedCreateWithoutUsersInput>
}

export type service_logsCreateManyUsersInputEnvelope = {
  data: Prisma.service_logsCreateManyUsersInput | Prisma.service_logsCreateManyUsersInput[]
  skipDuplicates?: boolean
}

export type service_logsUpsertWithWhereUniqueWithoutUsersInput = {
  where: Prisma.service_logsWhereUniqueInput
  update: Prisma.XOR<Prisma.service_logsUpdateWithoutUsersInput, Prisma.service_logsUncheckedUpdateWithoutUsersInput>
  create: Prisma.XOR<Prisma.service_logsCreateWithoutUsersInput, Prisma.service_logsUncheckedCreateWithoutUsersInput>
}

export type service_logsUpdateWithWhereUniqueWithoutUsersInput = {
  where: Prisma.service_logsWhereUniqueInput
  data: Prisma.XOR<Prisma.service_logsUpdateWithoutUsersInput, Prisma.service_logsUncheckedUpdateWithoutUsersInput>
}

export type service_logsUpdateManyWithWhereWithoutUsersInput = {
  where: Prisma.service_logsScalarWhereInput
  data: Prisma.XOR<Prisma.service_logsUpdateManyMutationInput, Prisma.service_logsUncheckedUpdateManyWithoutUsersInput>
}

export type service_logsScalarWhereInput = {
  AND?: Prisma.service_logsScalarWhereInput | Prisma.service_logsScalarWhereInput[]
  OR?: Prisma.service_logsScalarWhereInput[]
  NOT?: Prisma.service_logsScalarWhereInput | Prisma.service_logsScalarWhereInput[]
  log_id?: Prisma.IntFilter<"service_logs"> | number
  maintenance_id?: Prisma.IntFilter<"service_logs"> | number
  log_date?: Prisma.DateTimeNullableFilter<"service_logs"> | Date | string | null
  notes?: Prisma.StringNullableFilter<"service_logs"> | string | null
  user_id?: Prisma.IntNullableFilter<"service_logs"> | number | null
}

export type service_logsCreateWithoutVehiclemaintenanceInput = {
  log_date?: Date | string | null
  notes?: string | null
  users?: Prisma.usersCreateNestedOneWithoutService_logsInput
}

export type service_logsUncheckedCreateWithoutVehiclemaintenanceInput = {
  log_id?: number
  log_date?: Date | string | null
  notes?: string | null
  user_id?: number | null
}

export type service_logsCreateOrConnectWithoutVehiclemaintenanceInput = {
  where: Prisma.service_logsWhereUniqueInput
  create: Prisma.XOR<Prisma.service_logsCreateWithoutVehiclemaintenanceInput, Prisma.service_logsUncheckedCreateWithoutVehiclemaintenanceInput>
}

export type service_logsCreateManyVehiclemaintenanceInputEnvelope = {
  data: Prisma.service_logsCreateManyVehiclemaintenanceInput | Prisma.service_logsCreateManyVehiclemaintenanceInput[]
  skipDuplicates?: boolean
}

export type service_logsUpsertWithWhereUniqueWithoutVehiclemaintenanceInput = {
  where: Prisma.service_logsWhereUniqueInput
  update: Prisma.XOR<Prisma.service_logsUpdateWithoutVehiclemaintenanceInput, Prisma.service_logsUncheckedUpdateWithoutVehiclemaintenanceInput>
  create: Prisma.XOR<Prisma.service_logsCreateWithoutVehiclemaintenanceInput, Prisma.service_logsUncheckedCreateWithoutVehiclemaintenanceInput>
}

export type service_logsUpdateWithWhereUniqueWithoutVehiclemaintenanceInput = {
  where: Prisma.service_logsWhereUniqueInput
  data: Prisma.XOR<Prisma.service_logsUpdateWithoutVehiclemaintenanceInput, Prisma.service_logsUncheckedUpdateWithoutVehiclemaintenanceInput>
}

export type service_logsUpdateManyWithWhereWithoutVehiclemaintenanceInput = {
  where: Prisma.service_logsScalarWhereInput
  data: Prisma.XOR<Prisma.service_logsUpdateManyMutationInput, Prisma.service_logsUncheckedUpdateManyWithoutVehiclemaintenanceInput>
}

export type service_logsCreateManyUsersInput = {
  log_id?: number
  maintenance_id: number
  log_date?: Date | string | null
  notes?: string | null
}

export type service_logsUpdateWithoutUsersInput = {
  log_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  vehiclemaintenance?: Prisma.vehiclemaintenanceUpdateOneRequiredWithoutService_logsNestedInput
}

export type service_logsUncheckedUpdateWithoutUsersInput = {
  log_id?: Prisma.IntFieldUpdateOperationsInput | number
  maintenance_id?: Prisma.IntFieldUpdateOperationsInput | number
  log_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type service_logsUncheckedUpdateManyWithoutUsersInput = {
  log_id?: Prisma.IntFieldUpdateOperationsInput | number
  maintenance_id?: Prisma.IntFieldUpdateOperationsInput | number
  log_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type service_logsCreateManyVehiclemaintenanceInput = {
  log_id?: number
  log_date?: Date | string | null
  notes?: string | null
  user_id?: number | null
}

export type service_logsUpdateWithoutVehiclemaintenanceInput = {
  log_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  users?: Prisma.usersUpdateOneWithoutService_logsNestedInput
}

export type service_logsUncheckedUpdateWithoutVehiclemaintenanceInput = {
  log_id?: Prisma.IntFieldUpdateOperationsInput | number
  log_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  user_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}

export type service_logsUncheckedUpdateManyWithoutVehiclemaintenanceInput = {
  log_id?: Prisma.IntFieldUpdateOperationsInput | number
  log_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  user_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
}



export type service_logsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  log_id?: boolean
  maintenance_id?: boolean
  log_date?: boolean
  notes?: boolean
  user_id?: boolean
  vehiclemaintenance?: boolean | Prisma.vehiclemaintenanceDefaultArgs<ExtArgs>
  users?: boolean | Prisma.service_logs$usersArgs<ExtArgs>
}, ExtArgs["result"]["service_logs"]>

export type service_logsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  log_id?: boolean
  maintenance_id?: boolean
  log_date?: boolean
  notes?: boolean
  user_id?: boolean
  vehiclemaintenance?: boolean | Prisma.vehiclemaintenanceDefaultArgs<ExtArgs>
  users?: boolean | Prisma.service_logs$usersArgs<ExtArgs>
}, ExtArgs["result"]["service_logs"]>

export type service_logsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  log_id?: boolean
  maintenance_id?: boolean
  log_date?: boolean
  notes?: boolean
  user_id?: boolean
  vehiclemaintenance?: boolean | Prisma.vehiclemaintenanceDefaultArgs<ExtArgs>
  users?: boolean | Prisma.service_logs$usersArgs<ExtArgs>
}, ExtArgs["result"]["service_logs"]>

export type service_logsSelectScalar = {
  log_id?: boolean
  maintenance_id?: boolean
  log_date?: boolean
  notes?: boolean
  user_id?: boolean
}

export type service_logsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"log_id" | "maintenance_id" | "log_date" | "notes" | "user_id", ExtArgs["result"]["service_logs"]>
export type service_logsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  vehiclemaintenance?: boolean | Prisma.vehiclemaintenanceDefaultArgs<ExtArgs>
  users?: boolean | Prisma.service_logs$usersArgs<ExtArgs>
}
export type service_logsIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  vehiclemaintenance?: boolean | Prisma.vehiclemaintenanceDefaultArgs<ExtArgs>
  users?: boolean | Prisma.service_logs$usersArgs<ExtArgs>
}
export type service_logsIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  vehiclemaintenance?: boolean | Prisma.vehiclemaintenanceDefaultArgs<ExtArgs>
  users?: boolean | Prisma.service_logs$usersArgs<ExtArgs>
}

export type $service_logsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "service_logs"
  objects: {
    vehiclemaintenance: Prisma.$vehiclemaintenancePayload<ExtArgs>
    users: Prisma.$usersPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    log_id: number
    maintenance_id: number
    log_date: Date | null
    notes: string | null
    user_id: number | null
  }, ExtArgs["result"]["service_logs"]>
  composites: {}
}

export type service_logsGetPayload<S extends boolean | null | undefined | service_logsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$service_logsPayload, S>

export type service_logsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<service_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Service_logsCountAggregateInputType | true
  }

export interface service_logsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['service_logs'], meta: { name: 'service_logs' } }
  /**
   * Find zero or one Service_logs that matches the filter.
   * @param {service_logsFindUniqueArgs} args - Arguments to find a Service_logs
   * @example
   * // Get one Service_logs
   * const service_logs = await prisma.service_logs.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends service_logsFindUniqueArgs>(args: Prisma.SelectSubset<T, service_logsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__service_logsClient<runtime.Types.Result.GetResult<Prisma.$service_logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Service_logs that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {service_logsFindUniqueOrThrowArgs} args - Arguments to find a Service_logs
   * @example
   * // Get one Service_logs
   * const service_logs = await prisma.service_logs.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends service_logsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, service_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__service_logsClient<runtime.Types.Result.GetResult<Prisma.$service_logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Service_logs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {service_logsFindFirstArgs} args - Arguments to find a Service_logs
   * @example
   * // Get one Service_logs
   * const service_logs = await prisma.service_logs.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends service_logsFindFirstArgs>(args?: Prisma.SelectSubset<T, service_logsFindFirstArgs<ExtArgs>>): Prisma.Prisma__service_logsClient<runtime.Types.Result.GetResult<Prisma.$service_logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Service_logs that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {service_logsFindFirstOrThrowArgs} args - Arguments to find a Service_logs
   * @example
   * // Get one Service_logs
   * const service_logs = await prisma.service_logs.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends service_logsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, service_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__service_logsClient<runtime.Types.Result.GetResult<Prisma.$service_logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Service_logs that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {service_logsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Service_logs
   * const service_logs = await prisma.service_logs.findMany()
   * 
   * // Get first 10 Service_logs
   * const service_logs = await prisma.service_logs.findMany({ take: 10 })
   * 
   * // Only select the `log_id`
   * const service_logsWithLog_idOnly = await prisma.service_logs.findMany({ select: { log_id: true } })
   * 
   */
  findMany<T extends service_logsFindManyArgs>(args?: Prisma.SelectSubset<T, service_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$service_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Service_logs.
   * @param {service_logsCreateArgs} args - Arguments to create a Service_logs.
   * @example
   * // Create one Service_logs
   * const Service_logs = await prisma.service_logs.create({
   *   data: {
   *     // ... data to create a Service_logs
   *   }
   * })
   * 
   */
  create<T extends service_logsCreateArgs>(args: Prisma.SelectSubset<T, service_logsCreateArgs<ExtArgs>>): Prisma.Prisma__service_logsClient<runtime.Types.Result.GetResult<Prisma.$service_logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Service_logs.
   * @param {service_logsCreateManyArgs} args - Arguments to create many Service_logs.
   * @example
   * // Create many Service_logs
   * const service_logs = await prisma.service_logs.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends service_logsCreateManyArgs>(args?: Prisma.SelectSubset<T, service_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Service_logs and returns the data saved in the database.
   * @param {service_logsCreateManyAndReturnArgs} args - Arguments to create many Service_logs.
   * @example
   * // Create many Service_logs
   * const service_logs = await prisma.service_logs.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Service_logs and only return the `log_id`
   * const service_logsWithLog_idOnly = await prisma.service_logs.createManyAndReturn({
   *   select: { log_id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends service_logsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, service_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$service_logsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Service_logs.
   * @param {service_logsDeleteArgs} args - Arguments to delete one Service_logs.
   * @example
   * // Delete one Service_logs
   * const Service_logs = await prisma.service_logs.delete({
   *   where: {
   *     // ... filter to delete one Service_logs
   *   }
   * })
   * 
   */
  delete<T extends service_logsDeleteArgs>(args: Prisma.SelectSubset<T, service_logsDeleteArgs<ExtArgs>>): Prisma.Prisma__service_logsClient<runtime.Types.Result.GetResult<Prisma.$service_logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Service_logs.
   * @param {service_logsUpdateArgs} args - Arguments to update one Service_logs.
   * @example
   * // Update one Service_logs
   * const service_logs = await prisma.service_logs.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends service_logsUpdateArgs>(args: Prisma.SelectSubset<T, service_logsUpdateArgs<ExtArgs>>): Prisma.Prisma__service_logsClient<runtime.Types.Result.GetResult<Prisma.$service_logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Service_logs.
   * @param {service_logsDeleteManyArgs} args - Arguments to filter Service_logs to delete.
   * @example
   * // Delete a few Service_logs
   * const { count } = await prisma.service_logs.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends service_logsDeleteManyArgs>(args?: Prisma.SelectSubset<T, service_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Service_logs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {service_logsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Service_logs
   * const service_logs = await prisma.service_logs.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends service_logsUpdateManyArgs>(args: Prisma.SelectSubset<T, service_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Service_logs and returns the data updated in the database.
   * @param {service_logsUpdateManyAndReturnArgs} args - Arguments to update many Service_logs.
   * @example
   * // Update many Service_logs
   * const service_logs = await prisma.service_logs.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Service_logs and only return the `log_id`
   * const service_logsWithLog_idOnly = await prisma.service_logs.updateManyAndReturn({
   *   select: { log_id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends service_logsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, service_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$service_logsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Service_logs.
   * @param {service_logsUpsertArgs} args - Arguments to update or create a Service_logs.
   * @example
   * // Update or create a Service_logs
   * const service_logs = await prisma.service_logs.upsert({
   *   create: {
   *     // ... data to create a Service_logs
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Service_logs we want to update
   *   }
   * })
   */
  upsert<T extends service_logsUpsertArgs>(args: Prisma.SelectSubset<T, service_logsUpsertArgs<ExtArgs>>): Prisma.Prisma__service_logsClient<runtime.Types.Result.GetResult<Prisma.$service_logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Service_logs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {service_logsCountArgs} args - Arguments to filter Service_logs to count.
   * @example
   * // Count the number of Service_logs
   * const count = await prisma.service_logs.count({
   *   where: {
   *     // ... the filter for the Service_logs we want to count
   *   }
   * })
  **/
  count<T extends service_logsCountArgs>(
    args?: Prisma.Subset<T, service_logsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Service_logsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Service_logs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Service_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Service_logsAggregateArgs>(args: Prisma.Subset<T, Service_logsAggregateArgs>): Prisma.PrismaPromise<GetService_logsAggregateType<T>>

  /**
   * Group by Service_logs.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {service_logsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends service_logsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: service_logsGroupByArgs['orderBy'] }
      : { orderBy?: service_logsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, service_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetService_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the service_logs model
 */
readonly fields: service_logsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for service_logs.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__service_logsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  vehiclemaintenance<T extends Prisma.vehiclemaintenanceDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.vehiclemaintenanceDefaultArgs<ExtArgs>>): Prisma.Prisma__vehiclemaintenanceClient<runtime.Types.Result.GetResult<Prisma.$vehiclemaintenancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  users<T extends Prisma.service_logs$usersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.service_logs$usersArgs<ExtArgs>>): Prisma.Prisma__usersClient<runtime.Types.Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the service_logs model
 */
export interface service_logsFieldRefs {
  readonly log_id: Prisma.FieldRef<"service_logs", 'Int'>
  readonly maintenance_id: Prisma.FieldRef<"service_logs", 'Int'>
  readonly log_date: Prisma.FieldRef<"service_logs", 'DateTime'>
  readonly notes: Prisma.FieldRef<"service_logs", 'String'>
  readonly user_id: Prisma.FieldRef<"service_logs", 'Int'>
}
    

// Custom InputTypes
/**
 * service_logs findUnique
 */
export type service_logsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the service_logs
   */
  select?: Prisma.service_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the service_logs
   */
  omit?: Prisma.service_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.service_logsInclude<ExtArgs> | null
  /**
   * Filter, which service_logs to fetch.
   */
  where: Prisma.service_logsWhereUniqueInput
}

/**
 * service_logs findUniqueOrThrow
 */
export type service_logsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the service_logs
   */
  select?: Prisma.service_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the service_logs
   */
  omit?: Prisma.service_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.service_logsInclude<ExtArgs> | null
  /**
   * Filter, which service_logs to fetch.
   */
  where: Prisma.service_logsWhereUniqueInput
}

/**
 * service_logs findFirst
 */
export type service_logsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the service_logs
   */
  select?: Prisma.service_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the service_logs
   */
  omit?: Prisma.service_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.service_logsInclude<ExtArgs> | null
  /**
   * Filter, which service_logs to fetch.
   */
  where?: Prisma.service_logsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of service_logs to fetch.
   */
  orderBy?: Prisma.service_logsOrderByWithRelationInput | Prisma.service_logsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for service_logs.
   */
  cursor?: Prisma.service_logsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` service_logs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` service_logs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of service_logs.
   */
  distinct?: Prisma.Service_logsScalarFieldEnum | Prisma.Service_logsScalarFieldEnum[]
}

/**
 * service_logs findFirstOrThrow
 */
export type service_logsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the service_logs
   */
  select?: Prisma.service_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the service_logs
   */
  omit?: Prisma.service_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.service_logsInclude<ExtArgs> | null
  /**
   * Filter, which service_logs to fetch.
   */
  where?: Prisma.service_logsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of service_logs to fetch.
   */
  orderBy?: Prisma.service_logsOrderByWithRelationInput | Prisma.service_logsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for service_logs.
   */
  cursor?: Prisma.service_logsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` service_logs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` service_logs.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of service_logs.
   */
  distinct?: Prisma.Service_logsScalarFieldEnum | Prisma.Service_logsScalarFieldEnum[]
}

/**
 * service_logs findMany
 */
export type service_logsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the service_logs
   */
  select?: Prisma.service_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the service_logs
   */
  omit?: Prisma.service_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.service_logsInclude<ExtArgs> | null
  /**
   * Filter, which service_logs to fetch.
   */
  where?: Prisma.service_logsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of service_logs to fetch.
   */
  orderBy?: Prisma.service_logsOrderByWithRelationInput | Prisma.service_logsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing service_logs.
   */
  cursor?: Prisma.service_logsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` service_logs from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` service_logs.
   */
  skip?: number
  distinct?: Prisma.Service_logsScalarFieldEnum | Prisma.Service_logsScalarFieldEnum[]
}

/**
 * service_logs create
 */
export type service_logsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the service_logs
   */
  select?: Prisma.service_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the service_logs
   */
  omit?: Prisma.service_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.service_logsInclude<ExtArgs> | null
  /**
   * The data needed to create a service_logs.
   */
  data: Prisma.XOR<Prisma.service_logsCreateInput, Prisma.service_logsUncheckedCreateInput>
}

/**
 * service_logs createMany
 */
export type service_logsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many service_logs.
   */
  data: Prisma.service_logsCreateManyInput | Prisma.service_logsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * service_logs createManyAndReturn
 */
export type service_logsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the service_logs
   */
  select?: Prisma.service_logsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the service_logs
   */
  omit?: Prisma.service_logsOmit<ExtArgs> | null
  /**
   * The data used to create many service_logs.
   */
  data: Prisma.service_logsCreateManyInput | Prisma.service_logsCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.service_logsIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * service_logs update
 */
export type service_logsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the service_logs
   */
  select?: Prisma.service_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the service_logs
   */
  omit?: Prisma.service_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.service_logsInclude<ExtArgs> | null
  /**
   * The data needed to update a service_logs.
   */
  data: Prisma.XOR<Prisma.service_logsUpdateInput, Prisma.service_logsUncheckedUpdateInput>
  /**
   * Choose, which service_logs to update.
   */
  where: Prisma.service_logsWhereUniqueInput
}

/**
 * service_logs updateMany
 */
export type service_logsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update service_logs.
   */
  data: Prisma.XOR<Prisma.service_logsUpdateManyMutationInput, Prisma.service_logsUncheckedUpdateManyInput>
  /**
   * Filter which service_logs to update
   */
  where?: Prisma.service_logsWhereInput
  /**
   * Limit how many service_logs to update.
   */
  limit?: number
}

/**
 * service_logs updateManyAndReturn
 */
export type service_logsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the service_logs
   */
  select?: Prisma.service_logsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the service_logs
   */
  omit?: Prisma.service_logsOmit<ExtArgs> | null
  /**
   * The data used to update service_logs.
   */
  data: Prisma.XOR<Prisma.service_logsUpdateManyMutationInput, Prisma.service_logsUncheckedUpdateManyInput>
  /**
   * Filter which service_logs to update
   */
  where?: Prisma.service_logsWhereInput
  /**
   * Limit how many service_logs to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.service_logsIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * service_logs upsert
 */
export type service_logsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the service_logs
   */
  select?: Prisma.service_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the service_logs
   */
  omit?: Prisma.service_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.service_logsInclude<ExtArgs> | null
  /**
   * The filter to search for the service_logs to update in case it exists.
   */
  where: Prisma.service_logsWhereUniqueInput
  /**
   * In case the service_logs found by the `where` argument doesn't exist, create a new service_logs with this data.
   */
  create: Prisma.XOR<Prisma.service_logsCreateInput, Prisma.service_logsUncheckedCreateInput>
  /**
   * In case the service_logs was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.service_logsUpdateInput, Prisma.service_logsUncheckedUpdateInput>
}

/**
 * service_logs delete
 */
export type service_logsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the service_logs
   */
  select?: Prisma.service_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the service_logs
   */
  omit?: Prisma.service_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.service_logsInclude<ExtArgs> | null
  /**
   * Filter which service_logs to delete.
   */
  where: Prisma.service_logsWhereUniqueInput
}

/**
 * service_logs deleteMany
 */
export type service_logsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which service_logs to delete
   */
  where?: Prisma.service_logsWhereInput
  /**
   * Limit how many service_logs to delete.
   */
  limit?: number
}

/**
 * service_logs.users
 */
export type service_logs$usersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the users
   */
  select?: Prisma.usersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the users
   */
  omit?: Prisma.usersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.usersInclude<ExtArgs> | null
  where?: Prisma.usersWhereInput
}

/**
 * service_logs without action
 */
export type service_logsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the service_logs
   */
  select?: Prisma.service_logsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the service_logs
   */
  omit?: Prisma.service_logsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.service_logsInclude<ExtArgs> | null
}
