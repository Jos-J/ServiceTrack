
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `auto` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model auto
 * 
 */
export type autoModel = runtime.Types.Result.DefaultSelection<Prisma.$autoPayload>

export type AggregateAuto = {
  _count: AutoCountAggregateOutputType | null
  _avg: AutoAvgAggregateOutputType | null
  _sum: AutoSumAggregateOutputType | null
  _min: AutoMinAggregateOutputType | null
  _max: AutoMaxAggregateOutputType | null
}

export type AutoAvgAggregateOutputType = {
  vin_id: number | null
  vehicle_year: number | null
  miles: number | null
  owner_id: number | null
}

export type AutoSumAggregateOutputType = {
  vin_id: number | null
  vehicle_year: number | null
  miles: number | null
  owner_id: number | null
}

export type AutoMinAggregateOutputType = {
  vin_id: number | null
  vin: string | null
  make: string | null
  model: string | null
  vehicle_year: number | null
  miles: number | null
  owner_id: number | null
  created_at: Date | null
  updated_at: Date | null
}

export type AutoMaxAggregateOutputType = {
  vin_id: number | null
  vin: string | null
  make: string | null
  model: string | null
  vehicle_year: number | null
  miles: number | null
  owner_id: number | null
  created_at: Date | null
  updated_at: Date | null
}

export type AutoCountAggregateOutputType = {
  vin_id: number
  vin: number
  make: number
  model: number
  vehicle_year: number
  miles: number
  owner_id: number
  created_at: number
  updated_at: number
  _all: number
}


export type AutoAvgAggregateInputType = {
  vin_id?: true
  vehicle_year?: true
  miles?: true
  owner_id?: true
}

export type AutoSumAggregateInputType = {
  vin_id?: true
  vehicle_year?: true
  miles?: true
  owner_id?: true
}

export type AutoMinAggregateInputType = {
  vin_id?: true
  vin?: true
  make?: true
  model?: true
  vehicle_year?: true
  miles?: true
  owner_id?: true
  created_at?: true
  updated_at?: true
}

export type AutoMaxAggregateInputType = {
  vin_id?: true
  vin?: true
  make?: true
  model?: true
  vehicle_year?: true
  miles?: true
  owner_id?: true
  created_at?: true
  updated_at?: true
}

export type AutoCountAggregateInputType = {
  vin_id?: true
  vin?: true
  make?: true
  model?: true
  vehicle_year?: true
  miles?: true
  owner_id?: true
  created_at?: true
  updated_at?: true
  _all?: true
}

export type AutoAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which auto to aggregate.
   */
  where?: Prisma.autoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of autos to fetch.
   */
  orderBy?: Prisma.autoOrderByWithRelationInput | Prisma.autoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.autoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` autos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` autos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned autos
  **/
  _count?: true | AutoCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: AutoAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: AutoSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: AutoMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: AutoMaxAggregateInputType
}

export type GetAutoAggregateType<T extends AutoAggregateArgs> = {
      [P in keyof T & keyof AggregateAuto]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAuto[P]>
    : Prisma.GetScalarType<T[P], AggregateAuto[P]>
}




export type autoGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.autoWhereInput
  orderBy?: Prisma.autoOrderByWithAggregationInput | Prisma.autoOrderByWithAggregationInput[]
  by: Prisma.AutoScalarFieldEnum[] | Prisma.AutoScalarFieldEnum
  having?: Prisma.autoScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: AutoCountAggregateInputType | true
  _avg?: AutoAvgAggregateInputType
  _sum?: AutoSumAggregateInputType
  _min?: AutoMinAggregateInputType
  _max?: AutoMaxAggregateInputType
}

export type AutoGroupByOutputType = {
  vin_id: number
  vin: string
  make: string
  model: string
  vehicle_year: number
  miles: number
  owner_id: number
  created_at: Date | null
  updated_at: Date | null
  _count: AutoCountAggregateOutputType | null
  _avg: AutoAvgAggregateOutputType | null
  _sum: AutoSumAggregateOutputType | null
  _min: AutoMinAggregateOutputType | null
  _max: AutoMaxAggregateOutputType | null
}

type GetAutoGroupByPayload<T extends autoGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<AutoGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof AutoGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], AutoGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], AutoGroupByOutputType[P]>
      }
    >
  >



export type autoWhereInput = {
  AND?: Prisma.autoWhereInput | Prisma.autoWhereInput[]
  OR?: Prisma.autoWhereInput[]
  NOT?: Prisma.autoWhereInput | Prisma.autoWhereInput[]
  vin_id?: Prisma.IntFilter<"auto"> | number
  vin?: Prisma.StringFilter<"auto"> | string
  make?: Prisma.StringFilter<"auto"> | string
  model?: Prisma.StringFilter<"auto"> | string
  vehicle_year?: Prisma.IntFilter<"auto"> | number
  miles?: Prisma.IntFilter<"auto"> | number
  owner_id?: Prisma.IntFilter<"auto"> | number
  created_at?: Prisma.DateTimeNullableFilter<"auto"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"auto"> | Date | string | null
  users?: Prisma.XOR<Prisma.UsersScalarRelationFilter, Prisma.usersWhereInput>
  vehicle_history?: Prisma.Vehicle_historyListRelationFilter
  vehiclemaintenance?: Prisma.VehiclemaintenanceListRelationFilter
}

export type autoOrderByWithRelationInput = {
  vin_id?: Prisma.SortOrder
  vin?: Prisma.SortOrder
  make?: Prisma.SortOrder
  model?: Prisma.SortOrder
  vehicle_year?: Prisma.SortOrder
  miles?: Prisma.SortOrder
  owner_id?: Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  users?: Prisma.usersOrderByWithRelationInput
  vehicle_history?: Prisma.vehicle_historyOrderByRelationAggregateInput
  vehiclemaintenance?: Prisma.vehiclemaintenanceOrderByRelationAggregateInput
}

export type autoWhereUniqueInput = Prisma.AtLeast<{
  vin_id?: number
  vin?: string
  AND?: Prisma.autoWhereInput | Prisma.autoWhereInput[]
  OR?: Prisma.autoWhereInput[]
  NOT?: Prisma.autoWhereInput | Prisma.autoWhereInput[]
  make?: Prisma.StringFilter<"auto"> | string
  model?: Prisma.StringFilter<"auto"> | string
  vehicle_year?: Prisma.IntFilter<"auto"> | number
  miles?: Prisma.IntFilter<"auto"> | number
  owner_id?: Prisma.IntFilter<"auto"> | number
  created_at?: Prisma.DateTimeNullableFilter<"auto"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"auto"> | Date | string | null
  users?: Prisma.XOR<Prisma.UsersScalarRelationFilter, Prisma.usersWhereInput>
  vehicle_history?: Prisma.Vehicle_historyListRelationFilter
  vehiclemaintenance?: Prisma.VehiclemaintenanceListRelationFilter
}, "vin_id" | "vin">

export type autoOrderByWithAggregationInput = {
  vin_id?: Prisma.SortOrder
  vin?: Prisma.SortOrder
  make?: Prisma.SortOrder
  model?: Prisma.SortOrder
  vehicle_year?: Prisma.SortOrder
  miles?: Prisma.SortOrder
  owner_id?: Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.autoCountOrderByAggregateInput
  _avg?: Prisma.autoAvgOrderByAggregateInput
  _max?: Prisma.autoMaxOrderByAggregateInput
  _min?: Prisma.autoMinOrderByAggregateInput
  _sum?: Prisma.autoSumOrderByAggregateInput
}

export type autoScalarWhereWithAggregatesInput = {
  AND?: Prisma.autoScalarWhereWithAggregatesInput | Prisma.autoScalarWhereWithAggregatesInput[]
  OR?: Prisma.autoScalarWhereWithAggregatesInput[]
  NOT?: Prisma.autoScalarWhereWithAggregatesInput | Prisma.autoScalarWhereWithAggregatesInput[]
  vin_id?: Prisma.IntWithAggregatesFilter<"auto"> | number
  vin?: Prisma.StringWithAggregatesFilter<"auto"> | string
  make?: Prisma.StringWithAggregatesFilter<"auto"> | string
  model?: Prisma.StringWithAggregatesFilter<"auto"> | string
  vehicle_year?: Prisma.IntWithAggregatesFilter<"auto"> | number
  miles?: Prisma.IntWithAggregatesFilter<"auto"> | number
  owner_id?: Prisma.IntWithAggregatesFilter<"auto"> | number
  created_at?: Prisma.DateTimeNullableWithAggregatesFilter<"auto"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableWithAggregatesFilter<"auto"> | Date | string | null
}

export type autoCreateInput = {
  vin: string
  make: string
  model: string
  vehicle_year: number
  miles: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
  users: Prisma.usersCreateNestedOneWithoutAutoInput
  vehicle_history?: Prisma.vehicle_historyCreateNestedManyWithoutAutoInput
  vehiclemaintenance?: Prisma.vehiclemaintenanceCreateNestedManyWithoutAutoInput
}

export type autoUncheckedCreateInput = {
  vin_id?: number
  vin: string
  make: string
  model: string
  vehicle_year: number
  miles: number
  owner_id: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
  vehicle_history?: Prisma.vehicle_historyUncheckedCreateNestedManyWithoutAutoInput
  vehiclemaintenance?: Prisma.vehiclemaintenanceUncheckedCreateNestedManyWithoutAutoInput
}

export type autoUpdateInput = {
  vin?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  vehicle_year?: Prisma.IntFieldUpdateOperationsInput | number
  miles?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.usersUpdateOneRequiredWithoutAutoNestedInput
  vehicle_history?: Prisma.vehicle_historyUpdateManyWithoutAutoNestedInput
  vehiclemaintenance?: Prisma.vehiclemaintenanceUpdateManyWithoutAutoNestedInput
}

export type autoUncheckedUpdateInput = {
  vin_id?: Prisma.IntFieldUpdateOperationsInput | number
  vin?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  vehicle_year?: Prisma.IntFieldUpdateOperationsInput | number
  miles?: Prisma.IntFieldUpdateOperationsInput | number
  owner_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  vehicle_history?: Prisma.vehicle_historyUncheckedUpdateManyWithoutAutoNestedInput
  vehiclemaintenance?: Prisma.vehiclemaintenanceUncheckedUpdateManyWithoutAutoNestedInput
}

export type autoCreateManyInput = {
  vin_id?: number
  vin: string
  make: string
  model: string
  vehicle_year: number
  miles: number
  owner_id: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type autoUpdateManyMutationInput = {
  vin?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  vehicle_year?: Prisma.IntFieldUpdateOperationsInput | number
  miles?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type autoUncheckedUpdateManyInput = {
  vin_id?: Prisma.IntFieldUpdateOperationsInput | number
  vin?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  vehicle_year?: Prisma.IntFieldUpdateOperationsInput | number
  miles?: Prisma.IntFieldUpdateOperationsInput | number
  owner_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type autoCountOrderByAggregateInput = {
  vin_id?: Prisma.SortOrder
  vin?: Prisma.SortOrder
  make?: Prisma.SortOrder
  model?: Prisma.SortOrder
  vehicle_year?: Prisma.SortOrder
  miles?: Prisma.SortOrder
  owner_id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type autoAvgOrderByAggregateInput = {
  vin_id?: Prisma.SortOrder
  vehicle_year?: Prisma.SortOrder
  miles?: Prisma.SortOrder
  owner_id?: Prisma.SortOrder
}

export type autoMaxOrderByAggregateInput = {
  vin_id?: Prisma.SortOrder
  vin?: Prisma.SortOrder
  make?: Prisma.SortOrder
  model?: Prisma.SortOrder
  vehicle_year?: Prisma.SortOrder
  miles?: Prisma.SortOrder
  owner_id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type autoMinOrderByAggregateInput = {
  vin_id?: Prisma.SortOrder
  vin?: Prisma.SortOrder
  make?: Prisma.SortOrder
  model?: Prisma.SortOrder
  vehicle_year?: Prisma.SortOrder
  miles?: Prisma.SortOrder
  owner_id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type autoSumOrderByAggregateInput = {
  vin_id?: Prisma.SortOrder
  vehicle_year?: Prisma.SortOrder
  miles?: Prisma.SortOrder
  owner_id?: Prisma.SortOrder
}

export type AutoListRelationFilter = {
  every?: Prisma.autoWhereInput
  some?: Prisma.autoWhereInput
  none?: Prisma.autoWhereInput
}

export type autoOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type AutoScalarRelationFilter = {
  is?: Prisma.autoWhereInput
  isNot?: Prisma.autoWhereInput
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}

export type autoCreateNestedManyWithoutUsersInput = {
  create?: Prisma.XOR<Prisma.autoCreateWithoutUsersInput, Prisma.autoUncheckedCreateWithoutUsersInput> | Prisma.autoCreateWithoutUsersInput[] | Prisma.autoUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.autoCreateOrConnectWithoutUsersInput | Prisma.autoCreateOrConnectWithoutUsersInput[]
  createMany?: Prisma.autoCreateManyUsersInputEnvelope
  connect?: Prisma.autoWhereUniqueInput | Prisma.autoWhereUniqueInput[]
}

export type autoUncheckedCreateNestedManyWithoutUsersInput = {
  create?: Prisma.XOR<Prisma.autoCreateWithoutUsersInput, Prisma.autoUncheckedCreateWithoutUsersInput> | Prisma.autoCreateWithoutUsersInput[] | Prisma.autoUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.autoCreateOrConnectWithoutUsersInput | Prisma.autoCreateOrConnectWithoutUsersInput[]
  createMany?: Prisma.autoCreateManyUsersInputEnvelope
  connect?: Prisma.autoWhereUniqueInput | Prisma.autoWhereUniqueInput[]
}

export type autoUpdateManyWithoutUsersNestedInput = {
  create?: Prisma.XOR<Prisma.autoCreateWithoutUsersInput, Prisma.autoUncheckedCreateWithoutUsersInput> | Prisma.autoCreateWithoutUsersInput[] | Prisma.autoUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.autoCreateOrConnectWithoutUsersInput | Prisma.autoCreateOrConnectWithoutUsersInput[]
  upsert?: Prisma.autoUpsertWithWhereUniqueWithoutUsersInput | Prisma.autoUpsertWithWhereUniqueWithoutUsersInput[]
  createMany?: Prisma.autoCreateManyUsersInputEnvelope
  set?: Prisma.autoWhereUniqueInput | Prisma.autoWhereUniqueInput[]
  disconnect?: Prisma.autoWhereUniqueInput | Prisma.autoWhereUniqueInput[]
  delete?: Prisma.autoWhereUniqueInput | Prisma.autoWhereUniqueInput[]
  connect?: Prisma.autoWhereUniqueInput | Prisma.autoWhereUniqueInput[]
  update?: Prisma.autoUpdateWithWhereUniqueWithoutUsersInput | Prisma.autoUpdateWithWhereUniqueWithoutUsersInput[]
  updateMany?: Prisma.autoUpdateManyWithWhereWithoutUsersInput | Prisma.autoUpdateManyWithWhereWithoutUsersInput[]
  deleteMany?: Prisma.autoScalarWhereInput | Prisma.autoScalarWhereInput[]
}

export type autoUncheckedUpdateManyWithoutUsersNestedInput = {
  create?: Prisma.XOR<Prisma.autoCreateWithoutUsersInput, Prisma.autoUncheckedCreateWithoutUsersInput> | Prisma.autoCreateWithoutUsersInput[] | Prisma.autoUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.autoCreateOrConnectWithoutUsersInput | Prisma.autoCreateOrConnectWithoutUsersInput[]
  upsert?: Prisma.autoUpsertWithWhereUniqueWithoutUsersInput | Prisma.autoUpsertWithWhereUniqueWithoutUsersInput[]
  createMany?: Prisma.autoCreateManyUsersInputEnvelope
  set?: Prisma.autoWhereUniqueInput | Prisma.autoWhereUniqueInput[]
  disconnect?: Prisma.autoWhereUniqueInput | Prisma.autoWhereUniqueInput[]
  delete?: Prisma.autoWhereUniqueInput | Prisma.autoWhereUniqueInput[]
  connect?: Prisma.autoWhereUniqueInput | Prisma.autoWhereUniqueInput[]
  update?: Prisma.autoUpdateWithWhereUniqueWithoutUsersInput | Prisma.autoUpdateWithWhereUniqueWithoutUsersInput[]
  updateMany?: Prisma.autoUpdateManyWithWhereWithoutUsersInput | Prisma.autoUpdateManyWithWhereWithoutUsersInput[]
  deleteMany?: Prisma.autoScalarWhereInput | Prisma.autoScalarWhereInput[]
}

export type autoCreateNestedOneWithoutVehicle_historyInput = {
  create?: Prisma.XOR<Prisma.autoCreateWithoutVehicle_historyInput, Prisma.autoUncheckedCreateWithoutVehicle_historyInput>
  connectOrCreate?: Prisma.autoCreateOrConnectWithoutVehicle_historyInput
  connect?: Prisma.autoWhereUniqueInput
}

export type autoUpdateOneRequiredWithoutVehicle_historyNestedInput = {
  create?: Prisma.XOR<Prisma.autoCreateWithoutVehicle_historyInput, Prisma.autoUncheckedCreateWithoutVehicle_historyInput>
  connectOrCreate?: Prisma.autoCreateOrConnectWithoutVehicle_historyInput
  upsert?: Prisma.autoUpsertWithoutVehicle_historyInput
  connect?: Prisma.autoWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.autoUpdateToOneWithWhereWithoutVehicle_historyInput, Prisma.autoUpdateWithoutVehicle_historyInput>, Prisma.autoUncheckedUpdateWithoutVehicle_historyInput>
}

export type autoCreateNestedOneWithoutVehiclemaintenanceInput = {
  create?: Prisma.XOR<Prisma.autoCreateWithoutVehiclemaintenanceInput, Prisma.autoUncheckedCreateWithoutVehiclemaintenanceInput>
  connectOrCreate?: Prisma.autoCreateOrConnectWithoutVehiclemaintenanceInput
  connect?: Prisma.autoWhereUniqueInput
}

export type autoUpdateOneRequiredWithoutVehiclemaintenanceNestedInput = {
  create?: Prisma.XOR<Prisma.autoCreateWithoutVehiclemaintenanceInput, Prisma.autoUncheckedCreateWithoutVehiclemaintenanceInput>
  connectOrCreate?: Prisma.autoCreateOrConnectWithoutVehiclemaintenanceInput
  upsert?: Prisma.autoUpsertWithoutVehiclemaintenanceInput
  connect?: Prisma.autoWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.autoUpdateToOneWithWhereWithoutVehiclemaintenanceInput, Prisma.autoUpdateWithoutVehiclemaintenanceInput>, Prisma.autoUncheckedUpdateWithoutVehiclemaintenanceInput>
}

export type autoCreateWithoutUsersInput = {
  vin: string
  make: string
  model: string
  vehicle_year: number
  miles: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
  vehicle_history?: Prisma.vehicle_historyCreateNestedManyWithoutAutoInput
  vehiclemaintenance?: Prisma.vehiclemaintenanceCreateNestedManyWithoutAutoInput
}

export type autoUncheckedCreateWithoutUsersInput = {
  vin_id?: number
  vin: string
  make: string
  model: string
  vehicle_year: number
  miles: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
  vehicle_history?: Prisma.vehicle_historyUncheckedCreateNestedManyWithoutAutoInput
  vehiclemaintenance?: Prisma.vehiclemaintenanceUncheckedCreateNestedManyWithoutAutoInput
}

export type autoCreateOrConnectWithoutUsersInput = {
  where: Prisma.autoWhereUniqueInput
  create: Prisma.XOR<Prisma.autoCreateWithoutUsersInput, Prisma.autoUncheckedCreateWithoutUsersInput>
}

export type autoCreateManyUsersInputEnvelope = {
  data: Prisma.autoCreateManyUsersInput | Prisma.autoCreateManyUsersInput[]
  skipDuplicates?: boolean
}

export type autoUpsertWithWhereUniqueWithoutUsersInput = {
  where: Prisma.autoWhereUniqueInput
  update: Prisma.XOR<Prisma.autoUpdateWithoutUsersInput, Prisma.autoUncheckedUpdateWithoutUsersInput>
  create: Prisma.XOR<Prisma.autoCreateWithoutUsersInput, Prisma.autoUncheckedCreateWithoutUsersInput>
}

export type autoUpdateWithWhereUniqueWithoutUsersInput = {
  where: Prisma.autoWhereUniqueInput
  data: Prisma.XOR<Prisma.autoUpdateWithoutUsersInput, Prisma.autoUncheckedUpdateWithoutUsersInput>
}

export type autoUpdateManyWithWhereWithoutUsersInput = {
  where: Prisma.autoScalarWhereInput
  data: Prisma.XOR<Prisma.autoUpdateManyMutationInput, Prisma.autoUncheckedUpdateManyWithoutUsersInput>
}

export type autoScalarWhereInput = {
  AND?: Prisma.autoScalarWhereInput | Prisma.autoScalarWhereInput[]
  OR?: Prisma.autoScalarWhereInput[]
  NOT?: Prisma.autoScalarWhereInput | Prisma.autoScalarWhereInput[]
  vin_id?: Prisma.IntFilter<"auto"> | number
  vin?: Prisma.StringFilter<"auto"> | string
  make?: Prisma.StringFilter<"auto"> | string
  model?: Prisma.StringFilter<"auto"> | string
  vehicle_year?: Prisma.IntFilter<"auto"> | number
  miles?: Prisma.IntFilter<"auto"> | number
  owner_id?: Prisma.IntFilter<"auto"> | number
  created_at?: Prisma.DateTimeNullableFilter<"auto"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"auto"> | Date | string | null
}

export type autoCreateWithoutVehicle_historyInput = {
  vin: string
  make: string
  model: string
  vehicle_year: number
  miles: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
  users: Prisma.usersCreateNestedOneWithoutAutoInput
  vehiclemaintenance?: Prisma.vehiclemaintenanceCreateNestedManyWithoutAutoInput
}

export type autoUncheckedCreateWithoutVehicle_historyInput = {
  vin_id?: number
  vin: string
  make: string
  model: string
  vehicle_year: number
  miles: number
  owner_id: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
  vehiclemaintenance?: Prisma.vehiclemaintenanceUncheckedCreateNestedManyWithoutAutoInput
}

export type autoCreateOrConnectWithoutVehicle_historyInput = {
  where: Prisma.autoWhereUniqueInput
  create: Prisma.XOR<Prisma.autoCreateWithoutVehicle_historyInput, Prisma.autoUncheckedCreateWithoutVehicle_historyInput>
}

export type autoUpsertWithoutVehicle_historyInput = {
  update: Prisma.XOR<Prisma.autoUpdateWithoutVehicle_historyInput, Prisma.autoUncheckedUpdateWithoutVehicle_historyInput>
  create: Prisma.XOR<Prisma.autoCreateWithoutVehicle_historyInput, Prisma.autoUncheckedCreateWithoutVehicle_historyInput>
  where?: Prisma.autoWhereInput
}

export type autoUpdateToOneWithWhereWithoutVehicle_historyInput = {
  where?: Prisma.autoWhereInput
  data: Prisma.XOR<Prisma.autoUpdateWithoutVehicle_historyInput, Prisma.autoUncheckedUpdateWithoutVehicle_historyInput>
}

export type autoUpdateWithoutVehicle_historyInput = {
  vin?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  vehicle_year?: Prisma.IntFieldUpdateOperationsInput | number
  miles?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.usersUpdateOneRequiredWithoutAutoNestedInput
  vehiclemaintenance?: Prisma.vehiclemaintenanceUpdateManyWithoutAutoNestedInput
}

export type autoUncheckedUpdateWithoutVehicle_historyInput = {
  vin_id?: Prisma.IntFieldUpdateOperationsInput | number
  vin?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  vehicle_year?: Prisma.IntFieldUpdateOperationsInput | number
  miles?: Prisma.IntFieldUpdateOperationsInput | number
  owner_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  vehiclemaintenance?: Prisma.vehiclemaintenanceUncheckedUpdateManyWithoutAutoNestedInput
}

export type autoCreateWithoutVehiclemaintenanceInput = {
  vin: string
  make: string
  model: string
  vehicle_year: number
  miles: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
  users: Prisma.usersCreateNestedOneWithoutAutoInput
  vehicle_history?: Prisma.vehicle_historyCreateNestedManyWithoutAutoInput
}

export type autoUncheckedCreateWithoutVehiclemaintenanceInput = {
  vin_id?: number
  vin: string
  make: string
  model: string
  vehicle_year: number
  miles: number
  owner_id: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
  vehicle_history?: Prisma.vehicle_historyUncheckedCreateNestedManyWithoutAutoInput
}

export type autoCreateOrConnectWithoutVehiclemaintenanceInput = {
  where: Prisma.autoWhereUniqueInput
  create: Prisma.XOR<Prisma.autoCreateWithoutVehiclemaintenanceInput, Prisma.autoUncheckedCreateWithoutVehiclemaintenanceInput>
}

export type autoUpsertWithoutVehiclemaintenanceInput = {
  update: Prisma.XOR<Prisma.autoUpdateWithoutVehiclemaintenanceInput, Prisma.autoUncheckedUpdateWithoutVehiclemaintenanceInput>
  create: Prisma.XOR<Prisma.autoCreateWithoutVehiclemaintenanceInput, Prisma.autoUncheckedCreateWithoutVehiclemaintenanceInput>
  where?: Prisma.autoWhereInput
}

export type autoUpdateToOneWithWhereWithoutVehiclemaintenanceInput = {
  where?: Prisma.autoWhereInput
  data: Prisma.XOR<Prisma.autoUpdateWithoutVehiclemaintenanceInput, Prisma.autoUncheckedUpdateWithoutVehiclemaintenanceInput>
}

export type autoUpdateWithoutVehiclemaintenanceInput = {
  vin?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  vehicle_year?: Prisma.IntFieldUpdateOperationsInput | number
  miles?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.usersUpdateOneRequiredWithoutAutoNestedInput
  vehicle_history?: Prisma.vehicle_historyUpdateManyWithoutAutoNestedInput
}

export type autoUncheckedUpdateWithoutVehiclemaintenanceInput = {
  vin_id?: Prisma.IntFieldUpdateOperationsInput | number
  vin?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  vehicle_year?: Prisma.IntFieldUpdateOperationsInput | number
  miles?: Prisma.IntFieldUpdateOperationsInput | number
  owner_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  vehicle_history?: Prisma.vehicle_historyUncheckedUpdateManyWithoutAutoNestedInput
}

export type autoCreateManyUsersInput = {
  vin_id?: number
  vin: string
  make: string
  model: string
  vehicle_year: number
  miles: number
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type autoUpdateWithoutUsersInput = {
  vin?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  vehicle_year?: Prisma.IntFieldUpdateOperationsInput | number
  miles?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  vehicle_history?: Prisma.vehicle_historyUpdateManyWithoutAutoNestedInput
  vehiclemaintenance?: Prisma.vehiclemaintenanceUpdateManyWithoutAutoNestedInput
}

export type autoUncheckedUpdateWithoutUsersInput = {
  vin_id?: Prisma.IntFieldUpdateOperationsInput | number
  vin?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  vehicle_year?: Prisma.IntFieldUpdateOperationsInput | number
  miles?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  vehicle_history?: Prisma.vehicle_historyUncheckedUpdateManyWithoutAutoNestedInput
  vehiclemaintenance?: Prisma.vehiclemaintenanceUncheckedUpdateManyWithoutAutoNestedInput
}

export type autoUncheckedUpdateManyWithoutUsersInput = {
  vin_id?: Prisma.IntFieldUpdateOperationsInput | number
  vin?: Prisma.StringFieldUpdateOperationsInput | string
  make?: Prisma.StringFieldUpdateOperationsInput | string
  model?: Prisma.StringFieldUpdateOperationsInput | string
  vehicle_year?: Prisma.IntFieldUpdateOperationsInput | number
  miles?: Prisma.IntFieldUpdateOperationsInput | number
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}


/**
 * Count Type AutoCountOutputType
 */

export type AutoCountOutputType = {
  vehicle_history: number
  vehiclemaintenance: number
}

export type AutoCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  vehicle_history?: boolean | AutoCountOutputTypeCountVehicle_historyArgs
  vehiclemaintenance?: boolean | AutoCountOutputTypeCountVehiclemaintenanceArgs
}

/**
 * AutoCountOutputType without action
 */
export type AutoCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AutoCountOutputType
   */
  select?: Prisma.AutoCountOutputTypeSelect<ExtArgs> | null
}

/**
 * AutoCountOutputType without action
 */
export type AutoCountOutputTypeCountVehicle_historyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.vehicle_historyWhereInput
}

/**
 * AutoCountOutputType without action
 */
export type AutoCountOutputTypeCountVehiclemaintenanceArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.vehiclemaintenanceWhereInput
}


export type autoSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  vin_id?: boolean
  vin?: boolean
  make?: boolean
  model?: boolean
  vehicle_year?: boolean
  miles?: boolean
  owner_id?: boolean
  created_at?: boolean
  updated_at?: boolean
  users?: boolean | Prisma.usersDefaultArgs<ExtArgs>
  vehicle_history?: boolean | Prisma.auto$vehicle_historyArgs<ExtArgs>
  vehiclemaintenance?: boolean | Prisma.auto$vehiclemaintenanceArgs<ExtArgs>
  _count?: boolean | Prisma.AutoCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["auto"]>

export type autoSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  vin_id?: boolean
  vin?: boolean
  make?: boolean
  model?: boolean
  vehicle_year?: boolean
  miles?: boolean
  owner_id?: boolean
  created_at?: boolean
  updated_at?: boolean
  users?: boolean | Prisma.usersDefaultArgs<ExtArgs>
}, ExtArgs["result"]["auto"]>

export type autoSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  vin_id?: boolean
  vin?: boolean
  make?: boolean
  model?: boolean
  vehicle_year?: boolean
  miles?: boolean
  owner_id?: boolean
  created_at?: boolean
  updated_at?: boolean
  users?: boolean | Prisma.usersDefaultArgs<ExtArgs>
}, ExtArgs["result"]["auto"]>

export type autoSelectScalar = {
  vin_id?: boolean
  vin?: boolean
  make?: boolean
  model?: boolean
  vehicle_year?: boolean
  miles?: boolean
  owner_id?: boolean
  created_at?: boolean
  updated_at?: boolean
}

export type autoOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"vin_id" | "vin" | "make" | "model" | "vehicle_year" | "miles" | "owner_id" | "created_at" | "updated_at", ExtArgs["result"]["auto"]>
export type autoInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  users?: boolean | Prisma.usersDefaultArgs<ExtArgs>
  vehicle_history?: boolean | Prisma.auto$vehicle_historyArgs<ExtArgs>
  vehiclemaintenance?: boolean | Prisma.auto$vehiclemaintenanceArgs<ExtArgs>
  _count?: boolean | Prisma.AutoCountOutputTypeDefaultArgs<ExtArgs>
}
export type autoIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  users?: boolean | Prisma.usersDefaultArgs<ExtArgs>
}
export type autoIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  users?: boolean | Prisma.usersDefaultArgs<ExtArgs>
}

export type $autoPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "auto"
  objects: {
    users: Prisma.$usersPayload<ExtArgs>
    vehicle_history: Prisma.$vehicle_historyPayload<ExtArgs>[]
    vehiclemaintenance: Prisma.$vehiclemaintenancePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    vin_id: number
    vin: string
    make: string
    model: string
    vehicle_year: number
    miles: number
    owner_id: number
    created_at: Date | null
    updated_at: Date | null
  }, ExtArgs["result"]["auto"]>
  composites: {}
}

export type autoGetPayload<S extends boolean | null | undefined | autoDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$autoPayload, S>

export type autoCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<autoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: AutoCountAggregateInputType | true
  }

export interface autoDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['auto'], meta: { name: 'auto' } }
  /**
   * Find zero or one Auto that matches the filter.
   * @param {autoFindUniqueArgs} args - Arguments to find a Auto
   * @example
   * // Get one Auto
   * const auto = await prisma.auto.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends autoFindUniqueArgs>(args: Prisma.SelectSubset<T, autoFindUniqueArgs<ExtArgs>>): Prisma.Prisma__autoClient<runtime.Types.Result.GetResult<Prisma.$autoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Auto that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {autoFindUniqueOrThrowArgs} args - Arguments to find a Auto
   * @example
   * // Get one Auto
   * const auto = await prisma.auto.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends autoFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, autoFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__autoClient<runtime.Types.Result.GetResult<Prisma.$autoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Auto that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {autoFindFirstArgs} args - Arguments to find a Auto
   * @example
   * // Get one Auto
   * const auto = await prisma.auto.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends autoFindFirstArgs>(args?: Prisma.SelectSubset<T, autoFindFirstArgs<ExtArgs>>): Prisma.Prisma__autoClient<runtime.Types.Result.GetResult<Prisma.$autoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Auto that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {autoFindFirstOrThrowArgs} args - Arguments to find a Auto
   * @example
   * // Get one Auto
   * const auto = await prisma.auto.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends autoFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, autoFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__autoClient<runtime.Types.Result.GetResult<Prisma.$autoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Autos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {autoFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Autos
   * const autos = await prisma.auto.findMany()
   * 
   * // Get first 10 Autos
   * const autos = await prisma.auto.findMany({ take: 10 })
   * 
   * // Only select the `vin_id`
   * const autoWithVin_idOnly = await prisma.auto.findMany({ select: { vin_id: true } })
   * 
   */
  findMany<T extends autoFindManyArgs>(args?: Prisma.SelectSubset<T, autoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$autoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Auto.
   * @param {autoCreateArgs} args - Arguments to create a Auto.
   * @example
   * // Create one Auto
   * const Auto = await prisma.auto.create({
   *   data: {
   *     // ... data to create a Auto
   *   }
   * })
   * 
   */
  create<T extends autoCreateArgs>(args: Prisma.SelectSubset<T, autoCreateArgs<ExtArgs>>): Prisma.Prisma__autoClient<runtime.Types.Result.GetResult<Prisma.$autoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Autos.
   * @param {autoCreateManyArgs} args - Arguments to create many Autos.
   * @example
   * // Create many Autos
   * const auto = await prisma.auto.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends autoCreateManyArgs>(args?: Prisma.SelectSubset<T, autoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Autos and returns the data saved in the database.
   * @param {autoCreateManyAndReturnArgs} args - Arguments to create many Autos.
   * @example
   * // Create many Autos
   * const auto = await prisma.auto.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Autos and only return the `vin_id`
   * const autoWithVin_idOnly = await prisma.auto.createManyAndReturn({
   *   select: { vin_id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends autoCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, autoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$autoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Auto.
   * @param {autoDeleteArgs} args - Arguments to delete one Auto.
   * @example
   * // Delete one Auto
   * const Auto = await prisma.auto.delete({
   *   where: {
   *     // ... filter to delete one Auto
   *   }
   * })
   * 
   */
  delete<T extends autoDeleteArgs>(args: Prisma.SelectSubset<T, autoDeleteArgs<ExtArgs>>): Prisma.Prisma__autoClient<runtime.Types.Result.GetResult<Prisma.$autoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Auto.
   * @param {autoUpdateArgs} args - Arguments to update one Auto.
   * @example
   * // Update one Auto
   * const auto = await prisma.auto.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends autoUpdateArgs>(args: Prisma.SelectSubset<T, autoUpdateArgs<ExtArgs>>): Prisma.Prisma__autoClient<runtime.Types.Result.GetResult<Prisma.$autoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Autos.
   * @param {autoDeleteManyArgs} args - Arguments to filter Autos to delete.
   * @example
   * // Delete a few Autos
   * const { count } = await prisma.auto.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends autoDeleteManyArgs>(args?: Prisma.SelectSubset<T, autoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Autos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {autoUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Autos
   * const auto = await prisma.auto.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends autoUpdateManyArgs>(args: Prisma.SelectSubset<T, autoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Autos and returns the data updated in the database.
   * @param {autoUpdateManyAndReturnArgs} args - Arguments to update many Autos.
   * @example
   * // Update many Autos
   * const auto = await prisma.auto.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Autos and only return the `vin_id`
   * const autoWithVin_idOnly = await prisma.auto.updateManyAndReturn({
   *   select: { vin_id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends autoUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, autoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$autoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Auto.
   * @param {autoUpsertArgs} args - Arguments to update or create a Auto.
   * @example
   * // Update or create a Auto
   * const auto = await prisma.auto.upsert({
   *   create: {
   *     // ... data to create a Auto
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Auto we want to update
   *   }
   * })
   */
  upsert<T extends autoUpsertArgs>(args: Prisma.SelectSubset<T, autoUpsertArgs<ExtArgs>>): Prisma.Prisma__autoClient<runtime.Types.Result.GetResult<Prisma.$autoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Autos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {autoCountArgs} args - Arguments to filter Autos to count.
   * @example
   * // Count the number of Autos
   * const count = await prisma.auto.count({
   *   where: {
   *     // ... the filter for the Autos we want to count
   *   }
   * })
  **/
  count<T extends autoCountArgs>(
    args?: Prisma.Subset<T, autoCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], AutoCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Auto.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AutoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends AutoAggregateArgs>(args: Prisma.Subset<T, AutoAggregateArgs>): Prisma.PrismaPromise<GetAutoAggregateType<T>>

  /**
   * Group by Auto.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {autoGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends autoGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: autoGroupByArgs['orderBy'] }
      : { orderBy?: autoGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, autoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAutoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the auto model
 */
readonly fields: autoFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for auto.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__autoClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  users<T extends Prisma.usersDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.usersDefaultArgs<ExtArgs>>): Prisma.Prisma__usersClient<runtime.Types.Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  vehicle_history<T extends Prisma.auto$vehicle_historyArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.auto$vehicle_historyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$vehicle_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  vehiclemaintenance<T extends Prisma.auto$vehiclemaintenanceArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.auto$vehiclemaintenanceArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$vehiclemaintenancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the auto model
 */
export interface autoFieldRefs {
  readonly vin_id: Prisma.FieldRef<"auto", 'Int'>
  readonly vin: Prisma.FieldRef<"auto", 'String'>
  readonly make: Prisma.FieldRef<"auto", 'String'>
  readonly model: Prisma.FieldRef<"auto", 'String'>
  readonly vehicle_year: Prisma.FieldRef<"auto", 'Int'>
  readonly miles: Prisma.FieldRef<"auto", 'Int'>
  readonly owner_id: Prisma.FieldRef<"auto", 'Int'>
  readonly created_at: Prisma.FieldRef<"auto", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"auto", 'DateTime'>
}
    

// Custom InputTypes
/**
 * auto findUnique
 */
export type autoFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the auto
   */
  select?: Prisma.autoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the auto
   */
  omit?: Prisma.autoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.autoInclude<ExtArgs> | null
  /**
   * Filter, which auto to fetch.
   */
  where: Prisma.autoWhereUniqueInput
}

/**
 * auto findUniqueOrThrow
 */
export type autoFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the auto
   */
  select?: Prisma.autoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the auto
   */
  omit?: Prisma.autoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.autoInclude<ExtArgs> | null
  /**
   * Filter, which auto to fetch.
   */
  where: Prisma.autoWhereUniqueInput
}

/**
 * auto findFirst
 */
export type autoFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the auto
   */
  select?: Prisma.autoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the auto
   */
  omit?: Prisma.autoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.autoInclude<ExtArgs> | null
  /**
   * Filter, which auto to fetch.
   */
  where?: Prisma.autoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of autos to fetch.
   */
  orderBy?: Prisma.autoOrderByWithRelationInput | Prisma.autoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for autos.
   */
  cursor?: Prisma.autoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` autos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` autos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of autos.
   */
  distinct?: Prisma.AutoScalarFieldEnum | Prisma.AutoScalarFieldEnum[]
}

/**
 * auto findFirstOrThrow
 */
export type autoFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the auto
   */
  select?: Prisma.autoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the auto
   */
  omit?: Prisma.autoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.autoInclude<ExtArgs> | null
  /**
   * Filter, which auto to fetch.
   */
  where?: Prisma.autoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of autos to fetch.
   */
  orderBy?: Prisma.autoOrderByWithRelationInput | Prisma.autoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for autos.
   */
  cursor?: Prisma.autoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` autos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` autos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of autos.
   */
  distinct?: Prisma.AutoScalarFieldEnum | Prisma.AutoScalarFieldEnum[]
}

/**
 * auto findMany
 */
export type autoFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the auto
   */
  select?: Prisma.autoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the auto
   */
  omit?: Prisma.autoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.autoInclude<ExtArgs> | null
  /**
   * Filter, which autos to fetch.
   */
  where?: Prisma.autoWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of autos to fetch.
   */
  orderBy?: Prisma.autoOrderByWithRelationInput | Prisma.autoOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing autos.
   */
  cursor?: Prisma.autoWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` autos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` autos.
   */
  skip?: number
  distinct?: Prisma.AutoScalarFieldEnum | Prisma.AutoScalarFieldEnum[]
}

/**
 * auto create
 */
export type autoCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the auto
   */
  select?: Prisma.autoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the auto
   */
  omit?: Prisma.autoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.autoInclude<ExtArgs> | null
  /**
   * The data needed to create a auto.
   */
  data: Prisma.XOR<Prisma.autoCreateInput, Prisma.autoUncheckedCreateInput>
}

/**
 * auto createMany
 */
export type autoCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many autos.
   */
  data: Prisma.autoCreateManyInput | Prisma.autoCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * auto createManyAndReturn
 */
export type autoCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the auto
   */
  select?: Prisma.autoSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the auto
   */
  omit?: Prisma.autoOmit<ExtArgs> | null
  /**
   * The data used to create many autos.
   */
  data: Prisma.autoCreateManyInput | Prisma.autoCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.autoIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * auto update
 */
export type autoUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the auto
   */
  select?: Prisma.autoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the auto
   */
  omit?: Prisma.autoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.autoInclude<ExtArgs> | null
  /**
   * The data needed to update a auto.
   */
  data: Prisma.XOR<Prisma.autoUpdateInput, Prisma.autoUncheckedUpdateInput>
  /**
   * Choose, which auto to update.
   */
  where: Prisma.autoWhereUniqueInput
}

/**
 * auto updateMany
 */
export type autoUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update autos.
   */
  data: Prisma.XOR<Prisma.autoUpdateManyMutationInput, Prisma.autoUncheckedUpdateManyInput>
  /**
   * Filter which autos to update
   */
  where?: Prisma.autoWhereInput
  /**
   * Limit how many autos to update.
   */
  limit?: number
}

/**
 * auto updateManyAndReturn
 */
export type autoUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the auto
   */
  select?: Prisma.autoSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the auto
   */
  omit?: Prisma.autoOmit<ExtArgs> | null
  /**
   * The data used to update autos.
   */
  data: Prisma.XOR<Prisma.autoUpdateManyMutationInput, Prisma.autoUncheckedUpdateManyInput>
  /**
   * Filter which autos to update
   */
  where?: Prisma.autoWhereInput
  /**
   * Limit how many autos to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.autoIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * auto upsert
 */
export type autoUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the auto
   */
  select?: Prisma.autoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the auto
   */
  omit?: Prisma.autoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.autoInclude<ExtArgs> | null
  /**
   * The filter to search for the auto to update in case it exists.
   */
  where: Prisma.autoWhereUniqueInput
  /**
   * In case the auto found by the `where` argument doesn't exist, create a new auto with this data.
   */
  create: Prisma.XOR<Prisma.autoCreateInput, Prisma.autoUncheckedCreateInput>
  /**
   * In case the auto was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.autoUpdateInput, Prisma.autoUncheckedUpdateInput>
}

/**
 * auto delete
 */
export type autoDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the auto
   */
  select?: Prisma.autoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the auto
   */
  omit?: Prisma.autoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.autoInclude<ExtArgs> | null
  /**
   * Filter which auto to delete.
   */
  where: Prisma.autoWhereUniqueInput
}

/**
 * auto deleteMany
 */
export type autoDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which autos to delete
   */
  where?: Prisma.autoWhereInput
  /**
   * Limit how many autos to delete.
   */
  limit?: number
}

/**
 * auto.vehicle_history
 */
export type auto$vehicle_historyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the vehicle_history
   */
  select?: Prisma.vehicle_historySelect<ExtArgs> | null
  /**
   * Omit specific fields from the vehicle_history
   */
  omit?: Prisma.vehicle_historyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.vehicle_historyInclude<ExtArgs> | null
  where?: Prisma.vehicle_historyWhereInput
  orderBy?: Prisma.vehicle_historyOrderByWithRelationInput | Prisma.vehicle_historyOrderByWithRelationInput[]
  cursor?: Prisma.vehicle_historyWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Vehicle_historyScalarFieldEnum | Prisma.Vehicle_historyScalarFieldEnum[]
}

/**
 * auto.vehiclemaintenance
 */
export type auto$vehiclemaintenanceArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the vehiclemaintenance
   */
  select?: Prisma.vehiclemaintenanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the vehiclemaintenance
   */
  omit?: Prisma.vehiclemaintenanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.vehiclemaintenanceInclude<ExtArgs> | null
  where?: Prisma.vehiclemaintenanceWhereInput
  orderBy?: Prisma.vehiclemaintenanceOrderByWithRelationInput | Prisma.vehiclemaintenanceOrderByWithRelationInput[]
  cursor?: Prisma.vehiclemaintenanceWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.VehiclemaintenanceScalarFieldEnum | Prisma.VehiclemaintenanceScalarFieldEnum[]
}

/**
 * auto without action
 */
export type autoDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the auto
   */
  select?: Prisma.autoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the auto
   */
  omit?: Prisma.autoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.autoInclude<ExtArgs> | null
}
