
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `parts` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model parts
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type partsModel = runtime.Types.Result.DefaultSelection<Prisma.$partsPayload>

export type AggregateParts = {
  _count: PartsCountAggregateOutputType | null
  _avg: PartsAvgAggregateOutputType | null
  _sum: PartsSumAggregateOutputType | null
  _min: PartsMinAggregateOutputType | null
  _max: PartsMaxAggregateOutputType | null
}

export type PartsAvgAggregateOutputType = {
  part_id: number | null
  maintenance_id: number | null
  quantity: number | null
  unit_cost: runtime.Decimal | null
  total_cost: runtime.Decimal | null
}

export type PartsSumAggregateOutputType = {
  part_id: number | null
  maintenance_id: number | null
  quantity: number | null
  unit_cost: runtime.Decimal | null
  total_cost: runtime.Decimal | null
}

export type PartsMinAggregateOutputType = {
  part_id: number | null
  maintenance_id: number | null
  part_name: string | null
  part_number: string | null
  part_type: string | null
  brand: string | null
  quantity: number | null
  unit_cost: runtime.Decimal | null
  total_cost: runtime.Decimal | null
  supplier_name: string | null
  purchase_date: Date | null
  under_warranty: boolean | null
  warranty_expiration: Date | null
  created_by: string | null
  created_date: Date | null
  updated_date: Date | null
  notes: string | null
}

export type PartsMaxAggregateOutputType = {
  part_id: number | null
  maintenance_id: number | null
  part_name: string | null
  part_number: string | null
  part_type: string | null
  brand: string | null
  quantity: number | null
  unit_cost: runtime.Decimal | null
  total_cost: runtime.Decimal | null
  supplier_name: string | null
  purchase_date: Date | null
  under_warranty: boolean | null
  warranty_expiration: Date | null
  created_by: string | null
  created_date: Date | null
  updated_date: Date | null
  notes: string | null
}

export type PartsCountAggregateOutputType = {
  part_id: number
  maintenance_id: number
  part_name: number
  part_number: number
  part_type: number
  brand: number
  quantity: number
  unit_cost: number
  total_cost: number
  supplier_name: number
  purchase_date: number
  under_warranty: number
  warranty_expiration: number
  created_by: number
  created_date: number
  updated_date: number
  notes: number
  _all: number
}


export type PartsAvgAggregateInputType = {
  part_id?: true
  maintenance_id?: true
  quantity?: true
  unit_cost?: true
  total_cost?: true
}

export type PartsSumAggregateInputType = {
  part_id?: true
  maintenance_id?: true
  quantity?: true
  unit_cost?: true
  total_cost?: true
}

export type PartsMinAggregateInputType = {
  part_id?: true
  maintenance_id?: true
  part_name?: true
  part_number?: true
  part_type?: true
  brand?: true
  quantity?: true
  unit_cost?: true
  total_cost?: true
  supplier_name?: true
  purchase_date?: true
  under_warranty?: true
  warranty_expiration?: true
  created_by?: true
  created_date?: true
  updated_date?: true
  notes?: true
}

export type PartsMaxAggregateInputType = {
  part_id?: true
  maintenance_id?: true
  part_name?: true
  part_number?: true
  part_type?: true
  brand?: true
  quantity?: true
  unit_cost?: true
  total_cost?: true
  supplier_name?: true
  purchase_date?: true
  under_warranty?: true
  warranty_expiration?: true
  created_by?: true
  created_date?: true
  updated_date?: true
  notes?: true
}

export type PartsCountAggregateInputType = {
  part_id?: true
  maintenance_id?: true
  part_name?: true
  part_number?: true
  part_type?: true
  brand?: true
  quantity?: true
  unit_cost?: true
  total_cost?: true
  supplier_name?: true
  purchase_date?: true
  under_warranty?: true
  warranty_expiration?: true
  created_by?: true
  created_date?: true
  updated_date?: true
  notes?: true
  _all?: true
}

export type PartsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which parts to aggregate.
   */
  where?: Prisma.partsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of parts to fetch.
   */
  orderBy?: Prisma.partsOrderByWithRelationInput | Prisma.partsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.partsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` parts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` parts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned parts
  **/
  _count?: true | PartsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: PartsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: PartsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: PartsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: PartsMaxAggregateInputType
}

export type GetPartsAggregateType<T extends PartsAggregateArgs> = {
      [P in keyof T & keyof AggregateParts]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateParts[P]>
    : Prisma.GetScalarType<T[P], AggregateParts[P]>
}




export type partsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.partsWhereInput
  orderBy?: Prisma.partsOrderByWithAggregationInput | Prisma.partsOrderByWithAggregationInput[]
  by: Prisma.PartsScalarFieldEnum[] | Prisma.PartsScalarFieldEnum
  having?: Prisma.partsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: PartsCountAggregateInputType | true
  _avg?: PartsAvgAggregateInputType
  _sum?: PartsSumAggregateInputType
  _min?: PartsMinAggregateInputType
  _max?: PartsMaxAggregateInputType
}

export type PartsGroupByOutputType = {
  part_id: number
  maintenance_id: number | null
  part_name: string | null
  part_number: string | null
  part_type: string | null
  brand: string | null
  quantity: number | null
  unit_cost: runtime.Decimal | null
  total_cost: runtime.Decimal | null
  supplier_name: string | null
  purchase_date: Date | null
  under_warranty: boolean
  warranty_expiration: Date | null
  created_by: string
  created_date: Date | null
  updated_date: Date | null
  notes: string | null
  _count: PartsCountAggregateOutputType | null
  _avg: PartsAvgAggregateOutputType | null
  _sum: PartsSumAggregateOutputType | null
  _min: PartsMinAggregateOutputType | null
  _max: PartsMaxAggregateOutputType | null
}

type GetPartsGroupByPayload<T extends partsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<PartsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof PartsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], PartsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], PartsGroupByOutputType[P]>
      }
    >
  >



export type partsWhereInput = {
  AND?: Prisma.partsWhereInput | Prisma.partsWhereInput[]
  OR?: Prisma.partsWhereInput[]
  NOT?: Prisma.partsWhereInput | Prisma.partsWhereInput[]
  part_id?: Prisma.IntFilter<"parts"> | number
  maintenance_id?: Prisma.IntNullableFilter<"parts"> | number | null
  part_name?: Prisma.StringNullableFilter<"parts"> | string | null
  part_number?: Prisma.StringNullableFilter<"parts"> | string | null
  part_type?: Prisma.StringNullableFilter<"parts"> | string | null
  brand?: Prisma.StringNullableFilter<"parts"> | string | null
  quantity?: Prisma.IntNullableFilter<"parts"> | number | null
  unit_cost?: Prisma.DecimalNullableFilter<"parts"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: Prisma.DecimalNullableFilter<"parts"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: Prisma.StringNullableFilter<"parts"> | string | null
  purchase_date?: Prisma.DateTimeNullableFilter<"parts"> | Date | string | null
  under_warranty?: Prisma.BoolFilter<"parts"> | boolean
  warranty_expiration?: Prisma.DateTimeNullableFilter<"parts"> | Date | string | null
  created_by?: Prisma.StringFilter<"parts"> | string
  created_date?: Prisma.DateTimeNullableFilter<"parts"> | Date | string | null
  updated_date?: Prisma.DateTimeNullableFilter<"parts"> | Date | string | null
  notes?: Prisma.StringNullableFilter<"parts"> | string | null
  vehiclemaintenance?: Prisma.XOR<Prisma.VehiclemaintenanceNullableScalarRelationFilter, Prisma.vehiclemaintenanceWhereInput> | null
}

export type partsOrderByWithRelationInput = {
  part_id?: Prisma.SortOrder
  maintenance_id?: Prisma.SortOrderInput | Prisma.SortOrder
  part_name?: Prisma.SortOrderInput | Prisma.SortOrder
  part_number?: Prisma.SortOrderInput | Prisma.SortOrder
  part_type?: Prisma.SortOrderInput | Prisma.SortOrder
  brand?: Prisma.SortOrderInput | Prisma.SortOrder
  quantity?: Prisma.SortOrderInput | Prisma.SortOrder
  unit_cost?: Prisma.SortOrderInput | Prisma.SortOrder
  total_cost?: Prisma.SortOrderInput | Prisma.SortOrder
  supplier_name?: Prisma.SortOrderInput | Prisma.SortOrder
  purchase_date?: Prisma.SortOrderInput | Prisma.SortOrder
  under_warranty?: Prisma.SortOrder
  warranty_expiration?: Prisma.SortOrderInput | Prisma.SortOrder
  created_by?: Prisma.SortOrder
  created_date?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_date?: Prisma.SortOrderInput | Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  vehiclemaintenance?: Prisma.vehiclemaintenanceOrderByWithRelationInput
}

export type partsWhereUniqueInput = Prisma.AtLeast<{
  part_id?: number
  AND?: Prisma.partsWhereInput | Prisma.partsWhereInput[]
  OR?: Prisma.partsWhereInput[]
  NOT?: Prisma.partsWhereInput | Prisma.partsWhereInput[]
  maintenance_id?: Prisma.IntNullableFilter<"parts"> | number | null
  part_name?: Prisma.StringNullableFilter<"parts"> | string | null
  part_number?: Prisma.StringNullableFilter<"parts"> | string | null
  part_type?: Prisma.StringNullableFilter<"parts"> | string | null
  brand?: Prisma.StringNullableFilter<"parts"> | string | null
  quantity?: Prisma.IntNullableFilter<"parts"> | number | null
  unit_cost?: Prisma.DecimalNullableFilter<"parts"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: Prisma.DecimalNullableFilter<"parts"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: Prisma.StringNullableFilter<"parts"> | string | null
  purchase_date?: Prisma.DateTimeNullableFilter<"parts"> | Date | string | null
  under_warranty?: Prisma.BoolFilter<"parts"> | boolean
  warranty_expiration?: Prisma.DateTimeNullableFilter<"parts"> | Date | string | null
  created_by?: Prisma.StringFilter<"parts"> | string
  created_date?: Prisma.DateTimeNullableFilter<"parts"> | Date | string | null
  updated_date?: Prisma.DateTimeNullableFilter<"parts"> | Date | string | null
  notes?: Prisma.StringNullableFilter<"parts"> | string | null
  vehiclemaintenance?: Prisma.XOR<Prisma.VehiclemaintenanceNullableScalarRelationFilter, Prisma.vehiclemaintenanceWhereInput> | null
}, "part_id">

export type partsOrderByWithAggregationInput = {
  part_id?: Prisma.SortOrder
  maintenance_id?: Prisma.SortOrderInput | Prisma.SortOrder
  part_name?: Prisma.SortOrderInput | Prisma.SortOrder
  part_number?: Prisma.SortOrderInput | Prisma.SortOrder
  part_type?: Prisma.SortOrderInput | Prisma.SortOrder
  brand?: Prisma.SortOrderInput | Prisma.SortOrder
  quantity?: Prisma.SortOrderInput | Prisma.SortOrder
  unit_cost?: Prisma.SortOrderInput | Prisma.SortOrder
  total_cost?: Prisma.SortOrderInput | Prisma.SortOrder
  supplier_name?: Prisma.SortOrderInput | Prisma.SortOrder
  purchase_date?: Prisma.SortOrderInput | Prisma.SortOrder
  under_warranty?: Prisma.SortOrder
  warranty_expiration?: Prisma.SortOrderInput | Prisma.SortOrder
  created_by?: Prisma.SortOrder
  created_date?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_date?: Prisma.SortOrderInput | Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.partsCountOrderByAggregateInput
  _avg?: Prisma.partsAvgOrderByAggregateInput
  _max?: Prisma.partsMaxOrderByAggregateInput
  _min?: Prisma.partsMinOrderByAggregateInput
  _sum?: Prisma.partsSumOrderByAggregateInput
}

export type partsScalarWhereWithAggregatesInput = {
  AND?: Prisma.partsScalarWhereWithAggregatesInput | Prisma.partsScalarWhereWithAggregatesInput[]
  OR?: Prisma.partsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.partsScalarWhereWithAggregatesInput | Prisma.partsScalarWhereWithAggregatesInput[]
  part_id?: Prisma.IntWithAggregatesFilter<"parts"> | number
  maintenance_id?: Prisma.IntNullableWithAggregatesFilter<"parts"> | number | null
  part_name?: Prisma.StringNullableWithAggregatesFilter<"parts"> | string | null
  part_number?: Prisma.StringNullableWithAggregatesFilter<"parts"> | string | null
  part_type?: Prisma.StringNullableWithAggregatesFilter<"parts"> | string | null
  brand?: Prisma.StringNullableWithAggregatesFilter<"parts"> | string | null
  quantity?: Prisma.IntNullableWithAggregatesFilter<"parts"> | number | null
  unit_cost?: Prisma.DecimalNullableWithAggregatesFilter<"parts"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: Prisma.DecimalNullableWithAggregatesFilter<"parts"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: Prisma.StringNullableWithAggregatesFilter<"parts"> | string | null
  purchase_date?: Prisma.DateTimeNullableWithAggregatesFilter<"parts"> | Date | string | null
  under_warranty?: Prisma.BoolWithAggregatesFilter<"parts"> | boolean
  warranty_expiration?: Prisma.DateTimeNullableWithAggregatesFilter<"parts"> | Date | string | null
  created_by?: Prisma.StringWithAggregatesFilter<"parts"> | string
  created_date?: Prisma.DateTimeNullableWithAggregatesFilter<"parts"> | Date | string | null
  updated_date?: Prisma.DateTimeNullableWithAggregatesFilter<"parts"> | Date | string | null
  notes?: Prisma.StringNullableWithAggregatesFilter<"parts"> | string | null
}

export type partsCreateInput = {
  part_name?: string | null
  part_number?: string | null
  part_type?: string | null
  brand?: string | null
  quantity?: number | null
  unit_cost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: string | null
  purchase_date?: Date | string | null
  under_warranty: boolean
  warranty_expiration?: Date | string | null
  created_by: string
  created_date?: Date | string | null
  updated_date?: Date | string | null
  notes?: string | null
  vehiclemaintenance?: Prisma.vehiclemaintenanceCreateNestedOneWithoutPartsInput
}

export type partsUncheckedCreateInput = {
  part_id?: number
  maintenance_id?: number | null
  part_name?: string | null
  part_number?: string | null
  part_type?: string | null
  brand?: string | null
  quantity?: number | null
  unit_cost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: string | null
  purchase_date?: Date | string | null
  under_warranty: boolean
  warranty_expiration?: Date | string | null
  created_by: string
  created_date?: Date | string | null
  updated_date?: Date | string | null
  notes?: string | null
}

export type partsUpdateInput = {
  part_name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  part_number?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  part_type?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  brand?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  quantity?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  unit_cost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  purchase_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  under_warranty?: Prisma.BoolFieldUpdateOperationsInput | boolean
  warranty_expiration?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_by?: Prisma.StringFieldUpdateOperationsInput | string
  created_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  vehiclemaintenance?: Prisma.vehiclemaintenanceUpdateOneWithoutPartsNestedInput
}

export type partsUncheckedUpdateInput = {
  part_id?: Prisma.IntFieldUpdateOperationsInput | number
  maintenance_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  part_name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  part_number?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  part_type?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  brand?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  quantity?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  unit_cost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  purchase_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  under_warranty?: Prisma.BoolFieldUpdateOperationsInput | boolean
  warranty_expiration?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_by?: Prisma.StringFieldUpdateOperationsInput | string
  created_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type partsCreateManyInput = {
  part_id?: number
  maintenance_id?: number | null
  part_name?: string | null
  part_number?: string | null
  part_type?: string | null
  brand?: string | null
  quantity?: number | null
  unit_cost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: string | null
  purchase_date?: Date | string | null
  under_warranty: boolean
  warranty_expiration?: Date | string | null
  created_by: string
  created_date?: Date | string | null
  updated_date?: Date | string | null
  notes?: string | null
}

export type partsUpdateManyMutationInput = {
  part_name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  part_number?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  part_type?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  brand?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  quantity?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  unit_cost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  purchase_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  under_warranty?: Prisma.BoolFieldUpdateOperationsInput | boolean
  warranty_expiration?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_by?: Prisma.StringFieldUpdateOperationsInput | string
  created_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type partsUncheckedUpdateManyInput = {
  part_id?: Prisma.IntFieldUpdateOperationsInput | number
  maintenance_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  part_name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  part_number?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  part_type?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  brand?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  quantity?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  unit_cost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  purchase_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  under_warranty?: Prisma.BoolFieldUpdateOperationsInput | boolean
  warranty_expiration?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_by?: Prisma.StringFieldUpdateOperationsInput | string
  created_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type partsCountOrderByAggregateInput = {
  part_id?: Prisma.SortOrder
  maintenance_id?: Prisma.SortOrder
  part_name?: Prisma.SortOrder
  part_number?: Prisma.SortOrder
  part_type?: Prisma.SortOrder
  brand?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  unit_cost?: Prisma.SortOrder
  total_cost?: Prisma.SortOrder
  supplier_name?: Prisma.SortOrder
  purchase_date?: Prisma.SortOrder
  under_warranty?: Prisma.SortOrder
  warranty_expiration?: Prisma.SortOrder
  created_by?: Prisma.SortOrder
  created_date?: Prisma.SortOrder
  updated_date?: Prisma.SortOrder
  notes?: Prisma.SortOrder
}

export type partsAvgOrderByAggregateInput = {
  part_id?: Prisma.SortOrder
  maintenance_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  unit_cost?: Prisma.SortOrder
  total_cost?: Prisma.SortOrder
}

export type partsMaxOrderByAggregateInput = {
  part_id?: Prisma.SortOrder
  maintenance_id?: Prisma.SortOrder
  part_name?: Prisma.SortOrder
  part_number?: Prisma.SortOrder
  part_type?: Prisma.SortOrder
  brand?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  unit_cost?: Prisma.SortOrder
  total_cost?: Prisma.SortOrder
  supplier_name?: Prisma.SortOrder
  purchase_date?: Prisma.SortOrder
  under_warranty?: Prisma.SortOrder
  warranty_expiration?: Prisma.SortOrder
  created_by?: Prisma.SortOrder
  created_date?: Prisma.SortOrder
  updated_date?: Prisma.SortOrder
  notes?: Prisma.SortOrder
}

export type partsMinOrderByAggregateInput = {
  part_id?: Prisma.SortOrder
  maintenance_id?: Prisma.SortOrder
  part_name?: Prisma.SortOrder
  part_number?: Prisma.SortOrder
  part_type?: Prisma.SortOrder
  brand?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  unit_cost?: Prisma.SortOrder
  total_cost?: Prisma.SortOrder
  supplier_name?: Prisma.SortOrder
  purchase_date?: Prisma.SortOrder
  under_warranty?: Prisma.SortOrder
  warranty_expiration?: Prisma.SortOrder
  created_by?: Prisma.SortOrder
  created_date?: Prisma.SortOrder
  updated_date?: Prisma.SortOrder
  notes?: Prisma.SortOrder
}

export type partsSumOrderByAggregateInput = {
  part_id?: Prisma.SortOrder
  maintenance_id?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  unit_cost?: Prisma.SortOrder
  total_cost?: Prisma.SortOrder
}

export type PartsListRelationFilter = {
  every?: Prisma.partsWhereInput
  some?: Prisma.partsWhereInput
  none?: Prisma.partsWhereInput
}

export type partsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type NullableDecimalFieldUpdateOperationsInput = {
  set?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  increment?: runtime.Decimal | runtime.DecimalJsLike | number | string
  decrement?: runtime.Decimal | runtime.DecimalJsLike | number | string
  multiply?: runtime.Decimal | runtime.DecimalJsLike | number | string
  divide?: runtime.Decimal | runtime.DecimalJsLike | number | string
}

export type BoolFieldUpdateOperationsInput = {
  set?: boolean
}

export type partsCreateNestedManyWithoutVehiclemaintenanceInput = {
  create?: Prisma.XOR<Prisma.partsCreateWithoutVehiclemaintenanceInput, Prisma.partsUncheckedCreateWithoutVehiclemaintenanceInput> | Prisma.partsCreateWithoutVehiclemaintenanceInput[] | Prisma.partsUncheckedCreateWithoutVehiclemaintenanceInput[]
  connectOrCreate?: Prisma.partsCreateOrConnectWithoutVehiclemaintenanceInput | Prisma.partsCreateOrConnectWithoutVehiclemaintenanceInput[]
  createMany?: Prisma.partsCreateManyVehiclemaintenanceInputEnvelope
  connect?: Prisma.partsWhereUniqueInput | Prisma.partsWhereUniqueInput[]
}

export type partsUncheckedCreateNestedManyWithoutVehiclemaintenanceInput = {
  create?: Prisma.XOR<Prisma.partsCreateWithoutVehiclemaintenanceInput, Prisma.partsUncheckedCreateWithoutVehiclemaintenanceInput> | Prisma.partsCreateWithoutVehiclemaintenanceInput[] | Prisma.partsUncheckedCreateWithoutVehiclemaintenanceInput[]
  connectOrCreate?: Prisma.partsCreateOrConnectWithoutVehiclemaintenanceInput | Prisma.partsCreateOrConnectWithoutVehiclemaintenanceInput[]
  createMany?: Prisma.partsCreateManyVehiclemaintenanceInputEnvelope
  connect?: Prisma.partsWhereUniqueInput | Prisma.partsWhereUniqueInput[]
}

export type partsUpdateManyWithoutVehiclemaintenanceNestedInput = {
  create?: Prisma.XOR<Prisma.partsCreateWithoutVehiclemaintenanceInput, Prisma.partsUncheckedCreateWithoutVehiclemaintenanceInput> | Prisma.partsCreateWithoutVehiclemaintenanceInput[] | Prisma.partsUncheckedCreateWithoutVehiclemaintenanceInput[]
  connectOrCreate?: Prisma.partsCreateOrConnectWithoutVehiclemaintenanceInput | Prisma.partsCreateOrConnectWithoutVehiclemaintenanceInput[]
  upsert?: Prisma.partsUpsertWithWhereUniqueWithoutVehiclemaintenanceInput | Prisma.partsUpsertWithWhereUniqueWithoutVehiclemaintenanceInput[]
  createMany?: Prisma.partsCreateManyVehiclemaintenanceInputEnvelope
  set?: Prisma.partsWhereUniqueInput | Prisma.partsWhereUniqueInput[]
  disconnect?: Prisma.partsWhereUniqueInput | Prisma.partsWhereUniqueInput[]
  delete?: Prisma.partsWhereUniqueInput | Prisma.partsWhereUniqueInput[]
  connect?: Prisma.partsWhereUniqueInput | Prisma.partsWhereUniqueInput[]
  update?: Prisma.partsUpdateWithWhereUniqueWithoutVehiclemaintenanceInput | Prisma.partsUpdateWithWhereUniqueWithoutVehiclemaintenanceInput[]
  updateMany?: Prisma.partsUpdateManyWithWhereWithoutVehiclemaintenanceInput | Prisma.partsUpdateManyWithWhereWithoutVehiclemaintenanceInput[]
  deleteMany?: Prisma.partsScalarWhereInput | Prisma.partsScalarWhereInput[]
}

export type partsUncheckedUpdateManyWithoutVehiclemaintenanceNestedInput = {
  create?: Prisma.XOR<Prisma.partsCreateWithoutVehiclemaintenanceInput, Prisma.partsUncheckedCreateWithoutVehiclemaintenanceInput> | Prisma.partsCreateWithoutVehiclemaintenanceInput[] | Prisma.partsUncheckedCreateWithoutVehiclemaintenanceInput[]
  connectOrCreate?: Prisma.partsCreateOrConnectWithoutVehiclemaintenanceInput | Prisma.partsCreateOrConnectWithoutVehiclemaintenanceInput[]
  upsert?: Prisma.partsUpsertWithWhereUniqueWithoutVehiclemaintenanceInput | Prisma.partsUpsertWithWhereUniqueWithoutVehiclemaintenanceInput[]
  createMany?: Prisma.partsCreateManyVehiclemaintenanceInputEnvelope
  set?: Prisma.partsWhereUniqueInput | Prisma.partsWhereUniqueInput[]
  disconnect?: Prisma.partsWhereUniqueInput | Prisma.partsWhereUniqueInput[]
  delete?: Prisma.partsWhereUniqueInput | Prisma.partsWhereUniqueInput[]
  connect?: Prisma.partsWhereUniqueInput | Prisma.partsWhereUniqueInput[]
  update?: Prisma.partsUpdateWithWhereUniqueWithoutVehiclemaintenanceInput | Prisma.partsUpdateWithWhereUniqueWithoutVehiclemaintenanceInput[]
  updateMany?: Prisma.partsUpdateManyWithWhereWithoutVehiclemaintenanceInput | Prisma.partsUpdateManyWithWhereWithoutVehiclemaintenanceInput[]
  deleteMany?: Prisma.partsScalarWhereInput | Prisma.partsScalarWhereInput[]
}

export type partsCreateWithoutVehiclemaintenanceInput = {
  part_name?: string | null
  part_number?: string | null
  part_type?: string | null
  brand?: string | null
  quantity?: number | null
  unit_cost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: string | null
  purchase_date?: Date | string | null
  under_warranty: boolean
  warranty_expiration?: Date | string | null
  created_by: string
  created_date?: Date | string | null
  updated_date?: Date | string | null
  notes?: string | null
}

export type partsUncheckedCreateWithoutVehiclemaintenanceInput = {
  part_id?: number
  part_name?: string | null
  part_number?: string | null
  part_type?: string | null
  brand?: string | null
  quantity?: number | null
  unit_cost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: string | null
  purchase_date?: Date | string | null
  under_warranty: boolean
  warranty_expiration?: Date | string | null
  created_by: string
  created_date?: Date | string | null
  updated_date?: Date | string | null
  notes?: string | null
}

export type partsCreateOrConnectWithoutVehiclemaintenanceInput = {
  where: Prisma.partsWhereUniqueInput
  create: Prisma.XOR<Prisma.partsCreateWithoutVehiclemaintenanceInput, Prisma.partsUncheckedCreateWithoutVehiclemaintenanceInput>
}

export type partsCreateManyVehiclemaintenanceInputEnvelope = {
  data: Prisma.partsCreateManyVehiclemaintenanceInput | Prisma.partsCreateManyVehiclemaintenanceInput[]
  skipDuplicates?: boolean
}

export type partsUpsertWithWhereUniqueWithoutVehiclemaintenanceInput = {
  where: Prisma.partsWhereUniqueInput
  update: Prisma.XOR<Prisma.partsUpdateWithoutVehiclemaintenanceInput, Prisma.partsUncheckedUpdateWithoutVehiclemaintenanceInput>
  create: Prisma.XOR<Prisma.partsCreateWithoutVehiclemaintenanceInput, Prisma.partsUncheckedCreateWithoutVehiclemaintenanceInput>
}

export type partsUpdateWithWhereUniqueWithoutVehiclemaintenanceInput = {
  where: Prisma.partsWhereUniqueInput
  data: Prisma.XOR<Prisma.partsUpdateWithoutVehiclemaintenanceInput, Prisma.partsUncheckedUpdateWithoutVehiclemaintenanceInput>
}

export type partsUpdateManyWithWhereWithoutVehiclemaintenanceInput = {
  where: Prisma.partsScalarWhereInput
  data: Prisma.XOR<Prisma.partsUpdateManyMutationInput, Prisma.partsUncheckedUpdateManyWithoutVehiclemaintenanceInput>
}

export type partsScalarWhereInput = {
  AND?: Prisma.partsScalarWhereInput | Prisma.partsScalarWhereInput[]
  OR?: Prisma.partsScalarWhereInput[]
  NOT?: Prisma.partsScalarWhereInput | Prisma.partsScalarWhereInput[]
  part_id?: Prisma.IntFilter<"parts"> | number
  maintenance_id?: Prisma.IntNullableFilter<"parts"> | number | null
  part_name?: Prisma.StringNullableFilter<"parts"> | string | null
  part_number?: Prisma.StringNullableFilter<"parts"> | string | null
  part_type?: Prisma.StringNullableFilter<"parts"> | string | null
  brand?: Prisma.StringNullableFilter<"parts"> | string | null
  quantity?: Prisma.IntNullableFilter<"parts"> | number | null
  unit_cost?: Prisma.DecimalNullableFilter<"parts"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: Prisma.DecimalNullableFilter<"parts"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: Prisma.StringNullableFilter<"parts"> | string | null
  purchase_date?: Prisma.DateTimeNullableFilter<"parts"> | Date | string | null
  under_warranty?: Prisma.BoolFilter<"parts"> | boolean
  warranty_expiration?: Prisma.DateTimeNullableFilter<"parts"> | Date | string | null
  created_by?: Prisma.StringFilter<"parts"> | string
  created_date?: Prisma.DateTimeNullableFilter<"parts"> | Date | string | null
  updated_date?: Prisma.DateTimeNullableFilter<"parts"> | Date | string | null
  notes?: Prisma.StringNullableFilter<"parts"> | string | null
}

export type partsCreateManyVehiclemaintenanceInput = {
  part_id?: number
  part_name?: string | null
  part_number?: string | null
  part_type?: string | null
  brand?: string | null
  quantity?: number | null
  unit_cost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: string | null
  purchase_date?: Date | string | null
  under_warranty: boolean
  warranty_expiration?: Date | string | null
  created_by: string
  created_date?: Date | string | null
  updated_date?: Date | string | null
  notes?: string | null
}

export type partsUpdateWithoutVehiclemaintenanceInput = {
  part_name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  part_number?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  part_type?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  brand?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  quantity?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  unit_cost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  purchase_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  under_warranty?: Prisma.BoolFieldUpdateOperationsInput | boolean
  warranty_expiration?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_by?: Prisma.StringFieldUpdateOperationsInput | string
  created_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type partsUncheckedUpdateWithoutVehiclemaintenanceInput = {
  part_id?: Prisma.IntFieldUpdateOperationsInput | number
  part_name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  part_number?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  part_type?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  brand?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  quantity?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  unit_cost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  purchase_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  under_warranty?: Prisma.BoolFieldUpdateOperationsInput | boolean
  warranty_expiration?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_by?: Prisma.StringFieldUpdateOperationsInput | string
  created_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type partsUncheckedUpdateManyWithoutVehiclemaintenanceInput = {
  part_id?: Prisma.IntFieldUpdateOperationsInput | number
  part_name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  part_number?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  part_type?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  brand?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  quantity?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  unit_cost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  total_cost?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  supplier_name?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  purchase_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  under_warranty?: Prisma.BoolFieldUpdateOperationsInput | boolean
  warranty_expiration?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_by?: Prisma.StringFieldUpdateOperationsInput | string
  created_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}



export type partsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  part_id?: boolean
  maintenance_id?: boolean
  part_name?: boolean
  part_number?: boolean
  part_type?: boolean
  brand?: boolean
  quantity?: boolean
  unit_cost?: boolean
  total_cost?: boolean
  supplier_name?: boolean
  purchase_date?: boolean
  under_warranty?: boolean
  warranty_expiration?: boolean
  created_by?: boolean
  created_date?: boolean
  updated_date?: boolean
  notes?: boolean
  vehiclemaintenance?: boolean | Prisma.parts$vehiclemaintenanceArgs<ExtArgs>
}, ExtArgs["result"]["parts"]>

export type partsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  part_id?: boolean
  maintenance_id?: boolean
  part_name?: boolean
  part_number?: boolean
  part_type?: boolean
  brand?: boolean
  quantity?: boolean
  unit_cost?: boolean
  total_cost?: boolean
  supplier_name?: boolean
  purchase_date?: boolean
  under_warranty?: boolean
  warranty_expiration?: boolean
  created_by?: boolean
  created_date?: boolean
  updated_date?: boolean
  notes?: boolean
  vehiclemaintenance?: boolean | Prisma.parts$vehiclemaintenanceArgs<ExtArgs>
}, ExtArgs["result"]["parts"]>

export type partsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  part_id?: boolean
  maintenance_id?: boolean
  part_name?: boolean
  part_number?: boolean
  part_type?: boolean
  brand?: boolean
  quantity?: boolean
  unit_cost?: boolean
  total_cost?: boolean
  supplier_name?: boolean
  purchase_date?: boolean
  under_warranty?: boolean
  warranty_expiration?: boolean
  created_by?: boolean
  created_date?: boolean
  updated_date?: boolean
  notes?: boolean
  vehiclemaintenance?: boolean | Prisma.parts$vehiclemaintenanceArgs<ExtArgs>
}, ExtArgs["result"]["parts"]>

export type partsSelectScalar = {
  part_id?: boolean
  maintenance_id?: boolean
  part_name?: boolean
  part_number?: boolean
  part_type?: boolean
  brand?: boolean
  quantity?: boolean
  unit_cost?: boolean
  total_cost?: boolean
  supplier_name?: boolean
  purchase_date?: boolean
  under_warranty?: boolean
  warranty_expiration?: boolean
  created_by?: boolean
  created_date?: boolean
  updated_date?: boolean
  notes?: boolean
}

export type partsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"part_id" | "maintenance_id" | "part_name" | "part_number" | "part_type" | "brand" | "quantity" | "unit_cost" | "total_cost" | "supplier_name" | "purchase_date" | "under_warranty" | "warranty_expiration" | "created_by" | "created_date" | "updated_date" | "notes", ExtArgs["result"]["parts"]>
export type partsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  vehiclemaintenance?: boolean | Prisma.parts$vehiclemaintenanceArgs<ExtArgs>
}
export type partsIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  vehiclemaintenance?: boolean | Prisma.parts$vehiclemaintenanceArgs<ExtArgs>
}
export type partsIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  vehiclemaintenance?: boolean | Prisma.parts$vehiclemaintenanceArgs<ExtArgs>
}

export type $partsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "parts"
  objects: {
    vehiclemaintenance: Prisma.$vehiclemaintenancePayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    part_id: number
    maintenance_id: number | null
    part_name: string | null
    part_number: string | null
    part_type: string | null
    brand: string | null
    quantity: number | null
    unit_cost: runtime.Decimal | null
    total_cost: runtime.Decimal | null
    supplier_name: string | null
    purchase_date: Date | null
    under_warranty: boolean
    warranty_expiration: Date | null
    created_by: string
    created_date: Date | null
    updated_date: Date | null
    notes: string | null
  }, ExtArgs["result"]["parts"]>
  composites: {}
}

export type partsGetPayload<S extends boolean | null | undefined | partsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$partsPayload, S>

export type partsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<partsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: PartsCountAggregateInputType | true
  }

export interface partsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['parts'], meta: { name: 'parts' } }
  /**
   * Find zero or one Parts that matches the filter.
   * @param {partsFindUniqueArgs} args - Arguments to find a Parts
   * @example
   * // Get one Parts
   * const parts = await prisma.parts.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends partsFindUniqueArgs>(args: Prisma.SelectSubset<T, partsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__partsClient<runtime.Types.Result.GetResult<Prisma.$partsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Parts that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {partsFindUniqueOrThrowArgs} args - Arguments to find a Parts
   * @example
   * // Get one Parts
   * const parts = await prisma.parts.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends partsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, partsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__partsClient<runtime.Types.Result.GetResult<Prisma.$partsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Parts that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {partsFindFirstArgs} args - Arguments to find a Parts
   * @example
   * // Get one Parts
   * const parts = await prisma.parts.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends partsFindFirstArgs>(args?: Prisma.SelectSubset<T, partsFindFirstArgs<ExtArgs>>): Prisma.Prisma__partsClient<runtime.Types.Result.GetResult<Prisma.$partsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Parts that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {partsFindFirstOrThrowArgs} args - Arguments to find a Parts
   * @example
   * // Get one Parts
   * const parts = await prisma.parts.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends partsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, partsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__partsClient<runtime.Types.Result.GetResult<Prisma.$partsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Parts that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {partsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Parts
   * const parts = await prisma.parts.findMany()
   * 
   * // Get first 10 Parts
   * const parts = await prisma.parts.findMany({ take: 10 })
   * 
   * // Only select the `part_id`
   * const partsWithPart_idOnly = await prisma.parts.findMany({ select: { part_id: true } })
   * 
   */
  findMany<T extends partsFindManyArgs>(args?: Prisma.SelectSubset<T, partsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$partsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Parts.
   * @param {partsCreateArgs} args - Arguments to create a Parts.
   * @example
   * // Create one Parts
   * const Parts = await prisma.parts.create({
   *   data: {
   *     // ... data to create a Parts
   *   }
   * })
   * 
   */
  create<T extends partsCreateArgs>(args: Prisma.SelectSubset<T, partsCreateArgs<ExtArgs>>): Prisma.Prisma__partsClient<runtime.Types.Result.GetResult<Prisma.$partsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Parts.
   * @param {partsCreateManyArgs} args - Arguments to create many Parts.
   * @example
   * // Create many Parts
   * const parts = await prisma.parts.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends partsCreateManyArgs>(args?: Prisma.SelectSubset<T, partsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Parts and returns the data saved in the database.
   * @param {partsCreateManyAndReturnArgs} args - Arguments to create many Parts.
   * @example
   * // Create many Parts
   * const parts = await prisma.parts.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Parts and only return the `part_id`
   * const partsWithPart_idOnly = await prisma.parts.createManyAndReturn({
   *   select: { part_id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends partsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, partsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$partsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Parts.
   * @param {partsDeleteArgs} args - Arguments to delete one Parts.
   * @example
   * // Delete one Parts
   * const Parts = await prisma.parts.delete({
   *   where: {
   *     // ... filter to delete one Parts
   *   }
   * })
   * 
   */
  delete<T extends partsDeleteArgs>(args: Prisma.SelectSubset<T, partsDeleteArgs<ExtArgs>>): Prisma.Prisma__partsClient<runtime.Types.Result.GetResult<Prisma.$partsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Parts.
   * @param {partsUpdateArgs} args - Arguments to update one Parts.
   * @example
   * // Update one Parts
   * const parts = await prisma.parts.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends partsUpdateArgs>(args: Prisma.SelectSubset<T, partsUpdateArgs<ExtArgs>>): Prisma.Prisma__partsClient<runtime.Types.Result.GetResult<Prisma.$partsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Parts.
   * @param {partsDeleteManyArgs} args - Arguments to filter Parts to delete.
   * @example
   * // Delete a few Parts
   * const { count } = await prisma.parts.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends partsDeleteManyArgs>(args?: Prisma.SelectSubset<T, partsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Parts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {partsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Parts
   * const parts = await prisma.parts.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends partsUpdateManyArgs>(args: Prisma.SelectSubset<T, partsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Parts and returns the data updated in the database.
   * @param {partsUpdateManyAndReturnArgs} args - Arguments to update many Parts.
   * @example
   * // Update many Parts
   * const parts = await prisma.parts.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Parts and only return the `part_id`
   * const partsWithPart_idOnly = await prisma.parts.updateManyAndReturn({
   *   select: { part_id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends partsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, partsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$partsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Parts.
   * @param {partsUpsertArgs} args - Arguments to update or create a Parts.
   * @example
   * // Update or create a Parts
   * const parts = await prisma.parts.upsert({
   *   create: {
   *     // ... data to create a Parts
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Parts we want to update
   *   }
   * })
   */
  upsert<T extends partsUpsertArgs>(args: Prisma.SelectSubset<T, partsUpsertArgs<ExtArgs>>): Prisma.Prisma__partsClient<runtime.Types.Result.GetResult<Prisma.$partsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Parts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {partsCountArgs} args - Arguments to filter Parts to count.
   * @example
   * // Count the number of Parts
   * const count = await prisma.parts.count({
   *   where: {
   *     // ... the filter for the Parts we want to count
   *   }
   * })
  **/
  count<T extends partsCountArgs>(
    args?: Prisma.Subset<T, partsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], PartsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Parts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PartsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends PartsAggregateArgs>(args: Prisma.Subset<T, PartsAggregateArgs>): Prisma.PrismaPromise<GetPartsAggregateType<T>>

  /**
   * Group by Parts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {partsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends partsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: partsGroupByArgs['orderBy'] }
      : { orderBy?: partsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, partsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPartsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the parts model
 */
readonly fields: partsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for parts.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__partsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  vehiclemaintenance<T extends Prisma.parts$vehiclemaintenanceArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.parts$vehiclemaintenanceArgs<ExtArgs>>): Prisma.Prisma__vehiclemaintenanceClient<runtime.Types.Result.GetResult<Prisma.$vehiclemaintenancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the parts model
 */
export interface partsFieldRefs {
  readonly part_id: Prisma.FieldRef<"parts", 'Int'>
  readonly maintenance_id: Prisma.FieldRef<"parts", 'Int'>
  readonly part_name: Prisma.FieldRef<"parts", 'String'>
  readonly part_number: Prisma.FieldRef<"parts", 'String'>
  readonly part_type: Prisma.FieldRef<"parts", 'String'>
  readonly brand: Prisma.FieldRef<"parts", 'String'>
  readonly quantity: Prisma.FieldRef<"parts", 'Int'>
  readonly unit_cost: Prisma.FieldRef<"parts", 'Decimal'>
  readonly total_cost: Prisma.FieldRef<"parts", 'Decimal'>
  readonly supplier_name: Prisma.FieldRef<"parts", 'String'>
  readonly purchase_date: Prisma.FieldRef<"parts", 'DateTime'>
  readonly under_warranty: Prisma.FieldRef<"parts", 'Boolean'>
  readonly warranty_expiration: Prisma.FieldRef<"parts", 'DateTime'>
  readonly created_by: Prisma.FieldRef<"parts", 'String'>
  readonly created_date: Prisma.FieldRef<"parts", 'DateTime'>
  readonly updated_date: Prisma.FieldRef<"parts", 'DateTime'>
  readonly notes: Prisma.FieldRef<"parts", 'String'>
}
    

// Custom InputTypes
/**
 * parts findUnique
 */
export type partsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the parts
   */
  select?: Prisma.partsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the parts
   */
  omit?: Prisma.partsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.partsInclude<ExtArgs> | null
  /**
   * Filter, which parts to fetch.
   */
  where: Prisma.partsWhereUniqueInput
}

/**
 * parts findUniqueOrThrow
 */
export type partsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the parts
   */
  select?: Prisma.partsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the parts
   */
  omit?: Prisma.partsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.partsInclude<ExtArgs> | null
  /**
   * Filter, which parts to fetch.
   */
  where: Prisma.partsWhereUniqueInput
}

/**
 * parts findFirst
 */
export type partsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the parts
   */
  select?: Prisma.partsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the parts
   */
  omit?: Prisma.partsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.partsInclude<ExtArgs> | null
  /**
   * Filter, which parts to fetch.
   */
  where?: Prisma.partsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of parts to fetch.
   */
  orderBy?: Prisma.partsOrderByWithRelationInput | Prisma.partsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for parts.
   */
  cursor?: Prisma.partsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` parts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` parts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of parts.
   */
  distinct?: Prisma.PartsScalarFieldEnum | Prisma.PartsScalarFieldEnum[]
}

/**
 * parts findFirstOrThrow
 */
export type partsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the parts
   */
  select?: Prisma.partsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the parts
   */
  omit?: Prisma.partsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.partsInclude<ExtArgs> | null
  /**
   * Filter, which parts to fetch.
   */
  where?: Prisma.partsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of parts to fetch.
   */
  orderBy?: Prisma.partsOrderByWithRelationInput | Prisma.partsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for parts.
   */
  cursor?: Prisma.partsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` parts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` parts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of parts.
   */
  distinct?: Prisma.PartsScalarFieldEnum | Prisma.PartsScalarFieldEnum[]
}

/**
 * parts findMany
 */
export type partsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the parts
   */
  select?: Prisma.partsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the parts
   */
  omit?: Prisma.partsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.partsInclude<ExtArgs> | null
  /**
   * Filter, which parts to fetch.
   */
  where?: Prisma.partsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of parts to fetch.
   */
  orderBy?: Prisma.partsOrderByWithRelationInput | Prisma.partsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing parts.
   */
  cursor?: Prisma.partsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` parts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` parts.
   */
  skip?: number
  distinct?: Prisma.PartsScalarFieldEnum | Prisma.PartsScalarFieldEnum[]
}

/**
 * parts create
 */
export type partsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the parts
   */
  select?: Prisma.partsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the parts
   */
  omit?: Prisma.partsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.partsInclude<ExtArgs> | null
  /**
   * The data needed to create a parts.
   */
  data: Prisma.XOR<Prisma.partsCreateInput, Prisma.partsUncheckedCreateInput>
}

/**
 * parts createMany
 */
export type partsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many parts.
   */
  data: Prisma.partsCreateManyInput | Prisma.partsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * parts createManyAndReturn
 */
export type partsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the parts
   */
  select?: Prisma.partsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the parts
   */
  omit?: Prisma.partsOmit<ExtArgs> | null
  /**
   * The data used to create many parts.
   */
  data: Prisma.partsCreateManyInput | Prisma.partsCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.partsIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * parts update
 */
export type partsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the parts
   */
  select?: Prisma.partsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the parts
   */
  omit?: Prisma.partsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.partsInclude<ExtArgs> | null
  /**
   * The data needed to update a parts.
   */
  data: Prisma.XOR<Prisma.partsUpdateInput, Prisma.partsUncheckedUpdateInput>
  /**
   * Choose, which parts to update.
   */
  where: Prisma.partsWhereUniqueInput
}

/**
 * parts updateMany
 */
export type partsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update parts.
   */
  data: Prisma.XOR<Prisma.partsUpdateManyMutationInput, Prisma.partsUncheckedUpdateManyInput>
  /**
   * Filter which parts to update
   */
  where?: Prisma.partsWhereInput
  /**
   * Limit how many parts to update.
   */
  limit?: number
}

/**
 * parts updateManyAndReturn
 */
export type partsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the parts
   */
  select?: Prisma.partsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the parts
   */
  omit?: Prisma.partsOmit<ExtArgs> | null
  /**
   * The data used to update parts.
   */
  data: Prisma.XOR<Prisma.partsUpdateManyMutationInput, Prisma.partsUncheckedUpdateManyInput>
  /**
   * Filter which parts to update
   */
  where?: Prisma.partsWhereInput
  /**
   * Limit how many parts to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.partsIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * parts upsert
 */
export type partsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the parts
   */
  select?: Prisma.partsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the parts
   */
  omit?: Prisma.partsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.partsInclude<ExtArgs> | null
  /**
   * The filter to search for the parts to update in case it exists.
   */
  where: Prisma.partsWhereUniqueInput
  /**
   * In case the parts found by the `where` argument doesn't exist, create a new parts with this data.
   */
  create: Prisma.XOR<Prisma.partsCreateInput, Prisma.partsUncheckedCreateInput>
  /**
   * In case the parts was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.partsUpdateInput, Prisma.partsUncheckedUpdateInput>
}

/**
 * parts delete
 */
export type partsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the parts
   */
  select?: Prisma.partsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the parts
   */
  omit?: Prisma.partsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.partsInclude<ExtArgs> | null
  /**
   * Filter which parts to delete.
   */
  where: Prisma.partsWhereUniqueInput
}

/**
 * parts deleteMany
 */
export type partsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which parts to delete
   */
  where?: Prisma.partsWhereInput
  /**
   * Limit how many parts to delete.
   */
  limit?: number
}

/**
 * parts.vehiclemaintenance
 */
export type parts$vehiclemaintenanceArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the vehiclemaintenance
   */
  select?: Prisma.vehiclemaintenanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the vehiclemaintenance
   */
  omit?: Prisma.vehiclemaintenanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.vehiclemaintenanceInclude<ExtArgs> | null
  where?: Prisma.vehiclemaintenanceWhereInput
}

/**
 * parts without action
 */
export type partsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the parts
   */
  select?: Prisma.partsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the parts
   */
  omit?: Prisma.partsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.partsInclude<ExtArgs> | null
}
