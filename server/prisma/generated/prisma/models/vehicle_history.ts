
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `vehicle_history` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model vehicle_history
 * 
 */
export type vehicle_historyModel = runtime.Types.Result.DefaultSelection<Prisma.$vehicle_historyPayload>

export type AggregateVehicle_history = {
  _count: Vehicle_historyCountAggregateOutputType | null
  _avg: Vehicle_historyAvgAggregateOutputType | null
  _sum: Vehicle_historySumAggregateOutputType | null
  _min: Vehicle_historyMinAggregateOutputType | null
  _max: Vehicle_historyMaxAggregateOutputType | null
}

export type Vehicle_historyAvgAggregateOutputType = {
  history_id: number | null
  vehicle_id: number | null
  user_id: number | null
}

export type Vehicle_historySumAggregateOutputType = {
  history_id: number | null
  vehicle_id: number | null
  user_id: number | null
}

export type Vehicle_historyMinAggregateOutputType = {
  history_id: number | null
  vehicle_id: number | null
  user_id: number | null
  registered: boolean | null
  registered_start: Date | null
  registered_end: Date | null
}

export type Vehicle_historyMaxAggregateOutputType = {
  history_id: number | null
  vehicle_id: number | null
  user_id: number | null
  registered: boolean | null
  registered_start: Date | null
  registered_end: Date | null
}

export type Vehicle_historyCountAggregateOutputType = {
  history_id: number
  vehicle_id: number
  user_id: number
  registered: number
  registered_start: number
  registered_end: number
  _all: number
}


export type Vehicle_historyAvgAggregateInputType = {
  history_id?: true
  vehicle_id?: true
  user_id?: true
}

export type Vehicle_historySumAggregateInputType = {
  history_id?: true
  vehicle_id?: true
  user_id?: true
}

export type Vehicle_historyMinAggregateInputType = {
  history_id?: true
  vehicle_id?: true
  user_id?: true
  registered?: true
  registered_start?: true
  registered_end?: true
}

export type Vehicle_historyMaxAggregateInputType = {
  history_id?: true
  vehicle_id?: true
  user_id?: true
  registered?: true
  registered_start?: true
  registered_end?: true
}

export type Vehicle_historyCountAggregateInputType = {
  history_id?: true
  vehicle_id?: true
  user_id?: true
  registered?: true
  registered_start?: true
  registered_end?: true
  _all?: true
}

export type Vehicle_historyAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which vehicle_history to aggregate.
   */
  where?: Prisma.vehicle_historyWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of vehicle_histories to fetch.
   */
  orderBy?: Prisma.vehicle_historyOrderByWithRelationInput | Prisma.vehicle_historyOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.vehicle_historyWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` vehicle_histories from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` vehicle_histories.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned vehicle_histories
  **/
  _count?: true | Vehicle_historyCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Vehicle_historyAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Vehicle_historySumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Vehicle_historyMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Vehicle_historyMaxAggregateInputType
}

export type GetVehicle_historyAggregateType<T extends Vehicle_historyAggregateArgs> = {
      [P in keyof T & keyof AggregateVehicle_history]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateVehicle_history[P]>
    : Prisma.GetScalarType<T[P], AggregateVehicle_history[P]>
}




export type vehicle_historyGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.vehicle_historyWhereInput
  orderBy?: Prisma.vehicle_historyOrderByWithAggregationInput | Prisma.vehicle_historyOrderByWithAggregationInput[]
  by: Prisma.Vehicle_historyScalarFieldEnum[] | Prisma.Vehicle_historyScalarFieldEnum
  having?: Prisma.vehicle_historyScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Vehicle_historyCountAggregateInputType | true
  _avg?: Vehicle_historyAvgAggregateInputType
  _sum?: Vehicle_historySumAggregateInputType
  _min?: Vehicle_historyMinAggregateInputType
  _max?: Vehicle_historyMaxAggregateInputType
}

export type Vehicle_historyGroupByOutputType = {
  history_id: number
  vehicle_id: number
  user_id: number
  registered: boolean | null
  registered_start: Date | null
  registered_end: Date | null
  _count: Vehicle_historyCountAggregateOutputType | null
  _avg: Vehicle_historyAvgAggregateOutputType | null
  _sum: Vehicle_historySumAggregateOutputType | null
  _min: Vehicle_historyMinAggregateOutputType | null
  _max: Vehicle_historyMaxAggregateOutputType | null
}

type GetVehicle_historyGroupByPayload<T extends vehicle_historyGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Vehicle_historyGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Vehicle_historyGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Vehicle_historyGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Vehicle_historyGroupByOutputType[P]>
      }
    >
  >



export type vehicle_historyWhereInput = {
  AND?: Prisma.vehicle_historyWhereInput | Prisma.vehicle_historyWhereInput[]
  OR?: Prisma.vehicle_historyWhereInput[]
  NOT?: Prisma.vehicle_historyWhereInput | Prisma.vehicle_historyWhereInput[]
  history_id?: Prisma.IntFilter<"vehicle_history"> | number
  vehicle_id?: Prisma.IntFilter<"vehicle_history"> | number
  user_id?: Prisma.IntFilter<"vehicle_history"> | number
  registered?: Prisma.BoolNullableFilter<"vehicle_history"> | boolean | null
  registered_start?: Prisma.DateTimeNullableFilter<"vehicle_history"> | Date | string | null
  registered_end?: Prisma.DateTimeNullableFilter<"vehicle_history"> | Date | string | null
  users?: Prisma.XOR<Prisma.UsersScalarRelationFilter, Prisma.usersWhereInput>
  auto?: Prisma.XOR<Prisma.AutoScalarRelationFilter, Prisma.autoWhereInput>
}

export type vehicle_historyOrderByWithRelationInput = {
  history_id?: Prisma.SortOrder
  vehicle_id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  registered?: Prisma.SortOrderInput | Prisma.SortOrder
  registered_start?: Prisma.SortOrderInput | Prisma.SortOrder
  registered_end?: Prisma.SortOrderInput | Prisma.SortOrder
  users?: Prisma.usersOrderByWithRelationInput
  auto?: Prisma.autoOrderByWithRelationInput
}

export type vehicle_historyWhereUniqueInput = Prisma.AtLeast<{
  history_id?: number
  AND?: Prisma.vehicle_historyWhereInput | Prisma.vehicle_historyWhereInput[]
  OR?: Prisma.vehicle_historyWhereInput[]
  NOT?: Prisma.vehicle_historyWhereInput | Prisma.vehicle_historyWhereInput[]
  vehicle_id?: Prisma.IntFilter<"vehicle_history"> | number
  user_id?: Prisma.IntFilter<"vehicle_history"> | number
  registered?: Prisma.BoolNullableFilter<"vehicle_history"> | boolean | null
  registered_start?: Prisma.DateTimeNullableFilter<"vehicle_history"> | Date | string | null
  registered_end?: Prisma.DateTimeNullableFilter<"vehicle_history"> | Date | string | null
  users?: Prisma.XOR<Prisma.UsersScalarRelationFilter, Prisma.usersWhereInput>
  auto?: Prisma.XOR<Prisma.AutoScalarRelationFilter, Prisma.autoWhereInput>
}, "history_id">

export type vehicle_historyOrderByWithAggregationInput = {
  history_id?: Prisma.SortOrder
  vehicle_id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  registered?: Prisma.SortOrderInput | Prisma.SortOrder
  registered_start?: Prisma.SortOrderInput | Prisma.SortOrder
  registered_end?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.vehicle_historyCountOrderByAggregateInput
  _avg?: Prisma.vehicle_historyAvgOrderByAggregateInput
  _max?: Prisma.vehicle_historyMaxOrderByAggregateInput
  _min?: Prisma.vehicle_historyMinOrderByAggregateInput
  _sum?: Prisma.vehicle_historySumOrderByAggregateInput
}

export type vehicle_historyScalarWhereWithAggregatesInput = {
  AND?: Prisma.vehicle_historyScalarWhereWithAggregatesInput | Prisma.vehicle_historyScalarWhereWithAggregatesInput[]
  OR?: Prisma.vehicle_historyScalarWhereWithAggregatesInput[]
  NOT?: Prisma.vehicle_historyScalarWhereWithAggregatesInput | Prisma.vehicle_historyScalarWhereWithAggregatesInput[]
  history_id?: Prisma.IntWithAggregatesFilter<"vehicle_history"> | number
  vehicle_id?: Prisma.IntWithAggregatesFilter<"vehicle_history"> | number
  user_id?: Prisma.IntWithAggregatesFilter<"vehicle_history"> | number
  registered?: Prisma.BoolNullableWithAggregatesFilter<"vehicle_history"> | boolean | null
  registered_start?: Prisma.DateTimeNullableWithAggregatesFilter<"vehicle_history"> | Date | string | null
  registered_end?: Prisma.DateTimeNullableWithAggregatesFilter<"vehicle_history"> | Date | string | null
}

export type vehicle_historyCreateInput = {
  registered?: boolean | null
  registered_start?: Date | string | null
  registered_end?: Date | string | null
  users: Prisma.usersCreateNestedOneWithoutVehicle_historyInput
  auto: Prisma.autoCreateNestedOneWithoutVehicle_historyInput
}

export type vehicle_historyUncheckedCreateInput = {
  history_id?: number
  vehicle_id: number
  user_id: number
  registered?: boolean | null
  registered_start?: Date | string | null
  registered_end?: Date | string | null
}

export type vehicle_historyUpdateInput = {
  registered?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  registered_start?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  registered_end?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.usersUpdateOneRequiredWithoutVehicle_historyNestedInput
  auto?: Prisma.autoUpdateOneRequiredWithoutVehicle_historyNestedInput
}

export type vehicle_historyUncheckedUpdateInput = {
  history_id?: Prisma.IntFieldUpdateOperationsInput | number
  vehicle_id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.IntFieldUpdateOperationsInput | number
  registered?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  registered_start?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  registered_end?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type vehicle_historyCreateManyInput = {
  history_id?: number
  vehicle_id: number
  user_id: number
  registered?: boolean | null
  registered_start?: Date | string | null
  registered_end?: Date | string | null
}

export type vehicle_historyUpdateManyMutationInput = {
  registered?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  registered_start?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  registered_end?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type vehicle_historyUncheckedUpdateManyInput = {
  history_id?: Prisma.IntFieldUpdateOperationsInput | number
  vehicle_id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.IntFieldUpdateOperationsInput | number
  registered?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  registered_start?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  registered_end?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type Vehicle_historyListRelationFilter = {
  every?: Prisma.vehicle_historyWhereInput
  some?: Prisma.vehicle_historyWhereInput
  none?: Prisma.vehicle_historyWhereInput
}

export type vehicle_historyOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type vehicle_historyCountOrderByAggregateInput = {
  history_id?: Prisma.SortOrder
  vehicle_id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  registered?: Prisma.SortOrder
  registered_start?: Prisma.SortOrder
  registered_end?: Prisma.SortOrder
}

export type vehicle_historyAvgOrderByAggregateInput = {
  history_id?: Prisma.SortOrder
  vehicle_id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
}

export type vehicle_historyMaxOrderByAggregateInput = {
  history_id?: Prisma.SortOrder
  vehicle_id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  registered?: Prisma.SortOrder
  registered_start?: Prisma.SortOrder
  registered_end?: Prisma.SortOrder
}

export type vehicle_historyMinOrderByAggregateInput = {
  history_id?: Prisma.SortOrder
  vehicle_id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  registered?: Prisma.SortOrder
  registered_start?: Prisma.SortOrder
  registered_end?: Prisma.SortOrder
}

export type vehicle_historySumOrderByAggregateInput = {
  history_id?: Prisma.SortOrder
  vehicle_id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
}

export type vehicle_historyCreateNestedManyWithoutAutoInput = {
  create?: Prisma.XOR<Prisma.vehicle_historyCreateWithoutAutoInput, Prisma.vehicle_historyUncheckedCreateWithoutAutoInput> | Prisma.vehicle_historyCreateWithoutAutoInput[] | Prisma.vehicle_historyUncheckedCreateWithoutAutoInput[]
  connectOrCreate?: Prisma.vehicle_historyCreateOrConnectWithoutAutoInput | Prisma.vehicle_historyCreateOrConnectWithoutAutoInput[]
  createMany?: Prisma.vehicle_historyCreateManyAutoInputEnvelope
  connect?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
}

export type vehicle_historyUncheckedCreateNestedManyWithoutAutoInput = {
  create?: Prisma.XOR<Prisma.vehicle_historyCreateWithoutAutoInput, Prisma.vehicle_historyUncheckedCreateWithoutAutoInput> | Prisma.vehicle_historyCreateWithoutAutoInput[] | Prisma.vehicle_historyUncheckedCreateWithoutAutoInput[]
  connectOrCreate?: Prisma.vehicle_historyCreateOrConnectWithoutAutoInput | Prisma.vehicle_historyCreateOrConnectWithoutAutoInput[]
  createMany?: Prisma.vehicle_historyCreateManyAutoInputEnvelope
  connect?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
}

export type vehicle_historyUpdateManyWithoutAutoNestedInput = {
  create?: Prisma.XOR<Prisma.vehicle_historyCreateWithoutAutoInput, Prisma.vehicle_historyUncheckedCreateWithoutAutoInput> | Prisma.vehicle_historyCreateWithoutAutoInput[] | Prisma.vehicle_historyUncheckedCreateWithoutAutoInput[]
  connectOrCreate?: Prisma.vehicle_historyCreateOrConnectWithoutAutoInput | Prisma.vehicle_historyCreateOrConnectWithoutAutoInput[]
  upsert?: Prisma.vehicle_historyUpsertWithWhereUniqueWithoutAutoInput | Prisma.vehicle_historyUpsertWithWhereUniqueWithoutAutoInput[]
  createMany?: Prisma.vehicle_historyCreateManyAutoInputEnvelope
  set?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
  disconnect?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
  delete?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
  connect?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
  update?: Prisma.vehicle_historyUpdateWithWhereUniqueWithoutAutoInput | Prisma.vehicle_historyUpdateWithWhereUniqueWithoutAutoInput[]
  updateMany?: Prisma.vehicle_historyUpdateManyWithWhereWithoutAutoInput | Prisma.vehicle_historyUpdateManyWithWhereWithoutAutoInput[]
  deleteMany?: Prisma.vehicle_historyScalarWhereInput | Prisma.vehicle_historyScalarWhereInput[]
}

export type vehicle_historyUncheckedUpdateManyWithoutAutoNestedInput = {
  create?: Prisma.XOR<Prisma.vehicle_historyCreateWithoutAutoInput, Prisma.vehicle_historyUncheckedCreateWithoutAutoInput> | Prisma.vehicle_historyCreateWithoutAutoInput[] | Prisma.vehicle_historyUncheckedCreateWithoutAutoInput[]
  connectOrCreate?: Prisma.vehicle_historyCreateOrConnectWithoutAutoInput | Prisma.vehicle_historyCreateOrConnectWithoutAutoInput[]
  upsert?: Prisma.vehicle_historyUpsertWithWhereUniqueWithoutAutoInput | Prisma.vehicle_historyUpsertWithWhereUniqueWithoutAutoInput[]
  createMany?: Prisma.vehicle_historyCreateManyAutoInputEnvelope
  set?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
  disconnect?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
  delete?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
  connect?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
  update?: Prisma.vehicle_historyUpdateWithWhereUniqueWithoutAutoInput | Prisma.vehicle_historyUpdateWithWhereUniqueWithoutAutoInput[]
  updateMany?: Prisma.vehicle_historyUpdateManyWithWhereWithoutAutoInput | Prisma.vehicle_historyUpdateManyWithWhereWithoutAutoInput[]
  deleteMany?: Prisma.vehicle_historyScalarWhereInput | Prisma.vehicle_historyScalarWhereInput[]
}

export type vehicle_historyCreateNestedManyWithoutUsersInput = {
  create?: Prisma.XOR<Prisma.vehicle_historyCreateWithoutUsersInput, Prisma.vehicle_historyUncheckedCreateWithoutUsersInput> | Prisma.vehicle_historyCreateWithoutUsersInput[] | Prisma.vehicle_historyUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.vehicle_historyCreateOrConnectWithoutUsersInput | Prisma.vehicle_historyCreateOrConnectWithoutUsersInput[]
  createMany?: Prisma.vehicle_historyCreateManyUsersInputEnvelope
  connect?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
}

export type vehicle_historyUncheckedCreateNestedManyWithoutUsersInput = {
  create?: Prisma.XOR<Prisma.vehicle_historyCreateWithoutUsersInput, Prisma.vehicle_historyUncheckedCreateWithoutUsersInput> | Prisma.vehicle_historyCreateWithoutUsersInput[] | Prisma.vehicle_historyUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.vehicle_historyCreateOrConnectWithoutUsersInput | Prisma.vehicle_historyCreateOrConnectWithoutUsersInput[]
  createMany?: Prisma.vehicle_historyCreateManyUsersInputEnvelope
  connect?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
}

export type vehicle_historyUpdateManyWithoutUsersNestedInput = {
  create?: Prisma.XOR<Prisma.vehicle_historyCreateWithoutUsersInput, Prisma.vehicle_historyUncheckedCreateWithoutUsersInput> | Prisma.vehicle_historyCreateWithoutUsersInput[] | Prisma.vehicle_historyUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.vehicle_historyCreateOrConnectWithoutUsersInput | Prisma.vehicle_historyCreateOrConnectWithoutUsersInput[]
  upsert?: Prisma.vehicle_historyUpsertWithWhereUniqueWithoutUsersInput | Prisma.vehicle_historyUpsertWithWhereUniqueWithoutUsersInput[]
  createMany?: Prisma.vehicle_historyCreateManyUsersInputEnvelope
  set?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
  disconnect?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
  delete?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
  connect?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
  update?: Prisma.vehicle_historyUpdateWithWhereUniqueWithoutUsersInput | Prisma.vehicle_historyUpdateWithWhereUniqueWithoutUsersInput[]
  updateMany?: Prisma.vehicle_historyUpdateManyWithWhereWithoutUsersInput | Prisma.vehicle_historyUpdateManyWithWhereWithoutUsersInput[]
  deleteMany?: Prisma.vehicle_historyScalarWhereInput | Prisma.vehicle_historyScalarWhereInput[]
}

export type vehicle_historyUncheckedUpdateManyWithoutUsersNestedInput = {
  create?: Prisma.XOR<Prisma.vehicle_historyCreateWithoutUsersInput, Prisma.vehicle_historyUncheckedCreateWithoutUsersInput> | Prisma.vehicle_historyCreateWithoutUsersInput[] | Prisma.vehicle_historyUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.vehicle_historyCreateOrConnectWithoutUsersInput | Prisma.vehicle_historyCreateOrConnectWithoutUsersInput[]
  upsert?: Prisma.vehicle_historyUpsertWithWhereUniqueWithoutUsersInput | Prisma.vehicle_historyUpsertWithWhereUniqueWithoutUsersInput[]
  createMany?: Prisma.vehicle_historyCreateManyUsersInputEnvelope
  set?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
  disconnect?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
  delete?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
  connect?: Prisma.vehicle_historyWhereUniqueInput | Prisma.vehicle_historyWhereUniqueInput[]
  update?: Prisma.vehicle_historyUpdateWithWhereUniqueWithoutUsersInput | Prisma.vehicle_historyUpdateWithWhereUniqueWithoutUsersInput[]
  updateMany?: Prisma.vehicle_historyUpdateManyWithWhereWithoutUsersInput | Prisma.vehicle_historyUpdateManyWithWhereWithoutUsersInput[]
  deleteMany?: Prisma.vehicle_historyScalarWhereInput | Prisma.vehicle_historyScalarWhereInput[]
}

export type vehicle_historyCreateWithoutAutoInput = {
  registered?: boolean | null
  registered_start?: Date | string | null
  registered_end?: Date | string | null
  users: Prisma.usersCreateNestedOneWithoutVehicle_historyInput
}

export type vehicle_historyUncheckedCreateWithoutAutoInput = {
  history_id?: number
  user_id: number
  registered?: boolean | null
  registered_start?: Date | string | null
  registered_end?: Date | string | null
}

export type vehicle_historyCreateOrConnectWithoutAutoInput = {
  where: Prisma.vehicle_historyWhereUniqueInput
  create: Prisma.XOR<Prisma.vehicle_historyCreateWithoutAutoInput, Prisma.vehicle_historyUncheckedCreateWithoutAutoInput>
}

export type vehicle_historyCreateManyAutoInputEnvelope = {
  data: Prisma.vehicle_historyCreateManyAutoInput | Prisma.vehicle_historyCreateManyAutoInput[]
  skipDuplicates?: boolean
}

export type vehicle_historyUpsertWithWhereUniqueWithoutAutoInput = {
  where: Prisma.vehicle_historyWhereUniqueInput
  update: Prisma.XOR<Prisma.vehicle_historyUpdateWithoutAutoInput, Prisma.vehicle_historyUncheckedUpdateWithoutAutoInput>
  create: Prisma.XOR<Prisma.vehicle_historyCreateWithoutAutoInput, Prisma.vehicle_historyUncheckedCreateWithoutAutoInput>
}

export type vehicle_historyUpdateWithWhereUniqueWithoutAutoInput = {
  where: Prisma.vehicle_historyWhereUniqueInput
  data: Prisma.XOR<Prisma.vehicle_historyUpdateWithoutAutoInput, Prisma.vehicle_historyUncheckedUpdateWithoutAutoInput>
}

export type vehicle_historyUpdateManyWithWhereWithoutAutoInput = {
  where: Prisma.vehicle_historyScalarWhereInput
  data: Prisma.XOR<Prisma.vehicle_historyUpdateManyMutationInput, Prisma.vehicle_historyUncheckedUpdateManyWithoutAutoInput>
}

export type vehicle_historyScalarWhereInput = {
  AND?: Prisma.vehicle_historyScalarWhereInput | Prisma.vehicle_historyScalarWhereInput[]
  OR?: Prisma.vehicle_historyScalarWhereInput[]
  NOT?: Prisma.vehicle_historyScalarWhereInput | Prisma.vehicle_historyScalarWhereInput[]
  history_id?: Prisma.IntFilter<"vehicle_history"> | number
  vehicle_id?: Prisma.IntFilter<"vehicle_history"> | number
  user_id?: Prisma.IntFilter<"vehicle_history"> | number
  registered?: Prisma.BoolNullableFilter<"vehicle_history"> | boolean | null
  registered_start?: Prisma.DateTimeNullableFilter<"vehicle_history"> | Date | string | null
  registered_end?: Prisma.DateTimeNullableFilter<"vehicle_history"> | Date | string | null
}

export type vehicle_historyCreateWithoutUsersInput = {
  registered?: boolean | null
  registered_start?: Date | string | null
  registered_end?: Date | string | null
  auto: Prisma.autoCreateNestedOneWithoutVehicle_historyInput
}

export type vehicle_historyUncheckedCreateWithoutUsersInput = {
  history_id?: number
  vehicle_id: number
  registered?: boolean | null
  registered_start?: Date | string | null
  registered_end?: Date | string | null
}

export type vehicle_historyCreateOrConnectWithoutUsersInput = {
  where: Prisma.vehicle_historyWhereUniqueInput
  create: Prisma.XOR<Prisma.vehicle_historyCreateWithoutUsersInput, Prisma.vehicle_historyUncheckedCreateWithoutUsersInput>
}

export type vehicle_historyCreateManyUsersInputEnvelope = {
  data: Prisma.vehicle_historyCreateManyUsersInput | Prisma.vehicle_historyCreateManyUsersInput[]
  skipDuplicates?: boolean
}

export type vehicle_historyUpsertWithWhereUniqueWithoutUsersInput = {
  where: Prisma.vehicle_historyWhereUniqueInput
  update: Prisma.XOR<Prisma.vehicle_historyUpdateWithoutUsersInput, Prisma.vehicle_historyUncheckedUpdateWithoutUsersInput>
  create: Prisma.XOR<Prisma.vehicle_historyCreateWithoutUsersInput, Prisma.vehicle_historyUncheckedCreateWithoutUsersInput>
}

export type vehicle_historyUpdateWithWhereUniqueWithoutUsersInput = {
  where: Prisma.vehicle_historyWhereUniqueInput
  data: Prisma.XOR<Prisma.vehicle_historyUpdateWithoutUsersInput, Prisma.vehicle_historyUncheckedUpdateWithoutUsersInput>
}

export type vehicle_historyUpdateManyWithWhereWithoutUsersInput = {
  where: Prisma.vehicle_historyScalarWhereInput
  data: Prisma.XOR<Prisma.vehicle_historyUpdateManyMutationInput, Prisma.vehicle_historyUncheckedUpdateManyWithoutUsersInput>
}

export type vehicle_historyCreateManyAutoInput = {
  history_id?: number
  user_id: number
  registered?: boolean | null
  registered_start?: Date | string | null
  registered_end?: Date | string | null
}

export type vehicle_historyUpdateWithoutAutoInput = {
  registered?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  registered_start?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  registered_end?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  users?: Prisma.usersUpdateOneRequiredWithoutVehicle_historyNestedInput
}

export type vehicle_historyUncheckedUpdateWithoutAutoInput = {
  history_id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.IntFieldUpdateOperationsInput | number
  registered?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  registered_start?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  registered_end?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type vehicle_historyUncheckedUpdateManyWithoutAutoInput = {
  history_id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.IntFieldUpdateOperationsInput | number
  registered?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  registered_start?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  registered_end?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type vehicle_historyCreateManyUsersInput = {
  history_id?: number
  vehicle_id: number
  registered?: boolean | null
  registered_start?: Date | string | null
  registered_end?: Date | string | null
}

export type vehicle_historyUpdateWithoutUsersInput = {
  registered?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  registered_start?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  registered_end?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  auto?: Prisma.autoUpdateOneRequiredWithoutVehicle_historyNestedInput
}

export type vehicle_historyUncheckedUpdateWithoutUsersInput = {
  history_id?: Prisma.IntFieldUpdateOperationsInput | number
  vehicle_id?: Prisma.IntFieldUpdateOperationsInput | number
  registered?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  registered_start?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  registered_end?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type vehicle_historyUncheckedUpdateManyWithoutUsersInput = {
  history_id?: Prisma.IntFieldUpdateOperationsInput | number
  vehicle_id?: Prisma.IntFieldUpdateOperationsInput | number
  registered?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  registered_start?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  registered_end?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}



export type vehicle_historySelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  history_id?: boolean
  vehicle_id?: boolean
  user_id?: boolean
  registered?: boolean
  registered_start?: boolean
  registered_end?: boolean
  users?: boolean | Prisma.usersDefaultArgs<ExtArgs>
  auto?: boolean | Prisma.autoDefaultArgs<ExtArgs>
}, ExtArgs["result"]["vehicle_history"]>

export type vehicle_historySelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  history_id?: boolean
  vehicle_id?: boolean
  user_id?: boolean
  registered?: boolean
  registered_start?: boolean
  registered_end?: boolean
  users?: boolean | Prisma.usersDefaultArgs<ExtArgs>
  auto?: boolean | Prisma.autoDefaultArgs<ExtArgs>
}, ExtArgs["result"]["vehicle_history"]>

export type vehicle_historySelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  history_id?: boolean
  vehicle_id?: boolean
  user_id?: boolean
  registered?: boolean
  registered_start?: boolean
  registered_end?: boolean
  users?: boolean | Prisma.usersDefaultArgs<ExtArgs>
  auto?: boolean | Prisma.autoDefaultArgs<ExtArgs>
}, ExtArgs["result"]["vehicle_history"]>

export type vehicle_historySelectScalar = {
  history_id?: boolean
  vehicle_id?: boolean
  user_id?: boolean
  registered?: boolean
  registered_start?: boolean
  registered_end?: boolean
}

export type vehicle_historyOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"history_id" | "vehicle_id" | "user_id" | "registered" | "registered_start" | "registered_end", ExtArgs["result"]["vehicle_history"]>
export type vehicle_historyInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  users?: boolean | Prisma.usersDefaultArgs<ExtArgs>
  auto?: boolean | Prisma.autoDefaultArgs<ExtArgs>
}
export type vehicle_historyIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  users?: boolean | Prisma.usersDefaultArgs<ExtArgs>
  auto?: boolean | Prisma.autoDefaultArgs<ExtArgs>
}
export type vehicle_historyIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  users?: boolean | Prisma.usersDefaultArgs<ExtArgs>
  auto?: boolean | Prisma.autoDefaultArgs<ExtArgs>
}

export type $vehicle_historyPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "vehicle_history"
  objects: {
    users: Prisma.$usersPayload<ExtArgs>
    auto: Prisma.$autoPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    history_id: number
    vehicle_id: number
    user_id: number
    registered: boolean | null
    registered_start: Date | null
    registered_end: Date | null
  }, ExtArgs["result"]["vehicle_history"]>
  composites: {}
}

export type vehicle_historyGetPayload<S extends boolean | null | undefined | vehicle_historyDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$vehicle_historyPayload, S>

export type vehicle_historyCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<vehicle_historyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Vehicle_historyCountAggregateInputType | true
  }

export interface vehicle_historyDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['vehicle_history'], meta: { name: 'vehicle_history' } }
  /**
   * Find zero or one Vehicle_history that matches the filter.
   * @param {vehicle_historyFindUniqueArgs} args - Arguments to find a Vehicle_history
   * @example
   * // Get one Vehicle_history
   * const vehicle_history = await prisma.vehicle_history.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends vehicle_historyFindUniqueArgs>(args: Prisma.SelectSubset<T, vehicle_historyFindUniqueArgs<ExtArgs>>): Prisma.Prisma__vehicle_historyClient<runtime.Types.Result.GetResult<Prisma.$vehicle_historyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Vehicle_history that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {vehicle_historyFindUniqueOrThrowArgs} args - Arguments to find a Vehicle_history
   * @example
   * // Get one Vehicle_history
   * const vehicle_history = await prisma.vehicle_history.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends vehicle_historyFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, vehicle_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__vehicle_historyClient<runtime.Types.Result.GetResult<Prisma.$vehicle_historyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Vehicle_history that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {vehicle_historyFindFirstArgs} args - Arguments to find a Vehicle_history
   * @example
   * // Get one Vehicle_history
   * const vehicle_history = await prisma.vehicle_history.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends vehicle_historyFindFirstArgs>(args?: Prisma.SelectSubset<T, vehicle_historyFindFirstArgs<ExtArgs>>): Prisma.Prisma__vehicle_historyClient<runtime.Types.Result.GetResult<Prisma.$vehicle_historyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Vehicle_history that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {vehicle_historyFindFirstOrThrowArgs} args - Arguments to find a Vehicle_history
   * @example
   * // Get one Vehicle_history
   * const vehicle_history = await prisma.vehicle_history.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends vehicle_historyFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, vehicle_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__vehicle_historyClient<runtime.Types.Result.GetResult<Prisma.$vehicle_historyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Vehicle_histories that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {vehicle_historyFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Vehicle_histories
   * const vehicle_histories = await prisma.vehicle_history.findMany()
   * 
   * // Get first 10 Vehicle_histories
   * const vehicle_histories = await prisma.vehicle_history.findMany({ take: 10 })
   * 
   * // Only select the `history_id`
   * const vehicle_historyWithHistory_idOnly = await prisma.vehicle_history.findMany({ select: { history_id: true } })
   * 
   */
  findMany<T extends vehicle_historyFindManyArgs>(args?: Prisma.SelectSubset<T, vehicle_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$vehicle_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Vehicle_history.
   * @param {vehicle_historyCreateArgs} args - Arguments to create a Vehicle_history.
   * @example
   * // Create one Vehicle_history
   * const Vehicle_history = await prisma.vehicle_history.create({
   *   data: {
   *     // ... data to create a Vehicle_history
   *   }
   * })
   * 
   */
  create<T extends vehicle_historyCreateArgs>(args: Prisma.SelectSubset<T, vehicle_historyCreateArgs<ExtArgs>>): Prisma.Prisma__vehicle_historyClient<runtime.Types.Result.GetResult<Prisma.$vehicle_historyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Vehicle_histories.
   * @param {vehicle_historyCreateManyArgs} args - Arguments to create many Vehicle_histories.
   * @example
   * // Create many Vehicle_histories
   * const vehicle_history = await prisma.vehicle_history.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends vehicle_historyCreateManyArgs>(args?: Prisma.SelectSubset<T, vehicle_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Vehicle_histories and returns the data saved in the database.
   * @param {vehicle_historyCreateManyAndReturnArgs} args - Arguments to create many Vehicle_histories.
   * @example
   * // Create many Vehicle_histories
   * const vehicle_history = await prisma.vehicle_history.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Vehicle_histories and only return the `history_id`
   * const vehicle_historyWithHistory_idOnly = await prisma.vehicle_history.createManyAndReturn({
   *   select: { history_id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends vehicle_historyCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, vehicle_historyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$vehicle_historyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Vehicle_history.
   * @param {vehicle_historyDeleteArgs} args - Arguments to delete one Vehicle_history.
   * @example
   * // Delete one Vehicle_history
   * const Vehicle_history = await prisma.vehicle_history.delete({
   *   where: {
   *     // ... filter to delete one Vehicle_history
   *   }
   * })
   * 
   */
  delete<T extends vehicle_historyDeleteArgs>(args: Prisma.SelectSubset<T, vehicle_historyDeleteArgs<ExtArgs>>): Prisma.Prisma__vehicle_historyClient<runtime.Types.Result.GetResult<Prisma.$vehicle_historyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Vehicle_history.
   * @param {vehicle_historyUpdateArgs} args - Arguments to update one Vehicle_history.
   * @example
   * // Update one Vehicle_history
   * const vehicle_history = await prisma.vehicle_history.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends vehicle_historyUpdateArgs>(args: Prisma.SelectSubset<T, vehicle_historyUpdateArgs<ExtArgs>>): Prisma.Prisma__vehicle_historyClient<runtime.Types.Result.GetResult<Prisma.$vehicle_historyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Vehicle_histories.
   * @param {vehicle_historyDeleteManyArgs} args - Arguments to filter Vehicle_histories to delete.
   * @example
   * // Delete a few Vehicle_histories
   * const { count } = await prisma.vehicle_history.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends vehicle_historyDeleteManyArgs>(args?: Prisma.SelectSubset<T, vehicle_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Vehicle_histories.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {vehicle_historyUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Vehicle_histories
   * const vehicle_history = await prisma.vehicle_history.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends vehicle_historyUpdateManyArgs>(args: Prisma.SelectSubset<T, vehicle_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Vehicle_histories and returns the data updated in the database.
   * @param {vehicle_historyUpdateManyAndReturnArgs} args - Arguments to update many Vehicle_histories.
   * @example
   * // Update many Vehicle_histories
   * const vehicle_history = await prisma.vehicle_history.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Vehicle_histories and only return the `history_id`
   * const vehicle_historyWithHistory_idOnly = await prisma.vehicle_history.updateManyAndReturn({
   *   select: { history_id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends vehicle_historyUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, vehicle_historyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$vehicle_historyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Vehicle_history.
   * @param {vehicle_historyUpsertArgs} args - Arguments to update or create a Vehicle_history.
   * @example
   * // Update or create a Vehicle_history
   * const vehicle_history = await prisma.vehicle_history.upsert({
   *   create: {
   *     // ... data to create a Vehicle_history
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Vehicle_history we want to update
   *   }
   * })
   */
  upsert<T extends vehicle_historyUpsertArgs>(args: Prisma.SelectSubset<T, vehicle_historyUpsertArgs<ExtArgs>>): Prisma.Prisma__vehicle_historyClient<runtime.Types.Result.GetResult<Prisma.$vehicle_historyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Vehicle_histories.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {vehicle_historyCountArgs} args - Arguments to filter Vehicle_histories to count.
   * @example
   * // Count the number of Vehicle_histories
   * const count = await prisma.vehicle_history.count({
   *   where: {
   *     // ... the filter for the Vehicle_histories we want to count
   *   }
   * })
  **/
  count<T extends vehicle_historyCountArgs>(
    args?: Prisma.Subset<T, vehicle_historyCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Vehicle_historyCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Vehicle_history.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Vehicle_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Vehicle_historyAggregateArgs>(args: Prisma.Subset<T, Vehicle_historyAggregateArgs>): Prisma.PrismaPromise<GetVehicle_historyAggregateType<T>>

  /**
   * Group by Vehicle_history.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {vehicle_historyGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends vehicle_historyGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: vehicle_historyGroupByArgs['orderBy'] }
      : { orderBy?: vehicle_historyGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, vehicle_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVehicle_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the vehicle_history model
 */
readonly fields: vehicle_historyFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for vehicle_history.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__vehicle_historyClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  users<T extends Prisma.usersDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.usersDefaultArgs<ExtArgs>>): Prisma.Prisma__usersClient<runtime.Types.Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  auto<T extends Prisma.autoDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.autoDefaultArgs<ExtArgs>>): Prisma.Prisma__autoClient<runtime.Types.Result.GetResult<Prisma.$autoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the vehicle_history model
 */
export interface vehicle_historyFieldRefs {
  readonly history_id: Prisma.FieldRef<"vehicle_history", 'Int'>
  readonly vehicle_id: Prisma.FieldRef<"vehicle_history", 'Int'>
  readonly user_id: Prisma.FieldRef<"vehicle_history", 'Int'>
  readonly registered: Prisma.FieldRef<"vehicle_history", 'Boolean'>
  readonly registered_start: Prisma.FieldRef<"vehicle_history", 'DateTime'>
  readonly registered_end: Prisma.FieldRef<"vehicle_history", 'DateTime'>
}
    

// Custom InputTypes
/**
 * vehicle_history findUnique
 */
export type vehicle_historyFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the vehicle_history
   */
  select?: Prisma.vehicle_historySelect<ExtArgs> | null
  /**
   * Omit specific fields from the vehicle_history
   */
  omit?: Prisma.vehicle_historyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.vehicle_historyInclude<ExtArgs> | null
  /**
   * Filter, which vehicle_history to fetch.
   */
  where: Prisma.vehicle_historyWhereUniqueInput
}

/**
 * vehicle_history findUniqueOrThrow
 */
export type vehicle_historyFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the vehicle_history
   */
  select?: Prisma.vehicle_historySelect<ExtArgs> | null
  /**
   * Omit specific fields from the vehicle_history
   */
  omit?: Prisma.vehicle_historyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.vehicle_historyInclude<ExtArgs> | null
  /**
   * Filter, which vehicle_history to fetch.
   */
  where: Prisma.vehicle_historyWhereUniqueInput
}

/**
 * vehicle_history findFirst
 */
export type vehicle_historyFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the vehicle_history
   */
  select?: Prisma.vehicle_historySelect<ExtArgs> | null
  /**
   * Omit specific fields from the vehicle_history
   */
  omit?: Prisma.vehicle_historyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.vehicle_historyInclude<ExtArgs> | null
  /**
   * Filter, which vehicle_history to fetch.
   */
  where?: Prisma.vehicle_historyWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of vehicle_histories to fetch.
   */
  orderBy?: Prisma.vehicle_historyOrderByWithRelationInput | Prisma.vehicle_historyOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for vehicle_histories.
   */
  cursor?: Prisma.vehicle_historyWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` vehicle_histories from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` vehicle_histories.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of vehicle_histories.
   */
  distinct?: Prisma.Vehicle_historyScalarFieldEnum | Prisma.Vehicle_historyScalarFieldEnum[]
}

/**
 * vehicle_history findFirstOrThrow
 */
export type vehicle_historyFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the vehicle_history
   */
  select?: Prisma.vehicle_historySelect<ExtArgs> | null
  /**
   * Omit specific fields from the vehicle_history
   */
  omit?: Prisma.vehicle_historyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.vehicle_historyInclude<ExtArgs> | null
  /**
   * Filter, which vehicle_history to fetch.
   */
  where?: Prisma.vehicle_historyWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of vehicle_histories to fetch.
   */
  orderBy?: Prisma.vehicle_historyOrderByWithRelationInput | Prisma.vehicle_historyOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for vehicle_histories.
   */
  cursor?: Prisma.vehicle_historyWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` vehicle_histories from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` vehicle_histories.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of vehicle_histories.
   */
  distinct?: Prisma.Vehicle_historyScalarFieldEnum | Prisma.Vehicle_historyScalarFieldEnum[]
}

/**
 * vehicle_history findMany
 */
export type vehicle_historyFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the vehicle_history
   */
  select?: Prisma.vehicle_historySelect<ExtArgs> | null
  /**
   * Omit specific fields from the vehicle_history
   */
  omit?: Prisma.vehicle_historyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.vehicle_historyInclude<ExtArgs> | null
  /**
   * Filter, which vehicle_histories to fetch.
   */
  where?: Prisma.vehicle_historyWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of vehicle_histories to fetch.
   */
  orderBy?: Prisma.vehicle_historyOrderByWithRelationInput | Prisma.vehicle_historyOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing vehicle_histories.
   */
  cursor?: Prisma.vehicle_historyWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` vehicle_histories from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` vehicle_histories.
   */
  skip?: number
  distinct?: Prisma.Vehicle_historyScalarFieldEnum | Prisma.Vehicle_historyScalarFieldEnum[]
}

/**
 * vehicle_history create
 */
export type vehicle_historyCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the vehicle_history
   */
  select?: Prisma.vehicle_historySelect<ExtArgs> | null
  /**
   * Omit specific fields from the vehicle_history
   */
  omit?: Prisma.vehicle_historyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.vehicle_historyInclude<ExtArgs> | null
  /**
   * The data needed to create a vehicle_history.
   */
  data: Prisma.XOR<Prisma.vehicle_historyCreateInput, Prisma.vehicle_historyUncheckedCreateInput>
}

/**
 * vehicle_history createMany
 */
export type vehicle_historyCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many vehicle_histories.
   */
  data: Prisma.vehicle_historyCreateManyInput | Prisma.vehicle_historyCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * vehicle_history createManyAndReturn
 */
export type vehicle_historyCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the vehicle_history
   */
  select?: Prisma.vehicle_historySelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the vehicle_history
   */
  omit?: Prisma.vehicle_historyOmit<ExtArgs> | null
  /**
   * The data used to create many vehicle_histories.
   */
  data: Prisma.vehicle_historyCreateManyInput | Prisma.vehicle_historyCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.vehicle_historyIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * vehicle_history update
 */
export type vehicle_historyUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the vehicle_history
   */
  select?: Prisma.vehicle_historySelect<ExtArgs> | null
  /**
   * Omit specific fields from the vehicle_history
   */
  omit?: Prisma.vehicle_historyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.vehicle_historyInclude<ExtArgs> | null
  /**
   * The data needed to update a vehicle_history.
   */
  data: Prisma.XOR<Prisma.vehicle_historyUpdateInput, Prisma.vehicle_historyUncheckedUpdateInput>
  /**
   * Choose, which vehicle_history to update.
   */
  where: Prisma.vehicle_historyWhereUniqueInput
}

/**
 * vehicle_history updateMany
 */
export type vehicle_historyUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update vehicle_histories.
   */
  data: Prisma.XOR<Prisma.vehicle_historyUpdateManyMutationInput, Prisma.vehicle_historyUncheckedUpdateManyInput>
  /**
   * Filter which vehicle_histories to update
   */
  where?: Prisma.vehicle_historyWhereInput
  /**
   * Limit how many vehicle_histories to update.
   */
  limit?: number
}

/**
 * vehicle_history updateManyAndReturn
 */
export type vehicle_historyUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the vehicle_history
   */
  select?: Prisma.vehicle_historySelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the vehicle_history
   */
  omit?: Prisma.vehicle_historyOmit<ExtArgs> | null
  /**
   * The data used to update vehicle_histories.
   */
  data: Prisma.XOR<Prisma.vehicle_historyUpdateManyMutationInput, Prisma.vehicle_historyUncheckedUpdateManyInput>
  /**
   * Filter which vehicle_histories to update
   */
  where?: Prisma.vehicle_historyWhereInput
  /**
   * Limit how many vehicle_histories to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.vehicle_historyIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * vehicle_history upsert
 */
export type vehicle_historyUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the vehicle_history
   */
  select?: Prisma.vehicle_historySelect<ExtArgs> | null
  /**
   * Omit specific fields from the vehicle_history
   */
  omit?: Prisma.vehicle_historyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.vehicle_historyInclude<ExtArgs> | null
  /**
   * The filter to search for the vehicle_history to update in case it exists.
   */
  where: Prisma.vehicle_historyWhereUniqueInput
  /**
   * In case the vehicle_history found by the `where` argument doesn't exist, create a new vehicle_history with this data.
   */
  create: Prisma.XOR<Prisma.vehicle_historyCreateInput, Prisma.vehicle_historyUncheckedCreateInput>
  /**
   * In case the vehicle_history was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.vehicle_historyUpdateInput, Prisma.vehicle_historyUncheckedUpdateInput>
}

/**
 * vehicle_history delete
 */
export type vehicle_historyDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the vehicle_history
   */
  select?: Prisma.vehicle_historySelect<ExtArgs> | null
  /**
   * Omit specific fields from the vehicle_history
   */
  omit?: Prisma.vehicle_historyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.vehicle_historyInclude<ExtArgs> | null
  /**
   * Filter which vehicle_history to delete.
   */
  where: Prisma.vehicle_historyWhereUniqueInput
}

/**
 * vehicle_history deleteMany
 */
export type vehicle_historyDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which vehicle_histories to delete
   */
  where?: Prisma.vehicle_historyWhereInput
  /**
   * Limit how many vehicle_histories to delete.
   */
  limit?: number
}

/**
 * vehicle_history without action
 */
export type vehicle_historyDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the vehicle_history
   */
  select?: Prisma.vehicle_historySelect<ExtArgs> | null
  /**
   * Omit specific fields from the vehicle_history
   */
  omit?: Prisma.vehicle_historyOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.vehicle_historyInclude<ExtArgs> | null
}
